{"version":3,"file":"pdf-parse.es.js","sources":["../../node_modules/pdfjs-dist/legacy/build/pdf.worker.min.mjs?url","../../node_modules/pdfjs-dist/legacy/build/pdf.mjs","../../src/geometry/Shape.ts","../../src/geometry/Point.ts","../../src/geometry/Line.ts","../../src/geometry/TableData.ts","../../src/geometry/Table.ts","../../src/geometry/LineStore.ts","../../src/geometry/Rectangle.ts","../../src/HeaderResult.ts","../../src/ImageResult.ts","../../src/InfoResult.ts","../../src/ParseParameters.ts","../../src/PathGeometry.ts","../../src/ScreenshotResult.ts","../../src/TableResult.ts","../../src/TextResult.ts","../../src/PDFParse.ts","../../src/index.browser.ts"],"sourcesContent":["export default \"data:text/javascript;base64,\"","/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2024 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */\n\n/**\n * pdfjsVersion = 5.4.296\n * pdfjsBuild = f56dc8601\n */\n/******/ var __webpack_modules__ = ({\n\n/***/ 34:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar isCallable = __webpack_require__(4901);\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n\n\n/***/ }),\n\n/***/ 81:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar call = __webpack_require__(9565);\nvar aCallable = __webpack_require__(9306);\nvar anObject = __webpack_require__(8551);\nvar tryToString = __webpack_require__(6823);\nvar getIteratorMethod = __webpack_require__(851);\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;\n  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));\n  throw new $TypeError(tryToString(argument) + ' is not iterable');\n};\n\n\n/***/ }),\n\n/***/ 116:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar call = __webpack_require__(9565);\nvar iterate = __webpack_require__(2652);\nvar aCallable = __webpack_require__(9306);\nvar anObject = __webpack_require__(8551);\nvar getIteratorDirect = __webpack_require__(1767);\nvar iteratorClose = __webpack_require__(9539);\nvar iteratorHelperWithoutClosingOnEarlyError = __webpack_require__(4549);\n\nvar findWithoutClosingOnEarlyError = iteratorHelperWithoutClosingOnEarlyError('find', TypeError);\n\n// `Iterator.prototype.find` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.find\n$({ target: 'Iterator', proto: true, real: true, forced: findWithoutClosingOnEarlyError }, {\n  find: function find(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (findWithoutClosingOnEarlyError) return call(findWithoutClosingOnEarlyError, this, predicate);\n\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return iterate(record, function (value, stop) {\n      if (predicate(value, counter++)) return stop(value);\n    }, { IS_RECORD: true, INTERRUPTED: true }).result;\n  }\n});\n\n\n/***/ }),\n\n/***/ 283:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\nvar fails = __webpack_require__(9039);\nvar isCallable = __webpack_require__(4901);\nvar hasOwn = __webpack_require__(9297);\nvar DESCRIPTORS = __webpack_require__(3724);\nvar CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(350).CONFIGURABLE);\nvar inspectSource = __webpack_require__(3706);\nvar InternalStateModule = __webpack_require__(1181);\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\).*$/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n\n\n/***/ }),\n\n/***/ 350:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar DESCRIPTORS = __webpack_require__(3724);\nvar hasOwn = __webpack_require__(9297);\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n\n\n/***/ }),\n\n/***/ 397:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar getBuiltIn = __webpack_require__(7751);\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n\n\n/***/ }),\n\n/***/ 421:\n/***/ ((module) => {\n\n\nmodule.exports = {};\n\n\n/***/ }),\n\n/***/ 456:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar globalThis = __webpack_require__(4576);\nvar uncurryThis = __webpack_require__(9504);\nvar anUint8Array = __webpack_require__(4154);\nvar notDetached = __webpack_require__(5169);\n\nvar numberToString = uncurryThis(1.1.toString);\n\nvar Uint8Array = globalThis.Uint8Array;\n\nvar INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS = !Uint8Array || !Uint8Array.prototype.toHex || !(function () {\n  try {\n    var target = new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255]);\n    return target.toHex() === 'ffffffffffffffff';\n  } catch (error) {\n    return false;\n  }\n})();\n\n// `Uint8Array.prototype.toHex` method\n// https://github.com/tc39/proposal-arraybuffer-base64\nif (Uint8Array) $({ target: 'Uint8Array', proto: true, forced: INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS }, {\n  toHex: function toHex() {\n    anUint8Array(this);\n    notDetached(this.buffer);\n    var result = '';\n    for (var i = 0, length = this.length; i < length; i++) {\n      var hex = numberToString(this[i], 16);\n      result += hex.length === 1 ? '0' + hex : hex;\n    }\n    return result;\n  }\n});\n\n\n/***/ }),\n\n/***/ 507:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar call = __webpack_require__(9565);\n\nmodule.exports = function (record, fn, ITERATOR_INSTEAD_OF_RECORD) {\n  var iterator = ITERATOR_INSTEAD_OF_RECORD ? record : record.iterator;\n  var next = record.next;\n  var step, result;\n  while (!(step = call(next, iterator)).done) {\n    result = fn(step.value);\n    if (result !== undefined) return result;\n  }\n};\n\n\n/***/ }),\n\n/***/ 531:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar call = __webpack_require__(9565);\nvar aCallable = __webpack_require__(9306);\nvar anObject = __webpack_require__(8551);\nvar getIteratorDirect = __webpack_require__(1767);\nvar getIteratorFlattenable = __webpack_require__(8646);\nvar createIteratorProxy = __webpack_require__(9462);\nvar iteratorClose = __webpack_require__(9539);\nvar IS_PURE = __webpack_require__(6395);\nvar iteratorHelperThrowsOnInvalidIterator = __webpack_require__(684);\nvar iteratorHelperWithoutClosingOnEarlyError = __webpack_require__(4549);\n\nvar FLAT_MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR = !IS_PURE\n  && !iteratorHelperThrowsOnInvalidIterator('flatMap', function () { /* empty */ });\nvar flatMapWithoutClosingOnEarlyError = !IS_PURE && !FLAT_MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR\n  && iteratorHelperWithoutClosingOnEarlyError('flatMap', TypeError);\n\nvar FORCED = IS_PURE || FLAT_MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR || flatMapWithoutClosingOnEarlyError;\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var mapper = this.mapper;\n  var result, inner;\n\n  while (true) {\n    if (inner = this.inner) try {\n      result = anObject(call(inner.next, inner.iterator));\n      if (!result.done) return result.value;\n      this.inner = null;\n    } catch (error) { iteratorClose(iterator, 'throw', error); }\n\n    result = anObject(call(this.next, iterator));\n\n    if (this.done = !!result.done) return;\n\n    try {\n      this.inner = getIteratorFlattenable(mapper(result.value, this.counter++), false);\n    } catch (error) { iteratorClose(iterator, 'throw', error); }\n  }\n});\n\n// `Iterator.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.flatmap\n$({ target: 'Iterator', proto: true, real: true, forced: FORCED }, {\n  flatMap: function flatMap(mapper) {\n    anObject(this);\n    try {\n      aCallable(mapper);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (flatMapWithoutClosingOnEarlyError) return call(flatMapWithoutClosingOnEarlyError, this, mapper);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      mapper: mapper,\n      inner: null\n    });\n  }\n});\n\n\n/***/ }),\n\n/***/ 616:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar fails = __webpack_require__(9039);\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n\n\n/***/ }),\n\n/***/ 655:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar classof = __webpack_require__(6955);\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n\n\n/***/ }),\n\n/***/ 679:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar isPrototypeOf = __webpack_require__(1625);\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it, Prototype) {\n  if (isPrototypeOf(Prototype, it)) return it;\n  throw new $TypeError('Incorrect invocation');\n};\n\n\n/***/ }),\n\n/***/ 684:\n/***/ ((module) => {\n\n\n// Should throw an error on invalid iterator\n// https://issues.chromium.org/issues/336839115\nmodule.exports = function (methodName, argument) {\n  // eslint-disable-next-line es/no-iterator -- required for testing\n  var method = typeof Iterator == 'function' && Iterator.prototype[methodName];\n  if (method) try {\n    method.call({ next: null }, argument).next();\n  } catch (error) {\n    return true;\n  }\n};\n\n\n/***/ }),\n\n/***/ 741:\n/***/ ((module) => {\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n\n\n/***/ }),\n\n/***/ 757:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar getBuiltIn = __webpack_require__(7751);\nvar isCallable = __webpack_require__(4901);\nvar isPrototypeOf = __webpack_require__(1625);\nvar USE_SYMBOL_AS_UID = __webpack_require__(7040);\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n\n\n/***/ }),\n\n/***/ 851:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar classof = __webpack_require__(6955);\nvar getMethod = __webpack_require__(5966);\nvar isNullOrUndefined = __webpack_require__(4117);\nvar Iterators = __webpack_require__(6269);\nvar wellKnownSymbol = __webpack_require__(8227);\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR)\n    || getMethod(it, '@@iterator')\n    || Iterators[classof(it)];\n};\n\n\n/***/ }),\n\n/***/ 944:\n/***/ ((module) => {\n\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (options) {\n  var alphabet = options && options.alphabet;\n  if (alphabet === undefined || alphabet === 'base64' || alphabet === 'base64url') return alphabet || 'base64';\n  throw new $TypeError('Incorrect `alphabet` option');\n};\n\n\n/***/ }),\n\n/***/ 1072:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar internalObjectKeys = __webpack_require__(1828);\nvar enumBugKeys = __webpack_require__(8727);\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n\n\n/***/ }),\n\n/***/ 1103:\n/***/ ((module) => {\n\n\nmodule.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n\n\n/***/ }),\n\n/***/ 1108:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar classof = __webpack_require__(6955);\n\nmodule.exports = function (it) {\n  var klass = classof(it);\n  return klass === 'BigInt64Array' || klass === 'BigUint64Array';\n};\n\n\n/***/ }),\n\n/***/ 1148:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar call = __webpack_require__(9565);\nvar iterate = __webpack_require__(2652);\nvar aCallable = __webpack_require__(9306);\nvar anObject = __webpack_require__(8551);\nvar getIteratorDirect = __webpack_require__(1767);\nvar iteratorClose = __webpack_require__(9539);\nvar iteratorHelperWithoutClosingOnEarlyError = __webpack_require__(4549);\n\nvar everyWithoutClosingOnEarlyError = iteratorHelperWithoutClosingOnEarlyError('every', TypeError);\n\n// `Iterator.prototype.every` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.every\n$({ target: 'Iterator', proto: true, real: true, forced: everyWithoutClosingOnEarlyError }, {\n  every: function every(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (everyWithoutClosingOnEarlyError) return call(everyWithoutClosingOnEarlyError, this, predicate);\n\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return !iterate(record, function (value, stop) {\n      if (!predicate(value, counter++)) return stop();\n    }, { IS_RECORD: true, INTERRUPTED: true }).stopped;\n  }\n});\n\n\n/***/ }),\n\n/***/ 1181:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar NATIVE_WEAK_MAP = __webpack_require__(8622);\nvar globalThis = __webpack_require__(4576);\nvar isObject = __webpack_require__(34);\nvar createNonEnumerableProperty = __webpack_require__(6699);\nvar hasOwn = __webpack_require__(9297);\nvar shared = __webpack_require__(7629);\nvar sharedKey = __webpack_require__(6119);\nvar hiddenKeys = __webpack_require__(421);\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = globalThis.TypeError;\nvar WeakMap = globalThis.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n\n\n/***/ }),\n\n/***/ 1291:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar trunc = __webpack_require__(741);\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n\n\n/***/ }),\n\n/***/ 1385:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar iteratorClose = __webpack_require__(9539);\n\nmodule.exports = function (iters, kind, value) {\n  for (var i = iters.length - 1; i >= 0; i--) {\n    if (iters[i] === undefined) continue;\n    try {\n      value = iteratorClose(iters[i].iterator, kind, value);\n    } catch (error) {\n      kind = 'throw';\n      value = error;\n    }\n  }\n  if (kind === 'throw') throw value;\n  return value;\n};\n\n\n/***/ }),\n\n/***/ 1548:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar fails = __webpack_require__(9039);\nvar V8 = __webpack_require__(9519);\nvar ENVIRONMENT = __webpack_require__(4215);\n\nvar structuredClone = globalThis.structuredClone;\n\nmodule.exports = !!structuredClone && !fails(function () {\n  // prevent V8 ArrayBufferDetaching protector cell invalidation and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if ((ENVIRONMENT === 'DENO' && V8 > 92) || (ENVIRONMENT === 'NODE' && V8 > 94) || (ENVIRONMENT === 'BROWSER' && V8 > 97)) return false;\n  var buffer = new ArrayBuffer(8);\n  var clone = structuredClone(buffer, { transfer: [buffer] });\n  return buffer.byteLength !== 0 || clone.byteLength !== 8;\n});\n\n\n/***/ }),\n\n/***/ 1549:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\n// TODO: Remove from `core-js@4`\n__webpack_require__(6632);\n\n\n/***/ }),\n\n/***/ 1625:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n\n\n/***/ }),\n\n/***/ 1689:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar globalThis = __webpack_require__(4576);\nvar apply = __webpack_require__(8745);\nvar slice = __webpack_require__(7680);\nvar newPromiseCapabilityModule = __webpack_require__(6043);\nvar aCallable = __webpack_require__(9306);\nvar perform = __webpack_require__(1103);\n\nvar Promise = globalThis.Promise;\n\nvar ACCEPT_ARGUMENTS = false;\n// Avoiding the use of polyfills of the previous iteration of this proposal\n// that does not accept arguments of the callback\nvar FORCED = !Promise || !Promise['try'] || perform(function () {\n  Promise['try'](function (argument) {\n    ACCEPT_ARGUMENTS = argument === 8;\n  }, 8);\n}).error || !ACCEPT_ARGUMENTS;\n\n// `Promise.try` method\n// https://tc39.es/ecma262/#sec-promise.try\n$({ target: 'Promise', stat: true, forced: FORCED }, {\n  'try': function (callbackfn /* , ...args */) {\n    var args = arguments.length > 1 ? slice(arguments, 1) : [];\n    var promiseCapability = newPromiseCapabilityModule.f(this);\n    var result = perform(function () {\n      return apply(aCallable(callbackfn), undefined, args);\n    });\n    (result.error ? promiseCapability.reject : promiseCapability.resolve)(result.value);\n    return promiseCapability.promise;\n  }\n});\n\n\n/***/ }),\n\n/***/ 1698:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar union = __webpack_require__(4204);\nvar setMethodGetKeysBeforeCloning = __webpack_require__(9835);\nvar setMethodAcceptSetLike = __webpack_require__(4916);\n\nvar FORCED = !setMethodAcceptSetLike('union') || !setMethodGetKeysBeforeCloning('union');\n\n// `Set.prototype.union` method\n// https://tc39.es/ecma262/#sec-set.prototype.union\n$({ target: 'Set', proto: true, real: true, forced: FORCED }, {\n  union: union\n});\n\n\n/***/ }),\n\n/***/ 1701:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar call = __webpack_require__(9565);\nvar aCallable = __webpack_require__(9306);\nvar anObject = __webpack_require__(8551);\nvar getIteratorDirect = __webpack_require__(1767);\nvar createIteratorProxy = __webpack_require__(9462);\nvar callWithSafeIterationClosing = __webpack_require__(6319);\nvar iteratorClose = __webpack_require__(9539);\nvar iteratorHelperThrowsOnInvalidIterator = __webpack_require__(684);\nvar iteratorHelperWithoutClosingOnEarlyError = __webpack_require__(4549);\nvar IS_PURE = __webpack_require__(6395);\n\nvar MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR = !IS_PURE && !iteratorHelperThrowsOnInvalidIterator('map', function () { /* empty */ });\nvar mapWithoutClosingOnEarlyError = !IS_PURE && !MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR\n  && iteratorHelperWithoutClosingOnEarlyError('map', TypeError);\n\nvar FORCED = IS_PURE || MAP_WITHOUT_THROWING_ON_INVALID_ITERATOR || mapWithoutClosingOnEarlyError;\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var result = anObject(call(this.next, iterator));\n  var done = this.done = !!result.done;\n  if (!done) return callWithSafeIterationClosing(iterator, this.mapper, [result.value, this.counter++], true);\n});\n\n// `Iterator.prototype.map` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.map\n$({ target: 'Iterator', proto: true, real: true, forced: FORCED }, {\n  map: function map(mapper) {\n    anObject(this);\n    try {\n      aCallable(mapper);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (mapWithoutClosingOnEarlyError) return call(mapWithoutClosingOnEarlyError, this, mapper);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      mapper: mapper\n    });\n  }\n});\n\n\n/***/ }),\n\n/***/ 1767:\n/***/ ((module) => {\n\n\n// `GetIteratorDirect(obj)` abstract operation\n// https://tc39.es/ecma262/#sec-getiteratordirect\nmodule.exports = function (obj) {\n  return {\n    iterator: obj,\n    next: obj.next,\n    done: false\n  };\n};\n\n\n/***/ }),\n\n/***/ 1828:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\nvar hasOwn = __webpack_require__(9297);\nvar toIndexedObject = __webpack_require__(5397);\nvar indexOf = (__webpack_require__(9617).indexOf);\nvar hiddenKeys = __webpack_require__(421);\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n\n\n/***/ }),\n\n/***/ 2106:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar makeBuiltIn = __webpack_require__(283);\nvar defineProperty = __webpack_require__(4913);\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n\n\n/***/ }),\n\n/***/ 2140:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar wellKnownSymbol = __webpack_require__(8227);\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n\n\n/***/ }),\n\n/***/ 2195:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n\n\n/***/ }),\n\n/***/ 2211:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar fails = __webpack_require__(9039);\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n\n\n/***/ }),\n\n/***/ 2303:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar uncurryThis = __webpack_require__(9504);\n\nvar Uint8Array = globalThis.Uint8Array;\nvar SyntaxError = globalThis.SyntaxError;\nvar parseInt = globalThis.parseInt;\nvar min = Math.min;\nvar NOT_HEX = /[^\\da-f]/i;\nvar exec = uncurryThis(NOT_HEX.exec);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (string, into) {\n  var stringLength = string.length;\n  if (stringLength % 2 !== 0) throw new SyntaxError('String should be an even number of characters');\n  var maxLength = into ? min(into.length, stringLength / 2) : stringLength / 2;\n  var bytes = into || new Uint8Array(maxLength);\n  var read = 0;\n  var written = 0;\n  while (written < maxLength) {\n    var hexits = stringSlice(string, read, read += 2);\n    if (exec(NOT_HEX, hexits)) throw new SyntaxError('String should only contain hex characters');\n    bytes[written++] = parseInt(hexits, 16);\n  }\n  return { bytes: bytes, read: read };\n};\n\n\n/***/ }),\n\n/***/ 2360:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n/* global ActiveXObject -- old IE, WSH */\nvar anObject = __webpack_require__(8551);\nvar definePropertiesModule = __webpack_require__(6801);\nvar enumBugKeys = __webpack_require__(8727);\nvar hiddenKeys = __webpack_require__(421);\nvar html = __webpack_require__(397);\nvar documentCreateElement = __webpack_require__(4055);\nvar sharedKey = __webpack_require__(6119);\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  // eslint-disable-next-line no-useless-assignment -- avoid memory leak\n  activeXDocument = null;\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n\n\n/***/ }),\n\n/***/ 2475:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar isSupersetOf = __webpack_require__(8527);\nvar setMethodAcceptSetLike = __webpack_require__(4916);\n\nvar INCORRECT = !setMethodAcceptSetLike('isSupersetOf', function (result) {\n  return !result;\n});\n\n// `Set.prototype.isSupersetOf` method\n// https://tc39.es/ecma262/#sec-set.prototype.issupersetof\n$({ target: 'Set', proto: true, real: true, forced: INCORRECT }, {\n  isSupersetOf: isSupersetOf\n});\n\n\n/***/ }),\n\n/***/ 2489:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar call = __webpack_require__(9565);\nvar aCallable = __webpack_require__(9306);\nvar anObject = __webpack_require__(8551);\nvar getIteratorDirect = __webpack_require__(1767);\nvar createIteratorProxy = __webpack_require__(9462);\nvar callWithSafeIterationClosing = __webpack_require__(6319);\nvar IS_PURE = __webpack_require__(6395);\nvar iteratorClose = __webpack_require__(9539);\nvar iteratorHelperThrowsOnInvalidIterator = __webpack_require__(684);\nvar iteratorHelperWithoutClosingOnEarlyError = __webpack_require__(4549);\n\nvar FILTER_WITHOUT_THROWING_ON_INVALID_ITERATOR = !IS_PURE && !iteratorHelperThrowsOnInvalidIterator('filter', function () { /* empty */ });\nvar filterWithoutClosingOnEarlyError = !IS_PURE && !FILTER_WITHOUT_THROWING_ON_INVALID_ITERATOR\n  && iteratorHelperWithoutClosingOnEarlyError('filter', TypeError);\n\nvar FORCED = IS_PURE || FILTER_WITHOUT_THROWING_ON_INVALID_ITERATOR || filterWithoutClosingOnEarlyError;\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var predicate = this.predicate;\n  var next = this.next;\n  var result, done, value;\n  while (true) {\n    result = anObject(call(next, iterator));\n    done = this.done = !!result.done;\n    if (done) return;\n    value = result.value;\n    if (callWithSafeIterationClosing(iterator, predicate, [value, this.counter++], true)) return value;\n  }\n});\n\n// `Iterator.prototype.filter` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.filter\n$({ target: 'Iterator', proto: true, real: true, forced: FORCED }, {\n  filter: function filter(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (filterWithoutClosingOnEarlyError) return call(filterWithoutClosingOnEarlyError, this, predicate);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      predicate: predicate\n    });\n  }\n});\n\n\n/***/ }),\n\n/***/ 2529:\n/***/ ((module) => {\n\n\n// `CreateIterResultObject` abstract operation\n// https://tc39.es/ecma262/#sec-createiterresultobject\nmodule.exports = function (value, done) {\n  return { value: value, done: done };\n};\n\n\n/***/ }),\n\n/***/ 2603:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar toString = __webpack_require__(655);\n\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};\n\n\n/***/ }),\n\n/***/ 2652:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar bind = __webpack_require__(6080);\nvar call = __webpack_require__(9565);\nvar anObject = __webpack_require__(8551);\nvar tryToString = __webpack_require__(6823);\nvar isArrayIteratorMethod = __webpack_require__(4209);\nvar lengthOfArrayLike = __webpack_require__(6198);\nvar isPrototypeOf = __webpack_require__(1625);\nvar getIterator = __webpack_require__(81);\nvar getIteratorMethod = __webpack_require__(851);\nvar iteratorClose = __webpack_require__(9539);\n\nvar $TypeError = TypeError;\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar ResultPrototype = Result.prototype;\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_RECORD = !!(options && options.IS_RECORD);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'normal');\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_RECORD) {\n    iterator = iterable.iterator;\n  } else if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (!iterFn) throw new $TypeError(tryToString(iterable) + ' is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && isPrototypeOf(ResultPrototype, result)) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = IS_RECORD ? iterable.next : iterator.next;\n  while (!(step = call(next, iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;\n  } return new Result(false);\n};\n\n\n/***/ }),\n\n/***/ 2777:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar call = __webpack_require__(9565);\nvar isObject = __webpack_require__(34);\nvar isSymbol = __webpack_require__(757);\nvar getMethod = __webpack_require__(5966);\nvar ordinaryToPrimitive = __webpack_require__(4270);\nvar wellKnownSymbol = __webpack_require__(8227);\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw new $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n\n\n/***/ }),\n\n/***/ 2787:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar hasOwn = __webpack_require__(9297);\nvar isCallable = __webpack_require__(4901);\nvar toObject = __webpack_require__(8981);\nvar sharedKey = __webpack_require__(6119);\nvar CORRECT_PROTOTYPE_GETTER = __webpack_require__(2211);\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n\n\n/***/ }),\n\n/***/ 2796:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar fails = __webpack_require__(9039);\nvar isCallable = __webpack_require__(4901);\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true\n    : value === NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n\n\n/***/ }),\n\n/***/ 2804:\n/***/ ((module) => {\n\n\nvar commonAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nvar base64Alphabet = commonAlphabet + '+/';\nvar base64UrlAlphabet = commonAlphabet + '-_';\n\nvar inverse = function (characters) {\n  // TODO: use `Object.create(null)` in `core-js@4`\n  var result = {};\n  var index = 0;\n  for (; index < 64; index++) result[characters.charAt(index)] = index;\n  return result;\n};\n\nmodule.exports = {\n  i2c: base64Alphabet,\n  c2i: inverse(base64Alphabet),\n  i2cUrl: base64UrlAlphabet,\n  c2iUrl: inverse(base64UrlAlphabet)\n};\n\n\n/***/ }),\n\n/***/ 2812:\n/***/ ((module) => {\n\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n\n\n/***/ }),\n\n/***/ 2839:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\n\nvar navigator = globalThis.navigator;\nvar userAgent = navigator && navigator.userAgent;\n\nmodule.exports = userAgent ? String(userAgent) : '';\n\n\n/***/ }),\n\n/***/ 2967:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = __webpack_require__(6706);\nvar isObject = __webpack_require__(34);\nvar requireObjectCoercible = __webpack_require__(7750);\nvar aPossiblePrototype = __webpack_require__(3506);\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    requireObjectCoercible(O);\n    aPossiblePrototype(proto);\n    if (!isObject(O)) return O;\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n\n\n/***/ }),\n\n/***/ 3068:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\n// based on Shewchuk's algorithm for exactly floating point addition\n// adapted from https://github.com/tc39/proposal-math-sum/blob/3513d58323a1ae25560e8700aa5294500c6c9287/polyfill/polyfill.mjs\nvar $ = __webpack_require__(6518);\nvar uncurryThis = __webpack_require__(9504);\nvar iterate = __webpack_require__(2652);\n\nvar $RangeError = RangeError;\nvar $TypeError = TypeError;\nvar $Infinity = Infinity;\nvar $NaN = NaN;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar push = uncurryThis([].push);\n\nvar POW_2_1023 = pow(2, 1023);\nvar MAX_SAFE_INTEGER = pow(2, 53) - 1; // 2 ** 53 - 1 === 9007199254740992\nvar MAX_DOUBLE = Number.MAX_VALUE; // 2 ** 1024 - 2 ** (1023 - 52) === 1.79769313486231570815e+308\nvar MAX_ULP = pow(2, 971); // 2 ** (1023 - 52) === 1.99584030953471981166e+292\n\nvar NOT_A_NUMBER = {};\nvar MINUS_INFINITY = {};\nvar PLUS_INFINITY = {};\nvar MINUS_ZERO = {};\nvar FINITE = {};\n\n// prerequisite: abs(x) >= abs(y)\nvar twosum = function (x, y) {\n  var hi = x + y;\n  var lo = y - (hi - x);\n  return { hi: hi, lo: lo };\n};\n\n// `Math.sumPrecise` method\n// https://github.com/tc39/proposal-math-sum\n$({ target: 'Math', stat: true }, {\n  // eslint-disable-next-line max-statements -- ok\n  sumPrecise: function sumPrecise(items) {\n    var numbers = [];\n    var count = 0;\n    var state = MINUS_ZERO;\n\n    iterate(items, function (n) {\n      if (++count >= MAX_SAFE_INTEGER) throw new $RangeError('Maximum allowed index exceeded');\n      if (typeof n != 'number') throw new $TypeError('Value is not a number');\n      if (state !== NOT_A_NUMBER) {\n        // eslint-disable-next-line no-self-compare -- NaN check\n        if (n !== n) state = NOT_A_NUMBER;\n        else if (n === $Infinity) state = state === MINUS_INFINITY ? NOT_A_NUMBER : PLUS_INFINITY;\n        else if (n === -$Infinity) state = state === PLUS_INFINITY ? NOT_A_NUMBER : MINUS_INFINITY;\n        else if ((n !== 0 || (1 / n) === $Infinity) && (state === MINUS_ZERO || state === FINITE)) {\n          state = FINITE;\n          push(numbers, n);\n        }\n      }\n    });\n\n    switch (state) {\n      case NOT_A_NUMBER: return $NaN;\n      case MINUS_INFINITY: return -$Infinity;\n      case PLUS_INFINITY: return $Infinity;\n      case MINUS_ZERO: return -0;\n    }\n\n    var partials = [];\n    var overflow = 0; // conceptually 2 ** 1024 times this value; the final partial is biased by this amount\n    var x, y, sum, hi, lo, tmp;\n\n    for (var i = 0; i < numbers.length; i++) {\n      x = numbers[i];\n      var actuallyUsedPartials = 0;\n      for (var j = 0; j < partials.length; j++) {\n        y = partials[j];\n        if (abs(x) < abs(y)) {\n          tmp = x;\n          x = y;\n          y = tmp;\n        }\n        sum = twosum(x, y);\n        hi = sum.hi;\n        lo = sum.lo;\n        if (abs(hi) === $Infinity) {\n          var sign = hi === $Infinity ? 1 : -1;\n          overflow += sign;\n\n          x = (x - (sign * POW_2_1023)) - (sign * POW_2_1023);\n          if (abs(x) < abs(y)) {\n            tmp = x;\n            x = y;\n            y = tmp;\n          }\n          sum = twosum(x, y);\n          hi = sum.hi;\n          lo = sum.lo;\n        }\n        if (lo !== 0) partials[actuallyUsedPartials++] = lo;\n        x = hi;\n      }\n      partials.length = actuallyUsedPartials;\n      if (x !== 0) push(partials, x);\n    }\n\n    // compute the exact sum of partials, stopping once we lose precision\n    var n = partials.length - 1;\n    hi = 0;\n    lo = 0;\n\n    if (overflow !== 0) {\n      var next = n >= 0 ? partials[n] : 0;\n      n--;\n      if (abs(overflow) > 1 || (overflow > 0 && next > 0) || (overflow < 0 && next < 0)) {\n        return overflow > 0 ? $Infinity : -$Infinity;\n      }\n      // here we actually have to do the arithmetic\n      // drop a factor of 2 so we can do it without overflow\n      // assert(abs(overflow) === 1)\n      sum = twosum(overflow * POW_2_1023, next / 2);\n      hi = sum.hi;\n      lo = sum.lo;\n      lo *= 2;\n      if (abs(2 * hi) === $Infinity) {\n        // rounding to the maximum value\n        if (hi > 0) {\n          return (hi === POW_2_1023 && lo === -(MAX_ULP / 2) && n >= 0 && partials[n] < 0) ? MAX_DOUBLE : $Infinity;\n        } return (hi === -POW_2_1023 && lo === (MAX_ULP / 2) && n >= 0 && partials[n] > 0) ? -MAX_DOUBLE : -$Infinity;\n      }\n\n      if (lo !== 0) {\n        partials[++n] = lo;\n        lo = 0;\n      }\n\n      hi *= 2;\n    }\n\n    while (n >= 0) {\n      sum = twosum(hi, partials[n--]);\n      hi = sum.hi;\n      lo = sum.lo;\n      if (lo !== 0) break;\n    }\n\n    if (n >= 0 && ((lo < 0 && partials[n] < 0) || (lo > 0 && partials[n] > 0))) {\n      y = lo * 2;\n      x = hi + y;\n      if (y === x - hi) hi = x;\n    }\n\n    return hi;\n  }\n});\n\n\n/***/ }),\n\n/***/ 3167:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar isCallable = __webpack_require__(4901);\nvar isObject = __webpack_require__(34);\nvar setPrototypeOf = __webpack_require__(2967);\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n\n\n/***/ }),\n\n/***/ 3238:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar NATIVE_ARRAY_BUFFER = __webpack_require__(7811);\nvar arrayBufferByteLength = __webpack_require__(7394);\n\nvar DataView = globalThis.DataView;\n\nmodule.exports = function (O) {\n  if (!NATIVE_ARRAY_BUFFER || arrayBufferByteLength(O) !== 0) return false;\n  try {\n    // eslint-disable-next-line no-new -- thrower\n    new DataView(O);\n    return false;\n  } catch (error) {\n    return true;\n  }\n};\n\n\n/***/ }),\n\n/***/ 3392:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.1.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n\n\n/***/ }),\n\n/***/ 3440:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar aSet = __webpack_require__(7080);\nvar SetHelpers = __webpack_require__(4402);\nvar clone = __webpack_require__(9286);\nvar size = __webpack_require__(5170);\nvar getSetRecord = __webpack_require__(3789);\nvar iterateSet = __webpack_require__(8469);\nvar iterateSimple = __webpack_require__(507);\n\nvar has = SetHelpers.has;\nvar remove = SetHelpers.remove;\n\n// `Set.prototype.difference` method\n// https://tc39.es/ecma262/#sec-set.prototype.difference\nmodule.exports = function difference(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  var result = clone(O);\n  if (size(O) <= otherRec.size) iterateSet(O, function (e) {\n    if (otherRec.includes(e)) remove(result, e);\n  });\n  else iterateSimple(otherRec.getIterator(), function (e) {\n    if (has(result, e)) remove(result, e);\n  });\n  return result;\n};\n\n\n/***/ }),\n\n/***/ 3463:\n/***/ ((module) => {\n\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (typeof argument == 'string') return argument;\n  throw new $TypeError('Argument is not a string');\n};\n\n\n/***/ }),\n\n/***/ 3506:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar isPossiblePrototype = __webpack_require__(3925);\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (isPossiblePrototype(argument)) return argument;\n  throw new $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n\n\n/***/ }),\n\n/***/ 3579:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar call = __webpack_require__(9565);\nvar iterate = __webpack_require__(2652);\nvar aCallable = __webpack_require__(9306);\nvar anObject = __webpack_require__(8551);\nvar getIteratorDirect = __webpack_require__(1767);\nvar iteratorClose = __webpack_require__(9539);\nvar iteratorHelperWithoutClosingOnEarlyError = __webpack_require__(4549);\n\nvar someWithoutClosingOnEarlyError = iteratorHelperWithoutClosingOnEarlyError('some', TypeError);\n\n// `Iterator.prototype.some` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.some\n$({ target: 'Iterator', proto: true, real: true, forced: someWithoutClosingOnEarlyError }, {\n  some: function some(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (someWithoutClosingOnEarlyError) return call(someWithoutClosingOnEarlyError, this, predicate);\n\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return iterate(record, function (value, stop) {\n      if (predicate(value, counter++)) return stop();\n    }, { IS_RECORD: true, INTERRUPTED: true }).stopped;\n  }\n});\n\n\n/***/ }),\n\n/***/ 3650:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar aSet = __webpack_require__(7080);\nvar SetHelpers = __webpack_require__(4402);\nvar clone = __webpack_require__(9286);\nvar getSetRecord = __webpack_require__(3789);\nvar iterateSimple = __webpack_require__(507);\n\nvar add = SetHelpers.add;\nvar has = SetHelpers.has;\nvar remove = SetHelpers.remove;\n\n// `Set.prototype.symmetricDifference` method\n// https://tc39.es/ecma262/#sec-set.prototype.symmetricdifference\nmodule.exports = function symmetricDifference(other) {\n  var O = aSet(this);\n  var keysIter = getSetRecord(other).getIterator();\n  var result = clone(O);\n  iterateSimple(keysIter, function (e) {\n    if (has(O, e)) remove(result, e);\n    else add(result, e);\n  });\n  return result;\n};\n\n\n/***/ }),\n\n/***/ 3706:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\nvar isCallable = __webpack_require__(4901);\nvar store = __webpack_require__(7629);\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n\n\n/***/ }),\n\n/***/ 3717:\n/***/ ((__unused_webpack_module, exports) => {\n\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n\n\n/***/ }),\n\n/***/ 3724:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar fails = __webpack_require__(9039);\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;\n});\n\n\n/***/ }),\n\n/***/ 3789:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar aCallable = __webpack_require__(9306);\nvar anObject = __webpack_require__(8551);\nvar call = __webpack_require__(9565);\nvar toIntegerOrInfinity = __webpack_require__(1291);\nvar getIteratorDirect = __webpack_require__(1767);\n\nvar INVALID_SIZE = 'Invalid size';\nvar $RangeError = RangeError;\nvar $TypeError = TypeError;\nvar max = Math.max;\n\nvar SetRecord = function (set, intSize) {\n  this.set = set;\n  this.size = max(intSize, 0);\n  this.has = aCallable(set.has);\n  this.keys = aCallable(set.keys);\n};\n\nSetRecord.prototype = {\n  getIterator: function () {\n    return getIteratorDirect(anObject(call(this.keys, this.set)));\n  },\n  includes: function (it) {\n    return call(this.has, this.set, it);\n  }\n};\n\n// `GetSetRecord` abstract operation\n// https://tc39.es/proposal-set-methods/#sec-getsetrecord\nmodule.exports = function (obj) {\n  anObject(obj);\n  var numSize = +obj.size;\n  // NOTE: If size is undefined, then numSize will be NaN\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (numSize !== numSize) throw new $TypeError(INVALID_SIZE);\n  var intSize = toIntegerOrInfinity(numSize);\n  if (intSize < 0) throw new $RangeError(INVALID_SIZE);\n  return new SetRecord(obj, intSize);\n};\n\n\n/***/ }),\n\n/***/ 3838:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar aSet = __webpack_require__(7080);\nvar size = __webpack_require__(5170);\nvar iterate = __webpack_require__(8469);\nvar getSetRecord = __webpack_require__(3789);\n\n// `Set.prototype.isSubsetOf` method\n// https://tc39.es/ecma262/#sec-set.prototype.issubsetof\nmodule.exports = function isSubsetOf(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) > otherRec.size) return false;\n  return iterate(O, function (e) {\n    if (!otherRec.includes(e)) return false;\n  }, true) !== false;\n};\n\n\n/***/ }),\n\n/***/ 3853:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar isDisjointFrom = __webpack_require__(4449);\nvar setMethodAcceptSetLike = __webpack_require__(4916);\n\nvar INCORRECT = !setMethodAcceptSetLike('isDisjointFrom', function (result) {\n  return !result;\n});\n\n// `Set.prototype.isDisjointFrom` method\n// https://tc39.es/ecma262/#sec-set.prototype.isdisjointfrom\n$({ target: 'Set', proto: true, real: true, forced: INCORRECT }, {\n  isDisjointFrom: isDisjointFrom\n});\n\n\n/***/ }),\n\n/***/ 3925:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar isObject = __webpack_require__(34);\n\nmodule.exports = function (argument) {\n  return isObject(argument) || argument === null;\n};\n\n\n/***/ }),\n\n/***/ 3972:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar isObject = __webpack_require__(34);\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (argument === undefined || isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object or undefined');\n};\n\n\n/***/ }),\n\n/***/ 4055:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar isObject = __webpack_require__(34);\n\nvar document = globalThis.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n\n/***/ 4114:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar toObject = __webpack_require__(8981);\nvar lengthOfArrayLike = __webpack_require__(6198);\nvar setArrayLength = __webpack_require__(4527);\nvar doesNotExceedSafeInteger = __webpack_require__(6837);\nvar fails = __webpack_require__(9039);\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 <= 121 and Safari <= 15.4; FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n\n\n/***/ }),\n\n/***/ 4117:\n/***/ ((module) => {\n\n\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n\n\n/***/ }),\n\n/***/ 4149:\n/***/ ((module) => {\n\n\nvar $RangeError = RangeError;\n\nmodule.exports = function (it) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (it === it) return it;\n  throw new $RangeError('NaN is not allowed');\n};\n\n\n/***/ }),\n\n/***/ 4154:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar classof = __webpack_require__(6955);\n\nvar $TypeError = TypeError;\n\n// Perform ? RequireInternalSlot(argument, [[TypedArrayName]])\n// If argument.[[TypedArrayName]] is not \"Uint8Array\", throw a TypeError exception\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Uint8Array') return argument;\n  throw new $TypeError('Argument is not an Uint8Array');\n};\n\n\n/***/ }),\n\n/***/ 4204:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar aSet = __webpack_require__(7080);\nvar add = (__webpack_require__(4402).add);\nvar clone = __webpack_require__(9286);\nvar getSetRecord = __webpack_require__(3789);\nvar iterateSimple = __webpack_require__(507);\n\n// `Set.prototype.union` method\n// https://tc39.es/ecma262/#sec-set.prototype.union\nmodule.exports = function union(other) {\n  var O = aSet(this);\n  var keysIter = getSetRecord(other).getIterator();\n  var result = clone(O);\n  iterateSimple(keysIter, function (it) {\n    add(result, it);\n  });\n  return result;\n};\n\n\n/***/ }),\n\n/***/ 4209:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar wellKnownSymbol = __webpack_require__(8227);\nvar Iterators = __webpack_require__(6269);\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n\n\n/***/ }),\n\n/***/ 4215:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n/* global Bun, Deno -- detection */\nvar globalThis = __webpack_require__(4576);\nvar userAgent = __webpack_require__(2839);\nvar classof = __webpack_require__(2195);\n\nvar userAgentStartsWith = function (string) {\n  return userAgent.slice(0, string.length) === string;\n};\n\nmodule.exports = (function () {\n  if (userAgentStartsWith('Bun/')) return 'BUN';\n  if (userAgentStartsWith('Cloudflare-Workers')) return 'CLOUDFLARE';\n  if (userAgentStartsWith('Deno/')) return 'DENO';\n  if (userAgentStartsWith('Node.js/')) return 'NODE';\n  if (globalThis.Bun && typeof Bun.version == 'string') return 'BUN';\n  if (globalThis.Deno && typeof Deno.version == 'object') return 'DENO';\n  if (classof(globalThis.process) === 'process') return 'NODE';\n  if (globalThis.window && globalThis.document) return 'BROWSER';\n  return 'REST';\n})();\n\n\n/***/ }),\n\n/***/ 4226:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar globalThis = __webpack_require__(4576);\nvar aString = __webpack_require__(3463);\nvar anUint8Array = __webpack_require__(4154);\nvar notDetached = __webpack_require__(5169);\nvar $fromHex = __webpack_require__(2303);\n\n// `Uint8Array.prototype.setFromHex` method\n// https://github.com/tc39/proposal-arraybuffer-base64\nif (globalThis.Uint8Array) $({ target: 'Uint8Array', proto: true }, {\n  setFromHex: function setFromHex(string) {\n    anUint8Array(this);\n    aString(string);\n    notDetached(this.buffer);\n    var read = $fromHex(string, this).read;\n    return { read: read, written: read / 2 };\n  }\n});\n\n\n/***/ }),\n\n/***/ 4235:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\n// TODO: Remove from `core-js@4`\n__webpack_require__(3068);\n\n\n/***/ }),\n\n/***/ 4270:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar call = __webpack_require__(9565);\nvar isCallable = __webpack_require__(4901);\nvar isObject = __webpack_require__(34);\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw new $TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n\n/***/ 4376:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar classof = __webpack_require__(2195);\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) === 'Array';\n};\n\n\n/***/ }),\n\n/***/ 4402:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\n\n// eslint-disable-next-line es/no-set -- safe\nvar SetPrototype = Set.prototype;\n\nmodule.exports = {\n  // eslint-disable-next-line es/no-set -- safe\n  Set: Set,\n  add: uncurryThis(SetPrototype.add),\n  has: uncurryThis(SetPrototype.has),\n  remove: uncurryThis(SetPrototype['delete']),\n  proto: SetPrototype\n};\n\n\n/***/ }),\n\n/***/ 4449:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar aSet = __webpack_require__(7080);\nvar has = (__webpack_require__(4402).has);\nvar size = __webpack_require__(5170);\nvar getSetRecord = __webpack_require__(3789);\nvar iterateSet = __webpack_require__(8469);\nvar iterateSimple = __webpack_require__(507);\nvar iteratorClose = __webpack_require__(9539);\n\n// `Set.prototype.isDisjointFrom` method\n// https://tc39.es/ecma262/#sec-set.prototype.isdisjointfrom\nmodule.exports = function isDisjointFrom(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) <= otherRec.size) return iterateSet(O, function (e) {\n    if (otherRec.includes(e)) return false;\n  }, true) !== false;\n  var iterator = otherRec.getIterator();\n  return iterateSimple(iterator, function (e) {\n    if (has(O, e)) return iteratorClose(iterator, 'normal', false);\n  }) !== false;\n};\n\n\n/***/ }),\n\n/***/ 4483:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar getBuiltInNodeModule = __webpack_require__(9429);\nvar PROPER_STRUCTURED_CLONE_TRANSFER = __webpack_require__(1548);\n\nvar structuredClone = globalThis.structuredClone;\nvar $ArrayBuffer = globalThis.ArrayBuffer;\nvar $MessageChannel = globalThis.MessageChannel;\nvar detach = false;\nvar WorkerThreads, channel, buffer, $detach;\n\nif (PROPER_STRUCTURED_CLONE_TRANSFER) {\n  detach = function (transferable) {\n    structuredClone(transferable, { transfer: [transferable] });\n  };\n} else if ($ArrayBuffer) try {\n  if (!$MessageChannel) {\n    WorkerThreads = getBuiltInNodeModule('worker_threads');\n    if (WorkerThreads) $MessageChannel = WorkerThreads.MessageChannel;\n  }\n\n  if ($MessageChannel) {\n    channel = new $MessageChannel();\n    buffer = new $ArrayBuffer(2);\n\n    $detach = function (transferable) {\n      channel.port1.postMessage(null, [transferable]);\n    };\n\n    if (buffer.byteLength === 2) {\n      $detach(buffer);\n      if (buffer.byteLength === 0) detach = $detach;\n    }\n  }\n} catch (error) { /* empty */ }\n\nmodule.exports = detach;\n\n\n/***/ }),\n\n/***/ 4495:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = __webpack_require__(9519);\nvar fails = __webpack_require__(9039);\nvar globalThis = __webpack_require__(4576);\n\nvar $String = globalThis.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol('symbol detection');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n\n\n/***/ }),\n\n/***/ 4527:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar DESCRIPTORS = __webpack_require__(3724);\nvar isArray = __webpack_require__(4376);\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw new $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n\n\n/***/ }),\n\n/***/ 4549:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\n\n// https://github.com/tc39/ecma262/pull/3467\nmodule.exports = function (METHOD_NAME, ExpectedError) {\n  var Iterator = globalThis.Iterator;\n  var IteratorPrototype = Iterator && Iterator.prototype;\n  var method = IteratorPrototype && IteratorPrototype[METHOD_NAME];\n\n  var CLOSED = false;\n\n  if (method) try {\n    method.call({\n      next: function () { return { done: true }; },\n      'return': function () { CLOSED = true; }\n    }, -1);\n  } catch (error) {\n    // https://bugs.webkit.org/show_bug.cgi?id=291195\n    if (!(error instanceof ExpectedError)) CLOSED = false;\n  }\n\n  if (!CLOSED) return method;\n};\n\n\n/***/ }),\n\n/***/ 4576:\n/***/ (function(module) {\n\n\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  check(typeof this == 'object' && this) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n\n\n/***/ }),\n\n/***/ 4603:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar defineBuiltIn = __webpack_require__(6840);\nvar uncurryThis = __webpack_require__(9504);\nvar toString = __webpack_require__(655);\nvar validateArgumentsLength = __webpack_require__(2812);\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n\n\n/***/ }),\n\n/***/ 4628:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar newPromiseCapabilityModule = __webpack_require__(6043);\n\n// `Promise.withResolvers` method\n// https://tc39.es/ecma262/#sec-promise.withResolvers\n$({ target: 'Promise', stat: true }, {\n  withResolvers: function withResolvers() {\n    var promiseCapability = newPromiseCapabilityModule.f(this);\n    return {\n      promise: promiseCapability.promise,\n      resolve: promiseCapability.resolve,\n      reject: promiseCapability.reject\n    };\n  }\n});\n\n\n/***/ }),\n\n/***/ 4644:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar NATIVE_ARRAY_BUFFER = __webpack_require__(7811);\nvar DESCRIPTORS = __webpack_require__(3724);\nvar globalThis = __webpack_require__(4576);\nvar isCallable = __webpack_require__(4901);\nvar isObject = __webpack_require__(34);\nvar hasOwn = __webpack_require__(9297);\nvar classof = __webpack_require__(6955);\nvar tryToString = __webpack_require__(6823);\nvar createNonEnumerableProperty = __webpack_require__(6699);\nvar defineBuiltIn = __webpack_require__(6840);\nvar defineBuiltInAccessor = __webpack_require__(2106);\nvar isPrototypeOf = __webpack_require__(1625);\nvar getPrototypeOf = __webpack_require__(2787);\nvar setPrototypeOf = __webpack_require__(2967);\nvar wellKnownSymbol = __webpack_require__(8227);\nvar uid = __webpack_require__(3392);\nvar InternalStateModule = __webpack_require__(1181);\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar Int8Array = globalThis.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = globalThis.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar TypeError = globalThis.TypeError;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = 'TypedArrayConstructor';\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(globalThis.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQUIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar getTypedArrayConstructor = function (it) {\n  var proto = getPrototypeOf(it);\n  if (!isObject(proto)) return;\n  var state = getInternalState(proto);\n  return (state && hasOwn(state, TYPED_ARRAY_CONSTRUCTOR)) ? state[TYPED_ARRAY_CONSTRUCTOR] : getTypedArrayConstructor(proto);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw new TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;\n  throw new TypeError(tryToString(C) + ' is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced, options) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = globalThis[ARRAY];\n    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) {\n      // old WebKit bug - some methods are non-configurable\n      try {\n        TypedArrayConstructor.prototype[KEY] = property;\n      } catch (error2) { /* empty */ }\n    }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    defineBuiltIn(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = globalThis[ARRAY];\n      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return defineBuiltIn(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = globalThis[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      defineBuiltIn(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = globalThis[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = globalThis[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw new TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (globalThis[NAME]) setPrototypeOf(globalThis[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (globalThis[NAME]) setPrototypeOf(globalThis[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQUIRED = true;\n  defineBuiltInAccessor(TypedArrayPrototype, TO_STRING_TAG, {\n    configurable: true,\n    get: function () {\n      return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n    }\n  });\n  for (NAME in TypedArrayConstructorsList) if (globalThis[NAME]) {\n    createNonEnumerableProperty(globalThis[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  getTypedArrayConstructor: getTypedArrayConstructor,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n\n\n/***/ }),\n\n/***/ 4659:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar DESCRIPTORS = __webpack_require__(3724);\nvar definePropertyModule = __webpack_require__(4913);\nvar createPropertyDescriptor = __webpack_require__(6980);\n\nmodule.exports = function (object, key, value) {\n  if (DESCRIPTORS) definePropertyModule.f(object, key, createPropertyDescriptor(0, value));\n  else object[key] = value;\n};\n\n\n/***/ }),\n\n/***/ 4901:\n/***/ ((module) => {\n\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nvar documentAll = typeof document == 'object' && document.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nmodule.exports = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n\n\n/***/ }),\n\n/***/ 4913:\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\nvar DESCRIPTORS = __webpack_require__(3724);\nvar IE8_DOM_DEFINE = __webpack_require__(5917);\nvar V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(8686);\nvar anObject = __webpack_require__(8551);\nvar toPropertyKey = __webpack_require__(6969);\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n\n/***/ 4916:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar getBuiltIn = __webpack_require__(7751);\n\nvar createSetLike = function (size) {\n  return {\n    size: size,\n    has: function () {\n      return false;\n    },\n    keys: function () {\n      return {\n        next: function () {\n          return { done: true };\n        }\n      };\n    }\n  };\n};\n\nvar createSetLikeWithInfinitySize = function (size) {\n  return {\n    size: size,\n    has: function () {\n      return true;\n    },\n    keys: function () {\n      throw new Error('e');\n    }\n  };\n};\n\nmodule.exports = function (name, callback) {\n  var Set = getBuiltIn('Set');\n  try {\n    new Set()[name](createSetLike(0));\n    try {\n      // late spec change, early WebKit ~ Safari 17 implementation does not pass it\n      // https://github.com/tc39/proposal-set-methods/pull/88\n      // also covered engines with\n      // https://bugs.webkit.org/show_bug.cgi?id=272679\n      new Set()[name](createSetLike(-1));\n      return false;\n    } catch (error2) {\n      if (!callback) return true;\n      // early V8 implementation bug\n      // https://issues.chromium.org/issues/351332634\n      try {\n        new Set()[name](createSetLikeWithInfinitySize(-Infinity));\n        return false;\n      } catch (error) {\n        var set = new Set();\n        set.add(1);\n        set.add(2);\n        return callback(set[name](createSetLikeWithInfinitySize(Infinity)));\n      }\n    }\n  } catch (error) {\n    return false;\n  }\n};\n\n\n/***/ }),\n\n/***/ 4972:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar call = __webpack_require__(9565);\nvar anObject = __webpack_require__(8551);\nvar getIteratorDirect = __webpack_require__(1767);\nvar notANaN = __webpack_require__(4149);\nvar toPositiveInteger = __webpack_require__(9590);\nvar createIteratorProxy = __webpack_require__(9462);\nvar iteratorClose = __webpack_require__(9539);\nvar iteratorHelperWithoutClosingOnEarlyError = __webpack_require__(4549);\nvar IS_PURE = __webpack_require__(6395);\n\nvar takeWithoutClosingOnEarlyError = !IS_PURE && iteratorHelperWithoutClosingOnEarlyError('take', RangeError);\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  if (!this.remaining--) {\n    this.done = true;\n    return iteratorClose(iterator, 'normal', undefined);\n  }\n  var result = anObject(call(this.next, iterator));\n  var done = this.done = !!result.done;\n  if (!done) return result.value;\n});\n\n// `Iterator.prototype.take` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.take\n$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE || takeWithoutClosingOnEarlyError }, {\n  take: function take(limit) {\n    anObject(this);\n    var remaining;\n    try {\n      remaining = toPositiveInteger(notANaN(+limit));\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (takeWithoutClosingOnEarlyError) return call(takeWithoutClosingOnEarlyError, this, remaining);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      remaining: remaining\n    });\n  }\n});\n\n\n/***/ }),\n\n/***/ 4979:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar globalThis = __webpack_require__(4576);\nvar getBuiltIn = __webpack_require__(7751);\nvar createPropertyDescriptor = __webpack_require__(6980);\nvar defineProperty = (__webpack_require__(4913).f);\nvar hasOwn = __webpack_require__(9297);\nvar anInstance = __webpack_require__(679);\nvar inheritIfRequired = __webpack_require__(3167);\nvar normalizeStringArgument = __webpack_require__(2603);\nvar DOMExceptionConstants = __webpack_require__(5002);\nvar clearErrorStack = __webpack_require__(8574);\nvar DESCRIPTORS = __webpack_require__(3724);\nvar IS_PURE = __webpack_require__(6395);\n\nvar DOM_EXCEPTION = 'DOMException';\nvar Error = getBuiltIn('Error');\nvar NativeDOMException = getBuiltIn(DOM_EXCEPTION);\n\nvar $DOMException = function DOMException() {\n  anInstance(this, DOMExceptionPrototype);\n  var argumentsLength = arguments.length;\n  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);\n  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');\n  var that = new NativeDOMException(message, name);\n  var error = new Error(message);\n  error.name = DOM_EXCEPTION;\n  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));\n  inheritIfRequired(that, this, $DOMException);\n  return that;\n};\n\nvar DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;\n\nvar ERROR_HAS_STACK = 'stack' in new Error(DOM_EXCEPTION);\nvar DOM_EXCEPTION_HAS_STACK = 'stack' in new NativeDOMException(1, 2);\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar descriptor = NativeDOMException && DESCRIPTORS && Object.getOwnPropertyDescriptor(globalThis, DOM_EXCEPTION);\n\n// Bun ~ 0.1.1 DOMException have incorrect descriptor and we can't redefine it\n// https://github.com/Jarred-Sumner/bun/issues/399\nvar BUGGY_DESCRIPTOR = !!descriptor && !(descriptor.writable && descriptor.configurable);\n\nvar FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !BUGGY_DESCRIPTOR && !DOM_EXCEPTION_HAS_STACK;\n\n// `DOMException` constructor patch for `.stack` where it's required\n// https://webidl.spec.whatwg.org/#es-DOMException-specialness\n$({ global: true, constructor: true, forced: IS_PURE || FORCED_CONSTRUCTOR }, { // TODO: fix export logic\n  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException\n});\n\nvar PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);\nvar PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;\n\nif (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {\n  if (!IS_PURE) {\n    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));\n  }\n\n  for (var key in DOMExceptionConstants) if (hasOwn(DOMExceptionConstants, key)) {\n    var constant = DOMExceptionConstants[key];\n    var constantName = constant.s;\n    if (!hasOwn(PolyfilledDOMException, constantName)) {\n      defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));\n    }\n  }\n}\n\n\n/***/ }),\n\n/***/ 5002:\n/***/ ((module) => {\n\n\nmodule.exports = {\n  IndexSizeError: { s: 'INDEX_SIZE_ERR', c: 1, m: 1 },\n  DOMStringSizeError: { s: 'DOMSTRING_SIZE_ERR', c: 2, m: 0 },\n  HierarchyRequestError: { s: 'HIERARCHY_REQUEST_ERR', c: 3, m: 1 },\n  WrongDocumentError: { s: 'WRONG_DOCUMENT_ERR', c: 4, m: 1 },\n  InvalidCharacterError: { s: 'INVALID_CHARACTER_ERR', c: 5, m: 1 },\n  NoDataAllowedError: { s: 'NO_DATA_ALLOWED_ERR', c: 6, m: 0 },\n  NoModificationAllowedError: { s: 'NO_MODIFICATION_ALLOWED_ERR', c: 7, m: 1 },\n  NotFoundError: { s: 'NOT_FOUND_ERR', c: 8, m: 1 },\n  NotSupportedError: { s: 'NOT_SUPPORTED_ERR', c: 9, m: 1 },\n  InUseAttributeError: { s: 'INUSE_ATTRIBUTE_ERR', c: 10, m: 1 },\n  InvalidStateError: { s: 'INVALID_STATE_ERR', c: 11, m: 1 },\n  SyntaxError: { s: 'SYNTAX_ERR', c: 12, m: 1 },\n  InvalidModificationError: { s: 'INVALID_MODIFICATION_ERR', c: 13, m: 1 },\n  NamespaceError: { s: 'NAMESPACE_ERR', c: 14, m: 1 },\n  InvalidAccessError: { s: 'INVALID_ACCESS_ERR', c: 15, m: 1 },\n  ValidationError: { s: 'VALIDATION_ERR', c: 16, m: 0 },\n  TypeMismatchError: { s: 'TYPE_MISMATCH_ERR', c: 17, m: 1 },\n  SecurityError: { s: 'SECURITY_ERR', c: 18, m: 1 },\n  NetworkError: { s: 'NETWORK_ERR', c: 19, m: 1 },\n  AbortError: { s: 'ABORT_ERR', c: 20, m: 1 },\n  URLMismatchError: { s: 'URL_MISMATCH_ERR', c: 21, m: 1 },\n  QuotaExceededError: { s: 'QUOTA_EXCEEDED_ERR', c: 22, m: 1 },\n  TimeoutError: { s: 'TIMEOUT_ERR', c: 23, m: 1 },\n  InvalidNodeTypeError: { s: 'INVALID_NODE_TYPE_ERR', c: 24, m: 1 },\n  DataCloneError: { s: 'DATA_CLONE_ERR', c: 25, m: 1 }\n};\n\n\n/***/ }),\n\n/***/ 5024:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar symmetricDifference = __webpack_require__(3650);\nvar setMethodGetKeysBeforeCloning = __webpack_require__(9835);\nvar setMethodAcceptSetLike = __webpack_require__(4916);\n\nvar FORCED = !setMethodAcceptSetLike('symmetricDifference') || !setMethodGetKeysBeforeCloning('symmetricDifference');\n\n// `Set.prototype.symmetricDifference` method\n// https://tc39.es/ecma262/#sec-set.prototype.symmetricdifference\n$({ target: 'Set', proto: true, real: true, forced: FORCED }, {\n  symmetricDifference: symmetricDifference\n});\n\n\n/***/ }),\n\n/***/ 5031:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar getBuiltIn = __webpack_require__(7751);\nvar uncurryThis = __webpack_require__(9504);\nvar getOwnPropertyNamesModule = __webpack_require__(8480);\nvar getOwnPropertySymbolsModule = __webpack_require__(3717);\nvar anObject = __webpack_require__(8551);\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n\n\n/***/ }),\n\n/***/ 5169:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar isDetached = __webpack_require__(3238);\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it) {\n  if (isDetached(it)) throw new $TypeError('ArrayBuffer is detached');\n  return it;\n};\n\n\n/***/ }),\n\n/***/ 5170:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThisAccessor = __webpack_require__(6706);\nvar SetHelpers = __webpack_require__(4402);\n\nmodule.exports = uncurryThisAccessor(SetHelpers.proto, 'size', 'get') || function (set) {\n  return set.size;\n};\n\n\n/***/ }),\n\n/***/ 5213:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar globalThis = __webpack_require__(4576);\nvar arrayFromConstructorAndList = __webpack_require__(5370);\nvar $fromBase64 = __webpack_require__(9143);\n\nvar Uint8Array = globalThis.Uint8Array;\n\nvar INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS = !Uint8Array || !Uint8Array.fromBase64 || !function () {\n  // Webkit not throw an error on odd length string\n  try {\n    Uint8Array.fromBase64('a');\n    return;\n  } catch (error) { /* empty */ }\n  try {\n    Uint8Array.fromBase64('', null);\n  } catch (error) {\n    return true;\n  }\n}();\n\n// `Uint8Array.fromBase64` method\n// https://github.com/tc39/proposal-arraybuffer-base64\nif (Uint8Array) $({ target: 'Uint8Array', stat: true, forced: INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS }, {\n  fromBase64: function fromBase64(string /* , options */) {\n    var result = $fromBase64(string, arguments.length > 1 ? arguments[1] : undefined, null, 0x1FFFFFFFFFFFFF);\n    return arrayFromConstructorAndList(Uint8Array, result.bytes);\n  }\n});\n\n\n/***/ }),\n\n/***/ 5370:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar lengthOfArrayLike = __webpack_require__(6198);\n\nmodule.exports = function (Constructor, list, $length) {\n  var index = 0;\n  var length = arguments.length > 2 ? $length : lengthOfArrayLike(list);\n  var result = new Constructor(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n};\n\n\n/***/ }),\n\n/***/ 5397:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = __webpack_require__(7055);\nvar requireObjectCoercible = __webpack_require__(7750);\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n\n\n/***/ }),\n\n/***/ 5610:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar toIntegerOrInfinity = __webpack_require__(1291);\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n\n\n/***/ }),\n\n/***/ 5623:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\n// TODO: Remove from `core-js@4`\n__webpack_require__(456);\n\n\n/***/ }),\n\n/***/ 5636:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar uncurryThis = __webpack_require__(9504);\nvar uncurryThisAccessor = __webpack_require__(6706);\nvar toIndex = __webpack_require__(7696);\nvar notDetached = __webpack_require__(5169);\nvar arrayBufferByteLength = __webpack_require__(7394);\nvar detachTransferable = __webpack_require__(4483);\nvar PROPER_STRUCTURED_CLONE_TRANSFER = __webpack_require__(1548);\n\nvar structuredClone = globalThis.structuredClone;\nvar ArrayBuffer = globalThis.ArrayBuffer;\nvar DataView = globalThis.DataView;\nvar min = Math.min;\nvar ArrayBufferPrototype = ArrayBuffer.prototype;\nvar DataViewPrototype = DataView.prototype;\nvar slice = uncurryThis(ArrayBufferPrototype.slice);\nvar isResizable = uncurryThisAccessor(ArrayBufferPrototype, 'resizable', 'get');\nvar maxByteLength = uncurryThisAccessor(ArrayBufferPrototype, 'maxByteLength', 'get');\nvar getInt8 = uncurryThis(DataViewPrototype.getInt8);\nvar setInt8 = uncurryThis(DataViewPrototype.setInt8);\n\nmodule.exports = (PROPER_STRUCTURED_CLONE_TRANSFER || detachTransferable) && function (arrayBuffer, newLength, preserveResizability) {\n  var byteLength = arrayBufferByteLength(arrayBuffer);\n  var newByteLength = newLength === undefined ? byteLength : toIndex(newLength);\n  var fixedLength = !isResizable || !isResizable(arrayBuffer);\n  var newBuffer;\n  notDetached(arrayBuffer);\n  if (PROPER_STRUCTURED_CLONE_TRANSFER) {\n    arrayBuffer = structuredClone(arrayBuffer, { transfer: [arrayBuffer] });\n    if (byteLength === newByteLength && (preserveResizability || fixedLength)) return arrayBuffer;\n  }\n  if (byteLength >= newByteLength && (!preserveResizability || fixedLength)) {\n    newBuffer = slice(arrayBuffer, 0, newByteLength);\n  } else {\n    var options = preserveResizability && !fixedLength && maxByteLength ? { maxByteLength: maxByteLength(arrayBuffer) } : undefined;\n    newBuffer = new ArrayBuffer(newByteLength, options);\n    var a = new DataView(arrayBuffer);\n    var b = new DataView(newBuffer);\n    var copyLength = min(newByteLength, byteLength);\n    for (var i = 0; i < copyLength; i++) setInt8(b, i, getInt8(a, i));\n  }\n  if (!PROPER_STRUCTURED_CLONE_TRANSFER) detachTransferable(arrayBuffer);\n  return newBuffer;\n};\n\n\n/***/ }),\n\n/***/ 5745:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar store = __webpack_require__(7629);\n\nmodule.exports = function (key, value) {\n  return store[key] || (store[key] = value || {});\n};\n\n\n/***/ }),\n\n/***/ 5781:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar getBuiltIn = __webpack_require__(7751);\nvar validateArgumentsLength = __webpack_require__(2812);\nvar toString = __webpack_require__(655);\nvar USE_NATIVE_URL = __webpack_require__(7416);\n\nvar URL = getBuiltIn('URL');\n\n// `URL.parse` method\n// https://url.spec.whatwg.org/#dom-url-canparse\n$({ target: 'URL', stat: true, forced: !USE_NATIVE_URL }, {\n  parse: function parse(url) {\n    var length = validateArgumentsLength(arguments.length, 1);\n    var urlString = toString(url);\n    var base = length < 2 || arguments[1] === undefined ? undefined : toString(arguments[1]);\n    try {\n      return new URL(urlString, base);\n    } catch (error) {\n      return null;\n    }\n  }\n});\n\n\n/***/ }),\n\n/***/ 5854:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar toPrimitive = __webpack_require__(2777);\n\nvar $TypeError = TypeError;\n\n// `ToBigInt` abstract operation\n// https://tc39.es/ecma262/#sec-tobigint\nmodule.exports = function (argument) {\n  var prim = toPrimitive(argument, 'number');\n  if (typeof prim == 'number') throw new $TypeError(\"Can't convert number to bigint\");\n  // eslint-disable-next-line es/no-bigint -- safe\n  return BigInt(prim);\n};\n\n\n/***/ }),\n\n/***/ 5876:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar isSubsetOf = __webpack_require__(3838);\nvar setMethodAcceptSetLike = __webpack_require__(4916);\n\nvar INCORRECT = !setMethodAcceptSetLike('isSubsetOf', function (result) {\n  return result;\n});\n\n// `Set.prototype.isSubsetOf` method\n// https://tc39.es/ecma262/#sec-set.prototype.issubsetof\n$({ target: 'Set', proto: true, real: true, forced: INCORRECT }, {\n  isSubsetOf: isSubsetOf\n});\n\n\n/***/ }),\n\n/***/ 5917:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar DESCRIPTORS = __webpack_require__(3724);\nvar fails = __webpack_require__(9039);\nvar createElement = __webpack_require__(4055);\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a !== 7;\n});\n\n\n/***/ }),\n\n/***/ 5966:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar aCallable = __webpack_require__(9306);\nvar isNullOrUndefined = __webpack_require__(4117);\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n\n\n/***/ }),\n\n/***/ 6043:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar aCallable = __webpack_require__(9306);\n\nvar $TypeError = TypeError;\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw new $TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aCallable(resolve);\n  this.reject = aCallable(reject);\n};\n\n// `NewPromiseCapability` abstract operation\n// https://tc39.es/ecma262/#sec-newpromisecapability\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n\n/***/ }),\n\n/***/ 6080:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(7476);\nvar aCallable = __webpack_require__(9306);\nvar NATIVE_BIND = __webpack_require__(616);\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n\n/***/ 6119:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar shared = __webpack_require__(5745);\nvar uid = __webpack_require__(3392);\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n\n\n/***/ }),\n\n/***/ 6193:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar ENVIRONMENT = __webpack_require__(4215);\n\nmodule.exports = ENVIRONMENT === 'NODE';\n\n\n/***/ }),\n\n/***/ 6198:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar toLength = __webpack_require__(8014);\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n\n\n/***/ }),\n\n/***/ 6269:\n/***/ ((module) => {\n\n\nmodule.exports = {};\n\n\n/***/ }),\n\n/***/ 6279:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar defineBuiltIn = __webpack_require__(6840);\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) defineBuiltIn(target, key, src[key], options);\n  return target;\n};\n\n\n/***/ }),\n\n/***/ 6319:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar anObject = __webpack_require__(8551);\nvar iteratorClose = __webpack_require__(9539);\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (error) {\n    iteratorClose(iterator, 'throw', error);\n  }\n};\n\n\n/***/ }),\n\n/***/ 6395:\n/***/ ((module) => {\n\n\nmodule.exports = false;\n\n\n/***/ }),\n\n/***/ 6518:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar getOwnPropertyDescriptor = (__webpack_require__(7347).f);\nvar createNonEnumerableProperty = __webpack_require__(6699);\nvar defineBuiltIn = __webpack_require__(6840);\nvar defineGlobalProperty = __webpack_require__(9433);\nvar copyConstructorProperties = __webpack_require__(7740);\nvar isForced = __webpack_require__(2796);\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = globalThis;\n  } else if (STATIC) {\n    target = globalThis[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = globalThis[TARGET] && globalThis[TARGET].prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n\n\n/***/ }),\n\n/***/ 6573:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar DESCRIPTORS = __webpack_require__(3724);\nvar defineBuiltInAccessor = __webpack_require__(2106);\nvar isDetached = __webpack_require__(3238);\n\nvar ArrayBufferPrototype = ArrayBuffer.prototype;\n\n// `ArrayBuffer.prototype.detached` getter\n// https://tc39.es/ecma262/#sec-get-arraybuffer.prototype.detached\nif (DESCRIPTORS && !('detached' in ArrayBufferPrototype)) {\n  defineBuiltInAccessor(ArrayBufferPrototype, 'detached', {\n    configurable: true,\n    get: function detached() {\n      return isDetached(this);\n    }\n  });\n}\n\n\n/***/ }),\n\n/***/ 6632:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar globalThis = __webpack_require__(4576);\nvar $fromBase64 = __webpack_require__(9143);\nvar anUint8Array = __webpack_require__(4154);\n\nvar Uint8Array = globalThis.Uint8Array;\n\nvar INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS = !Uint8Array || !Uint8Array.prototype.setFromBase64 || !function () {\n  var target = new Uint8Array([255, 255, 255, 255, 255]);\n  try {\n    target.setFromBase64('', null);\n    return;\n  } catch (error) { /* empty */ }\n  // Webkit not throw an error on odd length string\n  try {\n    target.setFromBase64('a');\n    return;\n  } catch (error) { /* empty */ }\n  try {\n    target.setFromBase64('MjYyZg===');\n  } catch (error) {\n    return target[0] === 50 && target[1] === 54 && target[2] === 50 && target[3] === 255 && target[4] === 255;\n  }\n}();\n\n// `Uint8Array.prototype.setFromBase64` method\n// https://github.com/tc39/proposal-arraybuffer-base64\nif (Uint8Array) $({ target: 'Uint8Array', proto: true, forced: INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS }, {\n  setFromBase64: function setFromBase64(string /* , options */) {\n    anUint8Array(this);\n\n    var result = $fromBase64(string, arguments.length > 1 ? arguments[1] : undefined, this, this.length);\n\n    return { read: result.read, written: result.written };\n  }\n});\n\n\n/***/ }),\n\n/***/ 6699:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar DESCRIPTORS = __webpack_require__(3724);\nvar definePropertyModule = __webpack_require__(4913);\nvar createPropertyDescriptor = __webpack_require__(6980);\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n\n/***/ 6706:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\nvar aCallable = __webpack_require__(9306);\n\nmodule.exports = function (object, key, method) {\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));\n  } catch (error) { /* empty */ }\n};\n\n\n/***/ }),\n\n/***/ 6801:\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\nvar DESCRIPTORS = __webpack_require__(3724);\nvar V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(8686);\nvar definePropertyModule = __webpack_require__(4913);\nvar anObject = __webpack_require__(8551);\nvar toIndexedObject = __webpack_require__(5397);\nvar objectKeys = __webpack_require__(1072);\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n\n\n/***/ }),\n\n/***/ 6823:\n/***/ ((module) => {\n\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n\n\n/***/ }),\n\n/***/ 6837:\n/***/ ((module) => {\n\n\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n\n\n/***/ }),\n\n/***/ 6840:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar isCallable = __webpack_require__(4901);\nvar definePropertyModule = __webpack_require__(4913);\nvar makeBuiltIn = __webpack_require__(283);\nvar defineGlobalProperty = __webpack_require__(9433);\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n\n\n/***/ }),\n\n/***/ 6955:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar TO_STRING_TAG_SUPPORT = __webpack_require__(2140);\nvar isCallable = __webpack_require__(4901);\nvar classofRaw = __webpack_require__(2195);\nvar wellKnownSymbol = __webpack_require__(8227);\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n\n\n/***/ }),\n\n/***/ 6969:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar toPrimitive = __webpack_require__(2777);\nvar isSymbol = __webpack_require__(757);\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n\n\n/***/ }),\n\n/***/ 6980:\n/***/ ((module) => {\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n\n/***/ 7040:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = __webpack_require__(4495);\n\nmodule.exports = NATIVE_SYMBOL &&\n  !Symbol.sham &&\n  typeof Symbol.iterator == 'symbol';\n\n\n/***/ }),\n\n/***/ 7055:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\nvar fails = __webpack_require__(9039);\nvar classof = __webpack_require__(2195);\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) === 'String' ? split(it, '') : $Object(it);\n} : $Object;\n\n\n/***/ }),\n\n/***/ 7080:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar has = (__webpack_require__(4402).has);\n\n// Perform ? RequireInternalSlot(M, [[SetData]])\nmodule.exports = function (it) {\n  has(it);\n  return it;\n};\n\n\n/***/ }),\n\n/***/ 7347:\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\nvar DESCRIPTORS = __webpack_require__(3724);\nvar call = __webpack_require__(9565);\nvar propertyIsEnumerableModule = __webpack_require__(8773);\nvar createPropertyDescriptor = __webpack_require__(6980);\nvar toIndexedObject = __webpack_require__(5397);\nvar toPropertyKey = __webpack_require__(6969);\nvar hasOwn = __webpack_require__(9297);\nvar IE8_DOM_DEFINE = __webpack_require__(5917);\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n\n\n/***/ }),\n\n/***/ 7394:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar uncurryThisAccessor = __webpack_require__(6706);\nvar classof = __webpack_require__(2195);\n\nvar ArrayBuffer = globalThis.ArrayBuffer;\nvar TypeError = globalThis.TypeError;\n\n// Includes\n// - Perform ? RequireInternalSlot(O, [[ArrayBufferData]]).\n// - If IsSharedArrayBuffer(O) is true, throw a TypeError exception.\nmodule.exports = ArrayBuffer && uncurryThisAccessor(ArrayBuffer.prototype, 'byteLength', 'get') || function (O) {\n  if (classof(O) !== 'ArrayBuffer') throw new TypeError('ArrayBuffer expected');\n  return O.byteLength;\n};\n\n\n/***/ }),\n\n/***/ 7416:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar fails = __webpack_require__(9039);\nvar wellKnownSymbol = __webpack_require__(8227);\nvar DESCRIPTORS = __webpack_require__(3724);\nvar IS_PURE = __webpack_require__(6395);\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line unicorn/relative-url-style -- required for testing\n  var url = new URL('b?a=1&b=2&c=3', 'https://a');\n  var params = url.searchParams;\n  var params2 = new URLSearchParams('a=1&a=2&b=3');\n  var result = '';\n  url.pathname = 'c%20d';\n  params.forEach(function (value, key) {\n    params['delete']('b');\n    result += key + value;\n  });\n  params2['delete']('a', 2);\n  // `undefined` case is a Chromium 117 bug\n  // https://bugs.chromium.org/p/v8/issues/detail?id=14222\n  params2['delete']('b', undefined);\n  return (IS_PURE && (!url.toJSON || !params2.has('a', 1) || params2.has('a', 2) || !params2.has('a', undefined) || params2.has('b')))\n    || (!params.size && (IS_PURE || !DESCRIPTORS))\n    || !params.sort\n    || url.href !== 'https://a/c%20d?a=1&c=3'\n    || params.get('c') !== '3'\n    || String(new URLSearchParams('?a=1')) !== 'a=1'\n    || !params[ITERATOR]\n    // throws in Edge\n    || new URL('https://a@b').username !== 'a'\n    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'\n    // not punycoded in Edge\n    || new URL('https://тест').host !== 'xn--e1aybc'\n    // not escaped in Chrome 62-\n    || new URL('https://a#б').hash !== '#%D0%B1'\n    // fails in Chrome 66-\n    || result !== 'a1c3'\n    // throws in Safari\n    || new URL('https://x', undefined).host !== 'x';\n});\n\n\n/***/ }),\n\n/***/ 7476:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar classofRaw = __webpack_require__(2195);\nvar uncurryThis = __webpack_require__(9504);\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n\n\n/***/ }),\n\n/***/ 7566:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar defineBuiltIn = __webpack_require__(6840);\nvar uncurryThis = __webpack_require__(9504);\nvar toString = __webpack_require__(655);\nvar validateArgumentsLength = __webpack_require__(2812);\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n\n\n/***/ }),\n\n/***/ 7588:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar call = __webpack_require__(9565);\nvar iterate = __webpack_require__(2652);\nvar aCallable = __webpack_require__(9306);\nvar anObject = __webpack_require__(8551);\nvar getIteratorDirect = __webpack_require__(1767);\nvar iteratorClose = __webpack_require__(9539);\nvar iteratorHelperWithoutClosingOnEarlyError = __webpack_require__(4549);\n\nvar forEachWithoutClosingOnEarlyError = iteratorHelperWithoutClosingOnEarlyError('forEach', TypeError);\n\n// `Iterator.prototype.forEach` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.foreach\n$({ target: 'Iterator', proto: true, real: true, forced: forEachWithoutClosingOnEarlyError }, {\n  forEach: function forEach(fn) {\n    anObject(this);\n    try {\n      aCallable(fn);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (forEachWithoutClosingOnEarlyError) return call(forEachWithoutClosingOnEarlyError, this, fn);\n\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    iterate(record, function (value) {\n      fn(value, counter++);\n    }, { IS_RECORD: true });\n  }\n});\n\n\n/***/ }),\n\n/***/ 7629:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar IS_PURE = __webpack_require__(6395);\nvar globalThis = __webpack_require__(4576);\nvar defineGlobalProperty = __webpack_require__(9433);\n\nvar SHARED = '__core-js_shared__';\nvar store = module.exports = globalThis[SHARED] || defineGlobalProperty(SHARED, {});\n\n(store.versions || (store.versions = [])).push({\n  version: '3.45.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2025 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.45.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n\n\n/***/ }),\n\n/***/ 7642:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar difference = __webpack_require__(3440);\nvar fails = __webpack_require__(9039);\nvar setMethodAcceptSetLike = __webpack_require__(4916);\n\nvar SET_LIKE_INCORRECT_BEHAVIOR = !setMethodAcceptSetLike('difference', function (result) {\n  return result.size === 0;\n});\n\nvar FORCED = SET_LIKE_INCORRECT_BEHAVIOR || fails(function () {\n  // https://bugs.webkit.org/show_bug.cgi?id=288595\n  var setLike = {\n    size: 1,\n    has: function () { return true; },\n    keys: function () {\n      var index = 0;\n      return {\n        next: function () {\n          var done = index++ > 1;\n          if (baseSet.has(1)) baseSet.clear();\n          return { done: done, value: 2 };\n        }\n      };\n    }\n  };\n  // eslint-disable-next-line es/no-set -- testing\n  var baseSet = new Set([1, 2, 3, 4]);\n  // eslint-disable-next-line es/no-set-prototype-difference -- testing\n  return baseSet.difference(setLike).size !== 3;\n});\n\n// `Set.prototype.difference` method\n// https://tc39.es/ecma262/#sec-set.prototype.difference\n$({ target: 'Set', proto: true, real: true, forced: FORCED }, {\n  difference: difference\n});\n\n\n/***/ }),\n\n/***/ 7657:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar fails = __webpack_require__(9039);\nvar isCallable = __webpack_require__(4901);\nvar isObject = __webpack_require__(34);\nvar create = __webpack_require__(2360);\nvar getPrototypeOf = __webpack_require__(2787);\nvar defineBuiltIn = __webpack_require__(6840);\nvar wellKnownSymbol = __webpack_require__(8227);\nvar IS_PURE = __webpack_require__(6395);\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  defineBuiltIn(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n\n\n/***/ }),\n\n/***/ 7680:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\n\nmodule.exports = uncurryThis([].slice);\n\n\n/***/ }),\n\n/***/ 7696:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar toIntegerOrInfinity = __webpack_require__(1291);\nvar toLength = __webpack_require__(8014);\n\nvar $RangeError = RangeError;\n\n// `ToIndex` abstract operation\n// https://tc39.es/ecma262/#sec-toindex\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toIntegerOrInfinity(it);\n  var length = toLength(number);\n  if (number !== length) throw new $RangeError('Wrong length or index');\n  return length;\n};\n\n\n/***/ }),\n\n/***/ 7740:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar hasOwn = __webpack_require__(9297);\nvar ownKeys = __webpack_require__(5031);\nvar getOwnPropertyDescriptorModule = __webpack_require__(7347);\nvar definePropertyModule = __webpack_require__(4913);\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n\n\n/***/ }),\n\n/***/ 7750:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar isNullOrUndefined = __webpack_require__(4117);\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw new $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n\n\n/***/ }),\n\n/***/ 7751:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar isCallable = __webpack_require__(4901);\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(globalThis[namespace]) : globalThis[namespace] && globalThis[namespace][method];\n};\n\n\n/***/ }),\n\n/***/ 7811:\n/***/ ((module) => {\n\n\n// eslint-disable-next-line es/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';\n\n\n/***/ }),\n\n/***/ 7936:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar $transfer = __webpack_require__(5636);\n\n// `ArrayBuffer.prototype.transferToFixedLength` method\n// https://tc39.es/ecma262/#sec-arraybuffer.prototype.transfertofixedlength\nif ($transfer) $({ target: 'ArrayBuffer', proto: true }, {\n  transferToFixedLength: function transferToFixedLength() {\n    return $transfer(this, arguments.length ? arguments[0] : undefined, false);\n  }\n});\n\n\n/***/ }),\n\n/***/ 8004:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar fails = __webpack_require__(9039);\nvar intersection = __webpack_require__(8750);\nvar setMethodAcceptSetLike = __webpack_require__(4916);\n\nvar INCORRECT = !setMethodAcceptSetLike('intersection', function (result) {\n  return result.size === 2 && result.has(1) && result.has(2);\n}) || fails(function () {\n  // eslint-disable-next-line es/no-array-from, es/no-set, es/no-set-prototype-intersection -- testing\n  return String(Array.from(new Set([1, 2, 3]).intersection(new Set([3, 2])))) !== '3,2';\n});\n\n// `Set.prototype.intersection` method\n// https://tc39.es/ecma262/#sec-set.prototype.intersection\n$({ target: 'Set', proto: true, real: true, forced: INCORRECT }, {\n  intersection: intersection\n});\n\n\n/***/ }),\n\n/***/ 8014:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar toIntegerOrInfinity = __webpack_require__(1291);\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  var len = toIntegerOrInfinity(argument);\n  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n\n\n/***/ }),\n\n/***/ 8100:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar $transfer = __webpack_require__(5636);\n\n// `ArrayBuffer.prototype.transfer` method\n// https://tc39.es/ecma262/#sec-arraybuffer.prototype.transfer\nif ($transfer) $({ target: 'ArrayBuffer', proto: true }, {\n  transfer: function transfer() {\n    return $transfer(this, arguments.length ? arguments[0] : undefined, true);\n  }\n});\n\n\n/***/ }),\n\n/***/ 8111:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar globalThis = __webpack_require__(4576);\nvar anInstance = __webpack_require__(679);\nvar anObject = __webpack_require__(8551);\nvar isCallable = __webpack_require__(4901);\nvar getPrototypeOf = __webpack_require__(2787);\nvar defineBuiltInAccessor = __webpack_require__(2106);\nvar createProperty = __webpack_require__(4659);\nvar fails = __webpack_require__(9039);\nvar hasOwn = __webpack_require__(9297);\nvar wellKnownSymbol = __webpack_require__(8227);\nvar IteratorPrototype = (__webpack_require__(7657).IteratorPrototype);\nvar DESCRIPTORS = __webpack_require__(3724);\nvar IS_PURE = __webpack_require__(6395);\n\nvar CONSTRUCTOR = 'constructor';\nvar ITERATOR = 'Iterator';\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nvar $TypeError = TypeError;\nvar NativeIterator = globalThis[ITERATOR];\n\n// FF56- have non-standard global helper `Iterator`\nvar FORCED = IS_PURE\n  || !isCallable(NativeIterator)\n  || NativeIterator.prototype !== IteratorPrototype\n  // FF44- non-standard `Iterator` passes previous tests\n  || !fails(function () { NativeIterator({}); });\n\nvar IteratorConstructor = function Iterator() {\n  anInstance(this, IteratorPrototype);\n  if (getPrototypeOf(this) === IteratorPrototype) throw new $TypeError('Abstract class Iterator not directly constructable');\n};\n\nvar defineIteratorPrototypeAccessor = function (key, value) {\n  if (DESCRIPTORS) {\n    defineBuiltInAccessor(IteratorPrototype, key, {\n      configurable: true,\n      get: function () {\n        return value;\n      },\n      set: function (replacement) {\n        anObject(this);\n        if (this === IteratorPrototype) throw new $TypeError(\"You can't redefine this property\");\n        if (hasOwn(this, key)) this[key] = replacement;\n        else createProperty(this, key, replacement);\n      }\n    });\n  } else IteratorPrototype[key] = value;\n};\n\nif (!hasOwn(IteratorPrototype, TO_STRING_TAG)) defineIteratorPrototypeAccessor(TO_STRING_TAG, ITERATOR);\n\nif (FORCED || !hasOwn(IteratorPrototype, CONSTRUCTOR) || IteratorPrototype[CONSTRUCTOR] === Object) {\n  defineIteratorPrototypeAccessor(CONSTRUCTOR, IteratorConstructor);\n}\n\nIteratorConstructor.prototype = IteratorPrototype;\n\n// `Iterator` constructor\n// https://tc39.es/ecma262/#sec-iterator\n$({ global: true, constructor: true, forced: FORCED }, {\n  Iterator: IteratorConstructor\n});\n\n\n/***/ }),\n\n/***/ 8227:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar shared = __webpack_require__(5745);\nvar hasOwn = __webpack_require__(9297);\nvar uid = __webpack_require__(3392);\nvar NATIVE_SYMBOL = __webpack_require__(4495);\nvar USE_SYMBOL_AS_UID = __webpack_require__(7040);\n\nvar Symbol = globalThis.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n\n\n/***/ }),\n\n/***/ 8235:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\nvar hasOwn = __webpack_require__(9297);\n\nvar $SyntaxError = SyntaxError;\nvar $parseInt = parseInt;\nvar fromCharCode = String.fromCharCode;\nvar at = uncurryThis(''.charAt);\nvar slice = uncurryThis(''.slice);\nvar exec = uncurryThis(/./.exec);\n\nvar codePoints = {\n  '\\\\\"': '\"',\n  '\\\\\\\\': '\\\\',\n  '\\\\/': '/',\n  '\\\\b': '\\b',\n  '\\\\f': '\\f',\n  '\\\\n': '\\n',\n  '\\\\r': '\\r',\n  '\\\\t': '\\t'\n};\n\nvar IS_4_HEX_DIGITS = /^[\\da-f]{4}$/i;\n// eslint-disable-next-line regexp/no-control-character -- safe\nvar IS_C0_CONTROL_CODE = /^[\\u0000-\\u001F]$/;\n\nmodule.exports = function (source, i) {\n  var unterminated = true;\n  var value = '';\n  while (i < source.length) {\n    var chr = at(source, i);\n    if (chr === '\\\\') {\n      var twoChars = slice(source, i, i + 2);\n      if (hasOwn(codePoints, twoChars)) {\n        value += codePoints[twoChars];\n        i += 2;\n      } else if (twoChars === '\\\\u') {\n        i += 2;\n        var fourHexDigits = slice(source, i, i + 4);\n        if (!exec(IS_4_HEX_DIGITS, fourHexDigits)) throw new $SyntaxError('Bad Unicode escape at: ' + i);\n        value += fromCharCode($parseInt(fourHexDigits, 16));\n        i += 4;\n      } else throw new $SyntaxError('Unknown escape sequence: \"' + twoChars + '\"');\n    } else if (chr === '\"') {\n      unterminated = false;\n      i++;\n      break;\n    } else {\n      if (exec(IS_C0_CONTROL_CODE, chr)) throw new $SyntaxError('Bad control character in string literal at: ' + i);\n      value += chr;\n      i++;\n    }\n  }\n  if (unterminated) throw new $SyntaxError('Unterminated string at: ' + i);\n  return { value: value, end: i };\n};\n\n\n/***/ }),\n\n/***/ 8237:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar iterate = __webpack_require__(2652);\nvar aCallable = __webpack_require__(9306);\nvar anObject = __webpack_require__(8551);\nvar getIteratorDirect = __webpack_require__(1767);\nvar iteratorClose = __webpack_require__(9539);\nvar iteratorHelperWithoutClosingOnEarlyError = __webpack_require__(4549);\nvar apply = __webpack_require__(8745);\nvar fails = __webpack_require__(9039);\n\nvar $TypeError = TypeError;\n\n// https://bugs.webkit.org/show_bug.cgi?id=291651\nvar FAILS_ON_INITIAL_UNDEFINED = fails(function () {\n  // eslint-disable-next-line es/no-iterator-prototype-reduce, es/no-array-prototype-keys, array-callback-return -- required for testing\n  [].keys().reduce(function () { /* empty */ }, undefined);\n});\n\nvar reduceWithoutClosingOnEarlyError = !FAILS_ON_INITIAL_UNDEFINED && iteratorHelperWithoutClosingOnEarlyError('reduce', $TypeError);\n\n// `Iterator.prototype.reduce` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.reduce\n$({ target: 'Iterator', proto: true, real: true, forced: FAILS_ON_INITIAL_UNDEFINED || reduceWithoutClosingOnEarlyError }, {\n  reduce: function reduce(reducer /* , initialValue */) {\n    anObject(this);\n    try {\n      aCallable(reducer);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    if (reduceWithoutClosingOnEarlyError) {\n      return apply(reduceWithoutClosingOnEarlyError, this, noInitial ? [reducer] : [reducer, accumulator]);\n    }\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    iterate(record, function (value) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = reducer(accumulator, value, counter);\n      }\n      counter++;\n    }, { IS_RECORD: true });\n    if (noInitial) throw new $TypeError('Reduce of empty iterator with no initial value');\n    return accumulator;\n  }\n});\n\n\n/***/ }),\n\n/***/ 8335:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar DESCRIPTORS = __webpack_require__(3724);\nvar globalThis = __webpack_require__(4576);\nvar getBuiltIn = __webpack_require__(7751);\nvar uncurryThis = __webpack_require__(9504);\nvar call = __webpack_require__(9565);\nvar isCallable = __webpack_require__(4901);\nvar isObject = __webpack_require__(34);\nvar isArray = __webpack_require__(4376);\nvar hasOwn = __webpack_require__(9297);\nvar toString = __webpack_require__(655);\nvar lengthOfArrayLike = __webpack_require__(6198);\nvar createProperty = __webpack_require__(4659);\nvar fails = __webpack_require__(9039);\nvar parseJSONString = __webpack_require__(8235);\nvar NATIVE_SYMBOL = __webpack_require__(4495);\n\nvar JSON = globalThis.JSON;\nvar Number = globalThis.Number;\nvar SyntaxError = globalThis.SyntaxError;\nvar nativeParse = JSON && JSON.parse;\nvar enumerableOwnProperties = getBuiltIn('Object', 'keys');\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar at = uncurryThis(''.charAt);\nvar slice = uncurryThis(''.slice);\nvar exec = uncurryThis(/./.exec);\nvar push = uncurryThis([].push);\n\nvar IS_DIGIT = /^\\d$/;\nvar IS_NON_ZERO_DIGIT = /^[1-9]$/;\nvar IS_NUMBER_START = /^[\\d-]$/;\nvar IS_WHITESPACE = /^[\\t\\n\\r ]$/;\n\nvar PRIMITIVE = 0;\nvar OBJECT = 1;\n\nvar $parse = function (source, reviver) {\n  source = toString(source);\n  var context = new Context(source, 0, '');\n  var root = context.parse();\n  var value = root.value;\n  var endIndex = context.skip(IS_WHITESPACE, root.end);\n  if (endIndex < source.length) {\n    throw new SyntaxError('Unexpected extra character: \"' + at(source, endIndex) + '\" after the parsed data at: ' + endIndex);\n  }\n  return isCallable(reviver) ? internalize({ '': value }, '', reviver, root) : value;\n};\n\nvar internalize = function (holder, name, reviver, node) {\n  var val = holder[name];\n  var unmodified = node && val === node.value;\n  var context = unmodified && typeof node.source == 'string' ? { source: node.source } : {};\n  var elementRecordsLen, keys, len, i, P;\n  if (isObject(val)) {\n    var nodeIsArray = isArray(val);\n    var nodes = unmodified ? node.nodes : nodeIsArray ? [] : {};\n    if (nodeIsArray) {\n      elementRecordsLen = nodes.length;\n      len = lengthOfArrayLike(val);\n      for (i = 0; i < len; i++) {\n        internalizeProperty(val, i, internalize(val, '' + i, reviver, i < elementRecordsLen ? nodes[i] : undefined));\n      }\n    } else {\n      keys = enumerableOwnProperties(val);\n      len = lengthOfArrayLike(keys);\n      for (i = 0; i < len; i++) {\n        P = keys[i];\n        internalizeProperty(val, P, internalize(val, P, reviver, hasOwn(nodes, P) ? nodes[P] : undefined));\n      }\n    }\n  }\n  return call(reviver, holder, name, val, context);\n};\n\nvar internalizeProperty = function (object, key, value) {\n  if (DESCRIPTORS) {\n    var descriptor = getOwnPropertyDescriptor(object, key);\n    if (descriptor && !descriptor.configurable) return;\n  }\n  if (value === undefined) delete object[key];\n  else createProperty(object, key, value);\n};\n\nvar Node = function (value, end, source, nodes) {\n  this.value = value;\n  this.end = end;\n  this.source = source;\n  this.nodes = nodes;\n};\n\nvar Context = function (source, index) {\n  this.source = source;\n  this.index = index;\n};\n\n// https://www.json.org/json-en.html\nContext.prototype = {\n  fork: function (nextIndex) {\n    return new Context(this.source, nextIndex);\n  },\n  parse: function () {\n    var source = this.source;\n    var i = this.skip(IS_WHITESPACE, this.index);\n    var fork = this.fork(i);\n    var chr = at(source, i);\n    if (exec(IS_NUMBER_START, chr)) return fork.number();\n    switch (chr) {\n      case '{':\n        return fork.object();\n      case '[':\n        return fork.array();\n      case '\"':\n        return fork.string();\n      case 't':\n        return fork.keyword(true);\n      case 'f':\n        return fork.keyword(false);\n      case 'n':\n        return fork.keyword(null);\n    } throw new SyntaxError('Unexpected character: \"' + chr + '\" at: ' + i);\n  },\n  node: function (type, value, start, end, nodes) {\n    return new Node(value, end, type ? null : slice(this.source, start, end), nodes);\n  },\n  object: function () {\n    var source = this.source;\n    var i = this.index + 1;\n    var expectKeypair = false;\n    var object = {};\n    var nodes = {};\n    while (i < source.length) {\n      i = this.until(['\"', '}'], i);\n      if (at(source, i) === '}' && !expectKeypair) {\n        i++;\n        break;\n      }\n      // Parsing the key\n      var result = this.fork(i).string();\n      var key = result.value;\n      i = result.end;\n      i = this.until([':'], i) + 1;\n      // Parsing value\n      i = this.skip(IS_WHITESPACE, i);\n      result = this.fork(i).parse();\n      createProperty(nodes, key, result);\n      createProperty(object, key, result.value);\n      i = this.until([',', '}'], result.end);\n      var chr = at(source, i);\n      if (chr === ',') {\n        expectKeypair = true;\n        i++;\n      } else if (chr === '}') {\n        i++;\n        break;\n      }\n    }\n    return this.node(OBJECT, object, this.index, i, nodes);\n  },\n  array: function () {\n    var source = this.source;\n    var i = this.index + 1;\n    var expectElement = false;\n    var array = [];\n    var nodes = [];\n    while (i < source.length) {\n      i = this.skip(IS_WHITESPACE, i);\n      if (at(source, i) === ']' && !expectElement) {\n        i++;\n        break;\n      }\n      var result = this.fork(i).parse();\n      push(nodes, result);\n      push(array, result.value);\n      i = this.until([',', ']'], result.end);\n      if (at(source, i) === ',') {\n        expectElement = true;\n        i++;\n      } else if (at(source, i) === ']') {\n        i++;\n        break;\n      }\n    }\n    return this.node(OBJECT, array, this.index, i, nodes);\n  },\n  string: function () {\n    var index = this.index;\n    var parsed = parseJSONString(this.source, this.index + 1);\n    return this.node(PRIMITIVE, parsed.value, index, parsed.end);\n  },\n  number: function () {\n    var source = this.source;\n    var startIndex = this.index;\n    var i = startIndex;\n    if (at(source, i) === '-') i++;\n    if (at(source, i) === '0') i++;\n    else if (exec(IS_NON_ZERO_DIGIT, at(source, i))) i = this.skip(IS_DIGIT, i + 1);\n    else throw new SyntaxError('Failed to parse number at: ' + i);\n    if (at(source, i) === '.') i = this.skip(IS_DIGIT, i + 1);\n    if (at(source, i) === 'e' || at(source, i) === 'E') {\n      i++;\n      if (at(source, i) === '+' || at(source, i) === '-') i++;\n      var exponentStartIndex = i;\n      i = this.skip(IS_DIGIT, i);\n      if (exponentStartIndex === i) throw new SyntaxError(\"Failed to parse number's exponent value at: \" + i);\n    }\n    return this.node(PRIMITIVE, Number(slice(source, startIndex, i)), startIndex, i);\n  },\n  keyword: function (value) {\n    var keyword = '' + value;\n    var index = this.index;\n    var endIndex = index + keyword.length;\n    if (slice(this.source, index, endIndex) !== keyword) throw new SyntaxError('Failed to parse value at: ' + index);\n    return this.node(PRIMITIVE, value, index, endIndex);\n  },\n  skip: function (regex, i) {\n    var source = this.source;\n    for (; i < source.length; i++) if (!exec(regex, at(source, i))) break;\n    return i;\n  },\n  until: function (array, i) {\n    i = this.skip(IS_WHITESPACE, i);\n    var chr = at(this.source, i);\n    for (var j = 0; j < array.length; j++) if (array[j] === chr) return i;\n    throw new SyntaxError('Unexpected character: \"' + chr + '\" at: ' + i);\n  }\n};\n\nvar NO_SOURCE_SUPPORT = fails(function () {\n  var unsafeInt = '9007199254740993';\n  var source;\n  nativeParse(unsafeInt, function (key, value, context) {\n    source = context.source;\n  });\n  return source !== unsafeInt;\n});\n\nvar PROPER_BASE_PARSE = NATIVE_SYMBOL && !fails(function () {\n  // Safari 9 bug\n  return 1 / nativeParse('-0 \\t') !== -Infinity;\n});\n\n// `JSON.parse` method\n// https://tc39.es/ecma262/#sec-json.parse\n// https://github.com/tc39/proposal-json-parse-with-source\n$({ target: 'JSON', stat: true, forced: NO_SOURCE_SUPPORT }, {\n  parse: function parse(text, reviver) {\n    return PROPER_BASE_PARSE && !isCallable(reviver) ? nativeParse(text) : $parse(text, reviver);\n  }\n});\n\n\n/***/ }),\n\n/***/ 8469:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\nvar iterateSimple = __webpack_require__(507);\nvar SetHelpers = __webpack_require__(4402);\n\nvar Set = SetHelpers.Set;\nvar SetPrototype = SetHelpers.proto;\nvar forEach = uncurryThis(SetPrototype.forEach);\nvar keys = uncurryThis(SetPrototype.keys);\nvar next = keys(new Set()).next;\n\nmodule.exports = function (set, fn, interruptible) {\n  return interruptible ? iterateSimple({ iterator: keys(set), next: next }, fn) : forEach(set, fn);\n};\n\n\n/***/ }),\n\n/***/ 8480:\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\nvar internalObjectKeys = __webpack_require__(1828);\nvar enumBugKeys = __webpack_require__(8727);\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n\n\n/***/ }),\n\n/***/ 8527:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar aSet = __webpack_require__(7080);\nvar has = (__webpack_require__(4402).has);\nvar size = __webpack_require__(5170);\nvar getSetRecord = __webpack_require__(3789);\nvar iterateSimple = __webpack_require__(507);\nvar iteratorClose = __webpack_require__(9539);\n\n// `Set.prototype.isSupersetOf` method\n// https://tc39.es/ecma262/#sec-set.prototype.issupersetof\nmodule.exports = function isSupersetOf(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) < otherRec.size) return false;\n  var iterator = otherRec.getIterator();\n  return iterateSimple(iterator, function (e) {\n    if (!has(O, e)) return iteratorClose(iterator, 'normal', false);\n  }) !== false;\n};\n\n\n/***/ }),\n\n/***/ 8551:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar isObject = __webpack_require__(34);\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object');\n};\n\n\n/***/ }),\n\n/***/ 8574:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\n\nvar $Error = Error;\nvar replace = uncurryThis(''.replace);\n\nvar TEST = (function (arg) { return String(new $Error(arg).stack); })('zxcasd');\n// eslint-disable-next-line redos/no-vulnerable, sonarjs/slow-regex -- safe\nvar V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\nvar IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\n\nmodule.exports = function (stack, dropEntries) {\n  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error.prepareStackTrace) {\n    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n  } return stack;\n};\n\n\n/***/ }),\n\n/***/ 8622:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar isCallable = __webpack_require__(4901);\n\nvar WeakMap = globalThis.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n\n\n/***/ }),\n\n/***/ 8646:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar call = __webpack_require__(9565);\nvar anObject = __webpack_require__(8551);\nvar getIteratorDirect = __webpack_require__(1767);\nvar getIteratorMethod = __webpack_require__(851);\n\nmodule.exports = function (obj, stringHandling) {\n  if (!stringHandling || typeof obj !== 'string') anObject(obj);\n  var method = getIteratorMethod(obj);\n  return getIteratorDirect(anObject(method !== undefined ? call(method, obj) : obj));\n};\n\n\n/***/ }),\n\n/***/ 8686:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar DESCRIPTORS = __webpack_require__(3724);\nvar fails = __webpack_require__(9039);\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});\n\n\n/***/ }),\n\n/***/ 8721:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar DESCRIPTORS = __webpack_require__(3724);\nvar uncurryThis = __webpack_require__(9504);\nvar defineBuiltInAccessor = __webpack_require__(2106);\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n\n\n/***/ }),\n\n/***/ 8727:\n/***/ ((module) => {\n\n\n// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n\n\n/***/ }),\n\n/***/ 8745:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar NATIVE_BIND = __webpack_require__(616);\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-function-prototype-bind, es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n\n\n/***/ }),\n\n/***/ 8750:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar aSet = __webpack_require__(7080);\nvar SetHelpers = __webpack_require__(4402);\nvar size = __webpack_require__(5170);\nvar getSetRecord = __webpack_require__(3789);\nvar iterateSet = __webpack_require__(8469);\nvar iterateSimple = __webpack_require__(507);\n\nvar Set = SetHelpers.Set;\nvar add = SetHelpers.add;\nvar has = SetHelpers.has;\n\n// `Set.prototype.intersection` method\n// https://tc39.es/ecma262/#sec-set.prototype.intersection\nmodule.exports = function intersection(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  var result = new Set();\n\n  if (size(O) > otherRec.size) {\n    iterateSimple(otherRec.getIterator(), function (e) {\n      if (has(O, e)) add(result, e);\n    });\n  } else {\n    iterateSet(O, function (e) {\n      if (otherRec.includes(e)) add(result, e);\n    });\n  }\n\n  return result;\n};\n\n\n/***/ }),\n\n/***/ 8773:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n\n\n/***/ }),\n\n/***/ 8981:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar requireObjectCoercible = __webpack_require__(7750);\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n\n\n/***/ }),\n\n/***/ 9039:\n/***/ ((module) => {\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n\n\n/***/ }),\n\n/***/ 9143:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar uncurryThis = __webpack_require__(9504);\nvar anObjectOrUndefined = __webpack_require__(3972);\nvar aString = __webpack_require__(3463);\nvar hasOwn = __webpack_require__(9297);\nvar base64Map = __webpack_require__(2804);\nvar getAlphabetOption = __webpack_require__(944);\nvar notDetached = __webpack_require__(5169);\n\nvar base64Alphabet = base64Map.c2i;\nvar base64UrlAlphabet = base64Map.c2iUrl;\n\nvar SyntaxError = globalThis.SyntaxError;\nvar TypeError = globalThis.TypeError;\nvar at = uncurryThis(''.charAt);\n\nvar skipAsciiWhitespace = function (string, index) {\n  var length = string.length;\n  for (;index < length; index++) {\n    var chr = at(string, index);\n    if (chr !== ' ' && chr !== '\\t' && chr !== '\\n' && chr !== '\\f' && chr !== '\\r') break;\n  } return index;\n};\n\nvar decodeBase64Chunk = function (chunk, alphabet, throwOnExtraBits) {\n  var chunkLength = chunk.length;\n\n  if (chunkLength < 4) {\n    chunk += chunkLength === 2 ? 'AA' : 'A';\n  }\n\n  var triplet = (alphabet[at(chunk, 0)] << 18)\n    + (alphabet[at(chunk, 1)] << 12)\n    + (alphabet[at(chunk, 2)] << 6)\n    + alphabet[at(chunk, 3)];\n\n  var chunkBytes = [\n    (triplet >> 16) & 255,\n    (triplet >> 8) & 255,\n    triplet & 255\n  ];\n\n  if (chunkLength === 2) {\n    if (throwOnExtraBits && chunkBytes[1] !== 0) {\n      throw new SyntaxError('Extra bits');\n    }\n    return [chunkBytes[0]];\n  }\n\n  if (chunkLength === 3) {\n    if (throwOnExtraBits && chunkBytes[2] !== 0) {\n      throw new SyntaxError('Extra bits');\n    }\n    return [chunkBytes[0], chunkBytes[1]];\n  }\n\n  return chunkBytes;\n};\n\nvar writeBytes = function (bytes, elements, written) {\n  var elementsLength = elements.length;\n  for (var index = 0; index < elementsLength; index++) {\n    bytes[written + index] = elements[index];\n  }\n  return written + elementsLength;\n};\n\n/* eslint-disable max-statements, max-depth -- TODO */\nmodule.exports = function (string, options, into, maxLength) {\n  aString(string);\n  anObjectOrUndefined(options);\n  var alphabet = getAlphabetOption(options) === 'base64' ? base64Alphabet : base64UrlAlphabet;\n  var lastChunkHandling = options ? options.lastChunkHandling : undefined;\n\n  if (lastChunkHandling === undefined) lastChunkHandling = 'loose';\n\n  if (lastChunkHandling !== 'loose' && lastChunkHandling !== 'strict' && lastChunkHandling !== 'stop-before-partial') {\n    throw new TypeError('Incorrect `lastChunkHandling` option');\n  }\n\n  if (into) notDetached(into.buffer);\n\n  var stringLength = string.length;\n  var bytes = into || [];\n  var written = 0;\n  var read = 0;\n  var chunk = '';\n  var index = 0;\n\n  if (maxLength) while (true) {\n    index = skipAsciiWhitespace(string, index);\n    if (index === stringLength) {\n      if (chunk.length > 0) {\n        if (lastChunkHandling === 'stop-before-partial') {\n          break;\n        }\n        if (lastChunkHandling === 'loose') {\n          if (chunk.length === 1) {\n            throw new SyntaxError('Malformed padding: exactly one additional character');\n          }\n          written = writeBytes(bytes, decodeBase64Chunk(chunk, alphabet, false), written);\n        } else {\n          throw new SyntaxError('Missing padding');\n        }\n      }\n      read = stringLength;\n      break;\n    }\n    var chr = at(string, index);\n    ++index;\n    if (chr === '=') {\n      if (chunk.length < 2) {\n        throw new SyntaxError('Padding is too early');\n      }\n      index = skipAsciiWhitespace(string, index);\n      if (chunk.length === 2) {\n        if (index === stringLength) {\n          if (lastChunkHandling === 'stop-before-partial') {\n            break;\n          }\n          throw new SyntaxError('Malformed padding: only one =');\n        }\n        if (at(string, index) === '=') {\n          ++index;\n          index = skipAsciiWhitespace(string, index);\n        }\n      }\n      if (index < stringLength) {\n        throw new SyntaxError('Unexpected character after padding');\n      }\n      written = writeBytes(bytes, decodeBase64Chunk(chunk, alphabet, lastChunkHandling === 'strict'), written);\n      read = stringLength;\n      break;\n    }\n    if (!hasOwn(alphabet, chr)) {\n      throw new SyntaxError('Unexpected character');\n    }\n    var remainingBytes = maxLength - written;\n    if (remainingBytes === 1 && chunk.length === 2 || remainingBytes === 2 && chunk.length === 3) {\n      // special case: we can fit exactly the number of bytes currently represented by chunk, so we were just checking for `=`\n      break;\n    }\n\n    chunk += chr;\n    if (chunk.length === 4) {\n      written = writeBytes(bytes, decodeBase64Chunk(chunk, alphabet, false), written);\n      chunk = '';\n      read = index;\n      if (written === maxLength) {\n        break;\n      }\n    }\n  }\n\n  return { bytes: bytes, read: read, written: written };\n};\n\n\n/***/ }),\n\n/***/ 9286:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar SetHelpers = __webpack_require__(4402);\nvar iterate = __webpack_require__(8469);\n\nvar Set = SetHelpers.Set;\nvar add = SetHelpers.add;\n\nmodule.exports = function (set) {\n  var result = new Set();\n  iterate(set, function (it) {\n    add(result, it);\n  });\n  return result;\n};\n\n\n/***/ }),\n\n/***/ 9297:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar uncurryThis = __webpack_require__(9504);\nvar toObject = __webpack_require__(8981);\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n\n\n/***/ }),\n\n/***/ 9306:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar isCallable = __webpack_require__(4901);\nvar tryToString = __webpack_require__(6823);\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + ' is not a function');\n};\n\n\n/***/ }),\n\n/***/ 9314:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar call = __webpack_require__(9565);\nvar anObject = __webpack_require__(8551);\nvar getIteratorDirect = __webpack_require__(1767);\nvar notANaN = __webpack_require__(4149);\nvar toPositiveInteger = __webpack_require__(9590);\nvar iteratorClose = __webpack_require__(9539);\nvar createIteratorProxy = __webpack_require__(9462);\nvar iteratorHelperThrowsOnInvalidIterator = __webpack_require__(684);\nvar iteratorHelperWithoutClosingOnEarlyError = __webpack_require__(4549);\nvar IS_PURE = __webpack_require__(6395);\n\nvar DROP_WITHOUT_THROWING_ON_INVALID_ITERATOR = !IS_PURE && !iteratorHelperThrowsOnInvalidIterator('drop', 0);\nvar dropWithoutClosingOnEarlyError = !IS_PURE && !DROP_WITHOUT_THROWING_ON_INVALID_ITERATOR\n  && iteratorHelperWithoutClosingOnEarlyError('drop', RangeError);\n\nvar FORCED = IS_PURE || DROP_WITHOUT_THROWING_ON_INVALID_ITERATOR || dropWithoutClosingOnEarlyError;\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var next = this.next;\n  var result, done;\n  while (this.remaining) {\n    this.remaining--;\n    result = anObject(call(next, iterator));\n    done = this.done = !!result.done;\n    if (done) return;\n  }\n  result = anObject(call(next, iterator));\n  done = this.done = !!result.done;\n  if (!done) return result.value;\n});\n\n// `Iterator.prototype.drop` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.drop\n$({ target: 'Iterator', proto: true, real: true, forced: FORCED }, {\n  drop: function drop(limit) {\n    anObject(this);\n    var remaining;\n    try {\n      remaining = toPositiveInteger(notANaN(+limit));\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (dropWithoutClosingOnEarlyError) return call(dropWithoutClosingOnEarlyError, this, remaining);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      remaining: remaining\n    });\n  }\n});\n\n\n/***/ }),\n\n/***/ 9429:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar IS_NODE = __webpack_require__(6193);\n\nmodule.exports = function (name) {\n  if (IS_NODE) {\n    try {\n      return globalThis.process.getBuiltinModule(name);\n    } catch (error) { /* empty */ }\n    try {\n      // eslint-disable-next-line no-new-func -- safe\n      return Function('return require(\"' + name + '\")')();\n    } catch (error) { /* empty */ }\n  }\n};\n\n\n/***/ }),\n\n/***/ 9432:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\n// TODO: Remove from `core-js@4`\n__webpack_require__(5213);\n\n\n/***/ }),\n\n/***/ 9433:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(globalThis, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    globalThis[key] = value;\n  } return value;\n};\n\n\n/***/ }),\n\n/***/ 9462:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar call = __webpack_require__(9565);\nvar create = __webpack_require__(2360);\nvar createNonEnumerableProperty = __webpack_require__(6699);\nvar defineBuiltIns = __webpack_require__(6279);\nvar wellKnownSymbol = __webpack_require__(8227);\nvar InternalStateModule = __webpack_require__(1181);\nvar getMethod = __webpack_require__(5966);\nvar IteratorPrototype = (__webpack_require__(7657).IteratorPrototype);\nvar createIterResultObject = __webpack_require__(2529);\nvar iteratorClose = __webpack_require__(9539);\nvar iteratorCloseAll = __webpack_require__(1385);\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ITERATOR_HELPER = 'IteratorHelper';\nvar WRAP_FOR_VALID_ITERATOR = 'WrapForValidIterator';\nvar NORMAL = 'normal';\nvar THROW = 'throw';\nvar setInternalState = InternalStateModule.set;\n\nvar createIteratorProxyPrototype = function (IS_ITERATOR) {\n  var getInternalState = InternalStateModule.getterFor(IS_ITERATOR ? WRAP_FOR_VALID_ITERATOR : ITERATOR_HELPER);\n\n  return defineBuiltIns(create(IteratorPrototype), {\n    next: function next() {\n      var state = getInternalState(this);\n      // for simplification:\n      //   for `%WrapForValidIteratorPrototype%.next` or with `state.returnHandlerResult` our `nextHandler` returns `IterResultObject`\n      //   for `%IteratorHelperPrototype%.next` - just a value\n      if (IS_ITERATOR) return state.nextHandler();\n      if (state.done) return createIterResultObject(undefined, true);\n      try {\n        var result = state.nextHandler();\n        return state.returnHandlerResult ? result : createIterResultObject(result, state.done);\n      } catch (error) {\n        state.done = true;\n        throw error;\n      }\n    },\n    'return': function () {\n      var state = getInternalState(this);\n      var iterator = state.iterator;\n      state.done = true;\n      if (IS_ITERATOR) {\n        var returnMethod = getMethod(iterator, 'return');\n        return returnMethod ? call(returnMethod, iterator) : createIterResultObject(undefined, true);\n      }\n      if (state.inner) try {\n        iteratorClose(state.inner.iterator, NORMAL);\n      } catch (error) {\n        return iteratorClose(iterator, THROW, error);\n      }\n      if (state.openIters) try {\n        iteratorCloseAll(state.openIters, NORMAL);\n      } catch (error) {\n        return iteratorClose(iterator, THROW, error);\n      }\n      if (iterator) iteratorClose(iterator, NORMAL);\n      return createIterResultObject(undefined, true);\n    }\n  });\n};\n\nvar WrapForValidIteratorPrototype = createIteratorProxyPrototype(true);\nvar IteratorHelperPrototype = createIteratorProxyPrototype(false);\n\ncreateNonEnumerableProperty(IteratorHelperPrototype, TO_STRING_TAG, 'Iterator Helper');\n\nmodule.exports = function (nextHandler, IS_ITERATOR, RETURN_HANDLER_RESULT) {\n  var IteratorProxy = function Iterator(record, state) {\n    if (state) {\n      state.iterator = record.iterator;\n      state.next = record.next;\n    } else state = record;\n    state.type = IS_ITERATOR ? WRAP_FOR_VALID_ITERATOR : ITERATOR_HELPER;\n    state.returnHandlerResult = !!RETURN_HANDLER_RESULT;\n    state.nextHandler = nextHandler;\n    state.counter = 0;\n    state.done = false;\n    setInternalState(this, state);\n  };\n\n  IteratorProxy.prototype = IS_ITERATOR ? WrapForValidIteratorPrototype : IteratorHelperPrototype;\n\n  return IteratorProxy;\n};\n\n\n/***/ }),\n\n/***/ 9486:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar $ = __webpack_require__(6518);\nvar globalThis = __webpack_require__(4576);\nvar uncurryThis = __webpack_require__(9504);\nvar anObjectOrUndefined = __webpack_require__(3972);\nvar anUint8Array = __webpack_require__(4154);\nvar notDetached = __webpack_require__(5169);\nvar base64Map = __webpack_require__(2804);\nvar getAlphabetOption = __webpack_require__(944);\n\nvar base64Alphabet = base64Map.i2c;\nvar base64UrlAlphabet = base64Map.i2cUrl;\n\nvar charAt = uncurryThis(''.charAt);\n\nvar Uint8Array = globalThis.Uint8Array;\n\nvar INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS = !Uint8Array || !Uint8Array.prototype.toBase64 || !function () {\n  try {\n    var target = new Uint8Array();\n    target.toBase64(null);\n  } catch (error) {\n    return true;\n  }\n}();\n\n// `Uint8Array.prototype.toBase64` method\n// https://github.com/tc39/proposal-arraybuffer-base64\nif (Uint8Array) $({ target: 'Uint8Array', proto: true, forced: INCORRECT_BEHAVIOR_OR_DOESNT_EXISTS }, {\n  toBase64: function toBase64(/* options */) {\n    var array = anUint8Array(this);\n    var options = arguments.length ? anObjectOrUndefined(arguments[0]) : undefined;\n    var alphabet = getAlphabetOption(options) === 'base64' ? base64Alphabet : base64UrlAlphabet;\n    var omitPadding = !!options && !!options.omitPadding;\n    notDetached(this.buffer);\n\n    var result = '';\n    var i = 0;\n    var length = array.length;\n    var triplet;\n\n    var at = function (shift) {\n      return charAt(alphabet, (triplet >> (6 * shift)) & 63);\n    };\n\n    for (; i + 2 < length; i += 3) {\n      triplet = (array[i] << 16) + (array[i + 1] << 8) + array[i + 2];\n      result += at(3) + at(2) + at(1) + at(0);\n    }\n    if (i + 2 === length) {\n      triplet = (array[i] << 16) + (array[i + 1] << 8);\n      result += at(3) + at(2) + at(1) + (omitPadding ? '' : '=');\n    } else if (i + 1 === length) {\n      triplet = array[i] << 16;\n      result += at(3) + at(2) + (omitPadding ? '' : '==');\n    }\n\n    return result;\n  }\n});\n\n\n/***/ }),\n\n/***/ 9504:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar NATIVE_BIND = __webpack_require__(616);\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\n// eslint-disable-next-line es/no-function-prototype-bind -- safe\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n\n\n/***/ }),\n\n/***/ 9519:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar globalThis = __webpack_require__(4576);\nvar userAgent = __webpack_require__(2839);\n\nvar process = globalThis.process;\nvar Deno = globalThis.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n\n\n/***/ }),\n\n/***/ 9539:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar call = __webpack_require__(9565);\nvar anObject = __webpack_require__(8551);\nvar getMethod = __webpack_require__(5966);\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = getMethod(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n\n\n/***/ }),\n\n/***/ 9565:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar NATIVE_BIND = __webpack_require__(616);\n\nvar call = Function.prototype.call;\n// eslint-disable-next-line es/no-function-prototype-bind -- safe\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n\n\n/***/ }),\n\n/***/ 9577:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar arrayWith = __webpack_require__(9928);\nvar ArrayBufferViewCore = __webpack_require__(4644);\nvar isBigIntArray = __webpack_require__(1108);\nvar toIntegerOrInfinity = __webpack_require__(1291);\nvar toBigInt = __webpack_require__(5854);\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar PROPER_ORDER = function () {\n  try {\n    // eslint-disable-next-line no-throw-literal, es/no-typed-arrays, es/no-array-prototype-with -- required for testing\n    new Int8Array(1)['with'](2, { valueOf: function () { throw 8; } });\n  } catch (error) {\n    // some early implementations, like WebKit, does not follow the final semantic\n    // https://github.com/tc39/proposal-change-array-by-copy/pull/86\n    return error === 8;\n  }\n}();\n\n// Bug in WebKit. It should truncate a negative fractional index to zero, but instead throws an error\nvar THROW_ON_NEGATIVE_FRACTIONAL_INDEX = PROPER_ORDER && function () {\n  try {\n    // eslint-disable-next-line es/no-typed-arrays, es/no-array-prototype-with -- required for testing\n    new Int8Array(1)['with'](-0.5, 1);\n  } catch (error) {\n    return true;\n  }\n}();\n\n// `%TypedArray%.prototype.with` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.with\nexportTypedArrayMethod('with', { 'with': function (index, value) {\n  var O = aTypedArray(this);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualValue = isBigIntArray(O) ? toBigInt(value) : +value;\n  return arrayWith(O, getTypedArrayConstructor(O), relativeIndex, actualValue);\n} }['with'], !PROPER_ORDER || THROW_ON_NEGATIVE_FRACTIONAL_INDEX);\n\n\n/***/ }),\n\n/***/ 9590:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar toIntegerOrInfinity = __webpack_require__(1291);\n\nvar $RangeError = RangeError;\n\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw new $RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n\n\n/***/ }),\n\n/***/ 9617:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar toIndexedObject = __webpack_require__(5397);\nvar toAbsoluteIndex = __webpack_require__(5610);\nvar lengthOfArrayLike = __webpack_require__(6198);\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    if (length === 0) return !IS_INCLUDES && -1;\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el !== el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value !== value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n\n\n/***/ }),\n\n/***/ 9631:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\n// TODO: Remove from `core-js@4`\n__webpack_require__(9486);\n\n\n/***/ }),\n\n/***/ 9797:\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {\n\n\n// TODO: Remove from `core-js@4`\n__webpack_require__(4226);\n\n\n/***/ }),\n\n/***/ 9835:\n/***/ ((module) => {\n\n\n// Should get iterator record of a set-like object before cloning this\n// https://bugs.webkit.org/show_bug.cgi?id=289430\nmodule.exports = function (METHOD_NAME) {\n  try {\n    // eslint-disable-next-line es/no-set -- needed for test\n    var baseSet = new Set();\n    var setLike = {\n      size: 0,\n      has: function () { return true; },\n      keys: function () {\n        // eslint-disable-next-line es/no-object-defineproperty -- needed for test\n        return Object.defineProperty({}, 'next', {\n          get: function () {\n            baseSet.clear();\n            baseSet.add(4);\n            return function () {\n              return { done: true };\n            };\n          }\n        });\n      }\n    };\n    var result = baseSet[METHOD_NAME](setLike);\n\n    return result.size === 1 && result.values().next().value === 4;\n  } catch (error) {\n    return false;\n  }\n};\n\n\n/***/ }),\n\n/***/ 9928:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\nvar lengthOfArrayLike = __webpack_require__(6198);\nvar toIntegerOrInfinity = __webpack_require__(1291);\n\nvar $RangeError = RangeError;\n\n// https://tc39.es/ecma262/#sec-array.prototype.with\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.with\nmodule.exports = function (O, C, index, value) {\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualIndex = relativeIndex < 0 ? len + relativeIndex : relativeIndex;\n  if (actualIndex >= len || actualIndex < 0) throw new $RangeError('Incorrect index');\n  var A = new C(len);\n  var k = 0;\n  for (; k < len; k++) A[k] = k === actualIndex ? value : O[k];\n  return A;\n};\n\n\n/***/ })\n\n/******/ });\n/************************************************************************/\n/******/ // The module cache\n/******/ var __webpack_module_cache__ = {};\n/******/ \n/******/ // The require function\n/******/ function __webpack_require__(moduleId) {\n/******/ \t// Check if module is in cache\n/******/ \tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \tif (cachedModule !== undefined) {\n/******/ \t\treturn cachedModule.exports;\n/******/ \t}\n/******/ \t// Create a new module (and put it into the cache)\n/******/ \tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t// no module.id needed\n/******/ \t\t// no module.loaded needed\n/******/ \t\texports: {}\n/******/ \t};\n/******/ \n/******/ \t// Execute the module function\n/******/ \t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \n/******/ \t// Return the exports of the module\n/******/ \treturn module.exports;\n/******/ }\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ \t// define getter functions for harmony exports\n/******/ \t__webpack_require__.d = (exports, definition) => {\n/******/ \t\tfor(var key in definition) {\n/******/ \t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ \t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.push.js\nvar es_array_push = __webpack_require__(4114);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array-buffer.detached.js\nvar es_array_buffer_detached = __webpack_require__(6573);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array-buffer.transfer.js\nvar es_array_buffer_transfer = __webpack_require__(8100);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array-buffer.transfer-to-fixed-length.js\nvar es_array_buffer_transfer_to_fixed_length = __webpack_require__(7936);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.iterator.constructor.js\nvar es_iterator_constructor = __webpack_require__(8111);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.iterator.reduce.js\nvar es_iterator_reduce = __webpack_require__(8237);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.promise.try.js\nvar es_promise_try = __webpack_require__(1689);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.with.js\nvar es_typed_array_with = __webpack_require__(9577);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.math.sum-precise.js\nvar esnext_math_sum_precise = __webpack_require__(4235);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.uint8-array.from-base64.js\nvar esnext_uint8_array_from_base64 = __webpack_require__(9432);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.uint8-array.set-from-base64.js\nvar esnext_uint8_array_set_from_base64 = __webpack_require__(1549);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.uint8-array.set-from-hex.js\nvar esnext_uint8_array_set_from_hex = __webpack_require__(9797);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.uint8-array.to-base64.js\nvar esnext_uint8_array_to_base64 = __webpack_require__(9631);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.uint8-array.to-hex.js\nvar esnext_uint8_array_to_hex = __webpack_require__(5623);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-exception.stack.js\nvar web_dom_exception_stack = __webpack_require__(4979);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url.parse.js\nvar web_url_parse = __webpack_require__(5781);\n;// ./src/shared/util.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nconst LINE_FACTOR = 1.35;\nconst LINE_DESCENT_FACTOR = 0.35;\nconst BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  SAVE: 0x08,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  IS_EDITING: 0x80,\n  OPLIST: 0x100\n};\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3\n};\nconst AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\nconst AnnotationEditorType = {\n  DISABLE: -1,\n  NONE: 0,\n  FREETEXT: 3,\n  HIGHLIGHT: 9,\n  STAMP: 13,\n  INK: 15,\n  POPUP: 16,\n  SIGNATURE: 101,\n  COMMENT: 102\n};\nconst AnnotationEditorParamsType = {\n  RESIZE: 1,\n  CREATE: 2,\n  FREETEXT_SIZE: 11,\n  FREETEXT_COLOR: 12,\n  FREETEXT_OPACITY: 13,\n  INK_COLOR: 21,\n  INK_THICKNESS: 22,\n  INK_OPACITY: 23,\n  HIGHLIGHT_COLOR: 31,\n  HIGHLIGHT_THICKNESS: 32,\n  HIGHLIGHT_FREE: 33,\n  HIGHLIGHT_SHOW_ALL: 34,\n  DRAW_STEP: 41\n};\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800\n};\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nconst util_ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\"\n};\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\"\n};\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\"\n};\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\"\n};\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nconst OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n  setStrokeTransparent: 92,\n  setFillTransparent: 93,\n  rawFillPath: 94\n};\nconst DrawOPS = {\n  moveTo: 0,\n  lineTo: 1,\n  curveTo: 2,\n  closePath: 3\n};\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nlet verbosity = VerbosityLevel.WARNINGS;\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.info(`Info: ${msg}`);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.warn(`Warning: ${msg}`);\n  }\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nfunction _isValidProtocol(url) {\n  switch (url?.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  if (options && typeof url === \"string\") {\n    if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n      const dots = url.match(/\\./g);\n      if (dots?.length >= 2) {\n        url = `http://${url}`;\n      }\n    }\n    if (options.tryConvertEncoding) {\n      try {\n        url = stringToUTF8String(url);\n      } catch {}\n    }\n  }\n  const absoluteUrl = baseUrl ? URL.parse(url, baseUrl) : URL.parse(url);\n  return _isValidProtocol(absoluteUrl) ? absoluteUrl : null;\n}\nfunction updateUrlHash(url, hash, allowRel = false) {\n  const res = URL.parse(url);\n  if (res) {\n    res.hash = hash;\n    return res.href;\n  }\n  if (allowRel && createValidAbsoluteUrl(url, \"http://example.com\")) {\n    return url.split(\"#\", 1)[0] + `${hash ? `#${hash}` : \"\"}`;\n  }\n  return \"\";\n}\nfunction shadow(obj, prop, value, nonSerializable = false) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: !nonSerializable,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nconst BaseException = function BaseExceptionClosure() {\n  function BaseException(message, name) {\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n  return BaseException;\n}();\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\nclass ResponseException extends BaseException {\n  constructor(msg, status, missing) {\n    super(msg, \"ResponseException\");\n    this.status = status;\n    this.missing = missing;\n  }\n}\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\nfunction bytesToString(bytes) {\n  if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function(\"\");\n    return true;\n  } catch {\n    return false;\n  }\n}\nclass util_FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n  static get isOffscreenCanvasSupported() {\n    return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\");\n  }\n  static get isImageDecoderSupported() {\n    return shadow(this, \"isImageDecoderSupported\", typeof ImageDecoder !== \"undefined\");\n  }\n  static get platform() {\n    const {\n      platform,\n      userAgent\n    } = navigator;\n    return shadow(this, \"platform\", {\n      isAndroid: userAgent.includes(\"Android\"),\n      isLinux: platform.includes(\"Linux\"),\n      isMac: platform.includes(\"Mac\"),\n      isWindows: platform.includes(\"Win\"),\n      isFirefox: userAgent.includes(\"Firefox\")\n    });\n  }\n  static get isCSSRoundSupported() {\n    return shadow(this, \"isCSSRoundSupported\", globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\"));\n  }\n}\nconst hexNumbers = Array.from(Array(256).keys(), n => n.toString(16).padStart(2, \"0\"));\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n  static domMatrixToTransform(dm) {\n    return [dm.a, dm.b, dm.c, dm.d, dm.e, dm.f];\n  }\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[2];\n        minMax[2] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[2] *= transform[0];\n      if (transform[3] < 0) {\n        temp = minMax[1];\n        minMax[1] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[1] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[1];\n      minMax[1] = temp;\n      temp = minMax[2];\n      minMax[2] = minMax[3];\n      minMax[3] = temp;\n      if (transform[1] < 0) {\n        temp = minMax[1];\n        minMax[1] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[1] *= transform[1];\n      minMax[3] *= transform[1];\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[2];\n        minMax[2] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[2] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[5];\n    minMax[2] += transform[4];\n    minMax[3] += transform[5];\n  }\n  static transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  }\n  static multiplyByDOMMatrix(m, md) {\n    return [m[0] * md.a + m[2] * md.b, m[1] * md.a + m[3] * md.b, m[0] * md.c + m[2] * md.d, m[1] * md.c + m[3] * md.d, m[0] * md.e + m[2] * md.f + m[4], m[1] * md.e + m[3] * md.f + m[5]];\n  }\n  static applyTransform(p, m, pos = 0) {\n    const p0 = p[pos];\n    const p1 = p[pos + 1];\n    p[pos] = p0 * m[0] + p1 * m[2] + m[4];\n    p[pos + 1] = p0 * m[1] + p1 * m[3] + m[5];\n  }\n  static applyTransformToBezier(p, transform, pos = 0) {\n    const m0 = transform[0];\n    const m1 = transform[1];\n    const m2 = transform[2];\n    const m3 = transform[3];\n    const m4 = transform[4];\n    const m5 = transform[5];\n    for (let i = 0; i < 6; i += 2) {\n      const pI = p[pos + i];\n      const pI1 = p[pos + i + 1];\n      p[pos + i] = pI * m0 + pI1 * m2 + m4;\n      p[pos + i + 1] = pI * m1 + pI1 * m3 + m5;\n    }\n  }\n  static applyInverseTransform(p, m) {\n    const p0 = p[0];\n    const p1 = p[1];\n    const d = m[0] * m[3] - m[1] * m[2];\n    p[0] = (p0 * m[3] - p1 * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    p[1] = (-p0 * m[1] + p1 * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n  }\n  static axialAlignedBoundingBox(rect, transform, output) {\n    const m0 = transform[0];\n    const m1 = transform[1];\n    const m2 = transform[2];\n    const m3 = transform[3];\n    const m4 = transform[4];\n    const m5 = transform[5];\n    const r0 = rect[0];\n    const r1 = rect[1];\n    const r2 = rect[2];\n    const r3 = rect[3];\n    let a0 = m0 * r0 + m4;\n    let a2 = a0;\n    let a1 = m0 * r2 + m4;\n    let a3 = a1;\n    let b0 = m3 * r1 + m5;\n    let b2 = b0;\n    let b1 = m3 * r3 + m5;\n    let b3 = b1;\n    if (m1 !== 0 || m2 !== 0) {\n      const m1r0 = m1 * r0;\n      const m1r2 = m1 * r2;\n      const m2r1 = m2 * r1;\n      const m2r3 = m2 * r3;\n      a0 += m2r1;\n      a3 += m2r1;\n      a1 += m2r3;\n      a2 += m2r3;\n      b0 += m1r0;\n      b3 += m1r0;\n      b1 += m1r2;\n      b2 += m1r2;\n    }\n    output[0] = Math.min(output[0], a0, a1, a2, a3);\n    output[1] = Math.min(output[1], b0, b1, b2, b3);\n    output[2] = Math.max(output[2], a0, a1, a2, a3);\n    output[3] = Math.max(output[3], b0, b1, b2, b3);\n  }\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  }\n  static singularValueDecompose2dScale(matrix, output) {\n    const m0 = matrix[0];\n    const m1 = matrix[1];\n    const m2 = matrix[2];\n    const m3 = matrix[3];\n    const a = m0 ** 2 + m1 ** 2;\n    const b = m0 * m2 + m1 * m3;\n    const c = m2 ** 2 + m3 ** 2;\n    const first = (a + c) / 2;\n    const second = Math.sqrt(first ** 2 - (a * c - b ** 2));\n    output[0] = Math.sqrt(first + second || 1);\n    output[1] = Math.sqrt(first - second || 1);\n  }\n  static normalizeRect(rect) {\n    const r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2]));\n    const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2]));\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3]));\n    const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3]));\n    if (yLow > yHigh) {\n      return null;\n    }\n    return [xLow, yLow, xHigh, yHigh];\n  }\n  static pointBoundingBox(x, y, minMax) {\n    minMax[0] = Math.min(minMax[0], x);\n    minMax[1] = Math.min(minMax[1], y);\n    minMax[2] = Math.max(minMax[2], x);\n    minMax[3] = Math.max(minMax[3], y);\n  }\n  static rectBoundingBox(x0, y0, x1, y1, minMax) {\n    minMax[0] = Math.min(minMax[0], x0, x1);\n    minMax[1] = Math.min(minMax[1], y0, y1);\n    minMax[2] = Math.max(minMax[2], x0, x1);\n    minMax[3] = Math.max(minMax[3], y0, y1);\n  }\n  static #getExtremumOnCurve(x0, x1, x2, x3, y0, y1, y2, y3, t, minMax) {\n    if (t <= 0 || t >= 1) {\n      return;\n    }\n    const mt = 1 - t;\n    const tt = t * t;\n    const ttt = tt * t;\n    const x = mt * (mt * (mt * x0 + 3 * t * x1) + 3 * tt * x2) + ttt * x3;\n    const y = mt * (mt * (mt * y0 + 3 * t * y1) + 3 * tt * y2) + ttt * y3;\n    minMax[0] = Math.min(minMax[0], x);\n    minMax[1] = Math.min(minMax[1], y);\n    minMax[2] = Math.max(minMax[2], x);\n    minMax[3] = Math.max(minMax[3], y);\n  }\n  static #getExtremum(x0, x1, x2, x3, y0, y1, y2, y3, a, b, c, minMax) {\n    if (Math.abs(a) < 1e-12) {\n      if (Math.abs(b) >= 1e-12) {\n        this.#getExtremumOnCurve(x0, x1, x2, x3, y0, y1, y2, y3, -c / b, minMax);\n      }\n      return;\n    }\n    const delta = b ** 2 - 4 * c * a;\n    if (delta < 0) {\n      return;\n    }\n    const sqrtDelta = Math.sqrt(delta);\n    const a2 = 2 * a;\n    this.#getExtremumOnCurve(x0, x1, x2, x3, y0, y1, y2, y3, (-b + sqrtDelta) / a2, minMax);\n    this.#getExtremumOnCurve(x0, x1, x2, x3, y0, y1, y2, y3, (-b - sqrtDelta) / a2, minMax);\n  }\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    minMax[0] = Math.min(minMax[0], x0, x3);\n    minMax[1] = Math.min(minMax[1], y0, y3);\n    minMax[2] = Math.max(minMax[2], x0, x3);\n    minMax[3] = Math.max(minMax[3], y0, y3);\n    this.#getExtremum(x0, x1, x2, x3, y0, y1, y2, y3, 3 * (-x0 + 3 * (x1 - x2) + x3), 6 * (x0 - 2 * x1 + x2), 3 * (x1 - x0), minMax);\n    this.#getExtremum(x0, x1, x2, x3, y0, y1, y2, y3, 3 * (-y0 + 3 * (y1 - y2) + y3), 6 * (y0 - 2 * y1 + y2), 3 * (y1 - y0), minMax);\n  }\n}\nconst PDFStringTranslateTable = (/* unused pure expression or super */ null && ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac]));\nfunction stringToPDFString(str, keepEscapeSequence = false) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n      if (str.length % 2 === 1) {\n        str = str.slice(0, -1);\n      }\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n      if (str.length % 2 === 1) {\n        str = str.slice(0, -1);\n      }\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, {\n          fatal: true\n        });\n        const buffer = stringToBytes(str);\n        const decoded = decoder.decode(buffer);\n        if (keepEscapeSequence || !decoded.includes(\"\\x1b\")) {\n          return decoded;\n        }\n        return decoded.replaceAll(/\\x1b[^\\x1b]*(?:\\x1b|$)/g, \"\");\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const charCode = str.charCodeAt(i);\n    if (!keepEscapeSequence && charCode === 0x1b) {\n      while (++i < ii && str.charCodeAt(i) !== 0x1b) {}\n      continue;\n    }\n    const code = PDFStringTranslateTable[charCode];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getModificationDate(date = new Date()) {\n  if (!(date instanceof Date)) {\n    date = new Date(date);\n  }\n  const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n  return buffer.join(\"\");\n}\nlet NormalizeRegex = null;\nlet NormalizationMap = null;\nfunction normalizeUnicode(str) {\n  if (!NormalizeRegex) {\n    NormalizeRegex = /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n    NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n  }\n  return str.replaceAll(NormalizeRegex, (_, p1, p2) => p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2));\n}\nfunction getUuid() {\n  if (typeof crypto.randomUUID === \"function\") {\n    return crypto.randomUUID();\n  }\n  const buf = new Uint8Array(32);\n  crypto.getRandomValues(buf);\n  return bytesToString(buf);\n}\nconst AnnotationPrefix = \"pdfjs_internal_id_\";\nfunction _isValidExplicitDest(validRef, validName, dest) {\n  if (!Array.isArray(dest) || dest.length < 2) {\n    return false;\n  }\n  const [page, zoom, ...args] = dest;\n  if (!validRef(page) && !Number.isInteger(page)) {\n    return false;\n  }\n  if (!validName(zoom)) {\n    return false;\n  }\n  const argsLen = args.length;\n  let allowNull = true;\n  switch (zoom.name) {\n    case \"XYZ\":\n      if (argsLen < 2 || argsLen > 3) {\n        return false;\n      }\n      break;\n    case \"Fit\":\n    case \"FitB\":\n      return argsLen === 0;\n    case \"FitH\":\n    case \"FitBH\":\n    case \"FitV\":\n    case \"FitBV\":\n      if (argsLen > 1) {\n        return false;\n      }\n      break;\n    case \"FitR\":\n      if (argsLen !== 4) {\n        return false;\n      }\n      allowNull = false;\n      break;\n    default:\n      return false;\n  }\n  for (const arg of args) {\n    if (typeof arg === \"number\" || allowNull && arg === null) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\nfunction MathClamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\nfunction toHexUtil(arr) {\n  if (Uint8Array.prototype.toHex) {\n    return arr.toHex();\n  }\n  return Array.from(arr, num => hexNumbers[num]).join(\"\");\n}\nfunction toBase64Util(arr) {\n  if (Uint8Array.prototype.toBase64) {\n    return arr.toBase64();\n  }\n  return btoa(bytesToString(arr));\n}\nfunction fromBase64Util(str) {\n  if (Uint8Array.fromBase64) {\n    return Uint8Array.fromBase64(str);\n  }\n  return stringToBytes(atob(str));\n}\nif (typeof Math.sumPrecise !== \"function\") {\n  Math.sumPrecise = function (numbers) {\n    return numbers.reduce((a, b) => a + b, 0);\n  };\n}\nif (typeof AbortSignal.any !== \"function\") {\n  AbortSignal.any = function (iterable) {\n    const ac = new AbortController();\n    const {\n      signal\n    } = ac;\n    for (const s of iterable) {\n      if (s.aborted) {\n        ac.abort(s.reason);\n        return signal;\n      }\n    }\n    for (const s of iterable) {\n      s.addEventListener(\"abort\", () => {\n        ac.abort(s.reason);\n      }, {\n        signal\n      });\n    }\n    return signal;\n  };\n}\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.iterator.map.js\nvar es_iterator_map = __webpack_require__(1701);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url-search-params.delete.js\nvar web_url_search_params_delete = __webpack_require__(4603);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url-search-params.has.js\nvar web_url_search_params_has = __webpack_require__(7566);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url-search-params.size.js\nvar web_url_search_params_size = __webpack_require__(8721);\n;// ./src/display/xfa_text.js\n\nclass XfaText {\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null)\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n  static shouldBuildText(name) {\n    return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n  }\n}\n\n;// ./src/display/xfa_layer.js\n\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, {\n      value: null\n    });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, {\n            value: event.target.value\n          });\n        });\n        break;\n      case \"input\":\n        if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, {\n              value: event.target.value\n            });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          html.setAttribute(\"value\", storedData.value);\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            } else if (option.attributes.hasOwnProperty(\"selected\")) {\n              delete option.attributes.selected;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n          storage.setValue(id, {\n            value\n          });\n        });\n        break;\n    }\n  }\n  static setAttributes({\n    html,\n    element,\n    storage = null,\n    intent,\n    linkService\n  }) {\n    const {\n      attributes\n    } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n    if (attributes.type === \"radio\") {\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n      switch (key) {\n        case \"class\":\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n          break;\n        case \"dataId\":\n          break;\n        case \"id\":\n          html.setAttribute(\"data-element-id\", value);\n          break;\n        case \"style\":\n          Object.assign(html.style, value);\n          break;\n        case \"textContent\":\n          html.textContent = value;\n          break;\n        default:\n          if (!isHTMLAnchorElement || key !== \"href\" && key !== \"newWindow\") {\n            html.setAttribute(key, value);\n          }\n      }\n    }\n    if (isHTMLAnchorElement) {\n      linkService.addLinkAttributes(html, attributes.href, attributes.newWindow);\n    }\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService\n      });\n    }\n    const isNotForRichText = intent !== \"richText\";\n    const rootDiv = parameters.div;\n    rootDiv.append(rootHtml);\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n    if (isNotForRichText) {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n    const textDivs = [];\n    if (root.children.length === 0) {\n      if (root.value) {\n        const node = document.createTextNode(root.value);\n        rootHtml.append(node);\n        if (isNotForRichText && XfaText.shouldBuildText(root.name)) {\n          textDivs.push(node);\n        }\n      }\n      return {\n        textDivs\n      };\n    }\n    const stack = [[root, -1, rootHtml]];\n    while (stack.length > 0) {\n      const [parent, i, html] = stack.at(-1);\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n      const child = parent.children[++stack.at(-1)[1]];\n      if (child === null) {\n        continue;\n      }\n      const {\n        name\n      } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.append(node);\n        continue;\n      }\n      const childHtml = child?.attributes?.xmlns ? document.createElementNS(child.attributes.xmlns, name) : document.createElement(name);\n      html.append(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService\n        });\n      }\n      if (child.children?.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (isNotForRichText && XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.append(node);\n      }\n    }\n    for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) {\n      el.setAttribute(\"readOnly\", true);\n    }\n    return {\n      textDivs\n    };\n  }\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\n;// ./src/display/display_utils.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\nclass PixelsPerInch {\n  static CSS = 96.0;\n  static PDF = 72.0;\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\nasync function fetchData(url, type = \"text\") {\n  if (isValidFetchUrl(url, document.baseURI)) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    switch (type) {\n      case \"arraybuffer\":\n        return response.arrayBuffer();\n      case \"blob\":\n        return response.blob();\n      case \"json\":\n        return response.json();\n    }\n    return response.text();\n  }\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.responseType = type;\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        switch (type) {\n          case \"arraybuffer\":\n          case \"blob\":\n          case \"json\":\n            resolve(request.response);\n            return;\n        }\n        resolve(request.responseText);\n        return;\n      }\n      reject(new Error(request.statusText));\n    };\n    request.send(null);\n  });\n}\nclass PageViewport {\n  constructor({\n    viewBox,\n    userUnit,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  }) {\n    this.viewBox = viewBox;\n    this.userUnit = userUnit;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    scale *= userUnit;\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = (viewBox[3] - viewBox[1]) * scale;\n      height = (viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = (viewBox[2] - viewBox[0]) * scale;\n      height = (viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n  }\n  get rawDims() {\n    const dims = this.viewBox;\n    return shadow(this, \"rawDims\", {\n      pageWidth: dims[2] - dims[0],\n      pageHeight: dims[3] - dims[1],\n      pageX: dims[0],\n      pageY: dims[1]\n    });\n  }\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      userUnit: this.userUnit,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n  convertToViewportPoint(x, y) {\n    const p = [x, y];\n    Util.applyTransform(p, this.transform);\n    return p;\n  }\n  convertToViewportRectangle(rect) {\n    const topLeft = [rect[0], rect[1]];\n    Util.applyTransform(topLeft, this.transform);\n    const bottomRight = [rect[2], rect[3]];\n    Util.applyTransform(bottomRight, this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n  convertToPdfPoint(x, y) {\n    const p = [x, y];\n    Util.applyInverseTransform(p, this.transform);\n    return p;\n  }\n}\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, extraDelay = 0) {\n    super(msg, \"RenderingCancelledException\");\n    this.extraDelay = extraDelay;\n  }\n}\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\nfunction getFilenameFromUrl(url) {\n  [url] = url.split(/[#?]/, 1);\n  return url.substring(url.lastIndexOf(\"/\") + 1);\n}\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const getURL = urlString => {\n    try {\n      return new URL(urlString);\n    } catch {\n      try {\n        return new URL(decodeURIComponent(urlString));\n      } catch {\n        try {\n          return new URL(urlString, \"https://foo.bar\");\n        } catch {\n          try {\n            return new URL(decodeURIComponent(urlString), \"https://foo.bar\");\n          } catch {\n            return null;\n          }\n        }\n      }\n    }\n  };\n  const newURL = getURL(url);\n  if (!newURL) {\n    return defaultFilename;\n  }\n  const decode = name => {\n    try {\n      let decoded = decodeURIComponent(name);\n      if (decoded.includes(\"/\")) {\n        decoded = decoded.split(\"/\").at(-1);\n        if (decoded.test(/^\\.pdf$/i)) {\n          return decoded;\n        }\n        return name;\n      }\n      return decoded;\n    } catch {\n      return name;\n    }\n  };\n  const pdfRegex = /\\.pdf$/i;\n  const filename = newURL.pathname.split(\"/\").at(-1);\n  if (pdfRegex.test(filename)) {\n    return decode(filename);\n  }\n  if (newURL.searchParams.size > 0) {\n    const values = Array.from(newURL.searchParams.values()).reverse();\n    for (const value of values) {\n      if (pdfRegex.test(value)) {\n        return decode(value);\n      }\n    }\n    const keys = Array.from(newURL.searchParams.keys()).reverse();\n    for (const key of keys) {\n      if (pdfRegex.test(key)) {\n        return decode(key);\n      }\n    }\n  }\n  if (newURL.hash) {\n    const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n    const hashFilename = reFilename.exec(newURL.hash);\n    if (hashFilename) {\n      return decode(hashFilename[0]);\n    }\n  }\n  return defaultFilename;\n}\nclass StatTimer {\n  started = Object.create(null);\n  times = [];\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now()\n    });\n    delete this.started[name];\n  }\n  toString() {\n    const outBuf = [];\n    let longest = 0;\n    for (const {\n      name\n    } of this.times) {\n      longest = Math.max(name.length, longest);\n    }\n    for (const {\n      name,\n      start,\n      end\n    } of this.times) {\n      outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\nfunction isValidFetchUrl(url, baseUrl) {\n  const res = baseUrl ? URL.parse(url, baseUrl) : URL.parse(url);\n  return res?.protocol === \"http:\" || res?.protocol === \"https:\";\n}\nfunction noContextMenu(e) {\n  e.preventDefault();\n}\nfunction stopEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\nclass PDFDateString {\n  static #regex;\n  static toDateObject(input) {\n    if (input instanceof Date) {\n      return input;\n    }\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n    this.#regex ||= new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n    const matches = this.#regex.exec(input);\n    if (!matches) {\n      return null;\n    }\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\nfunction getXfaPageViewport(xfaPage, {\n  scale = 1,\n  rotation = 0\n}) {\n  const {\n    width,\n    height\n  } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n  return new PageViewport({\n    viewBox,\n    userUnit: 1,\n    scale,\n    rotation\n  });\n}\nfunction getRGB(color) {\n  if (color.startsWith(\"#\")) {\n    const colorRGB = parseInt(color.slice(1), 16);\n    return [(colorRGB & 0xff0000) >> 16, (colorRGB & 0x00ff00) >> 8, colorRGB & 0x0000ff];\n  }\n  if (color.startsWith(\"rgb(\")) {\n    return color.slice(4, -1).split(\",\").map(x => parseInt(x));\n  }\n  if (color.startsWith(\"rgba(\")) {\n    return color.slice(5, -1).split(\",\").map(x => parseInt(x)).slice(0, 3);\n  }\n  warn(`Not a valid color format: \"${color}\"`);\n  return [0, 0, 0];\n}\nfunction getColorValues(colors) {\n  const span = document.createElement(\"span\");\n  span.style.visibility = \"hidden\";\n  span.style.colorScheme = \"only light\";\n  document.body.append(span);\n  for (const name of colors.keys()) {\n    span.style.color = name;\n    const computedColor = window.getComputedStyle(span).color;\n    colors.set(name, getRGB(computedColor));\n  }\n  span.remove();\n}\nfunction getCurrentTransform(ctx) {\n  const {\n    a,\n    b,\n    c,\n    d,\n    e,\n    f\n  } = ctx.getTransform();\n  return [a, b, c, d, e, f];\n}\nfunction getCurrentTransformInverse(ctx) {\n  const {\n    a,\n    b,\n    c,\n    d,\n    e,\n    f\n  } = ctx.getTransform().invertSelf();\n  return [a, b, c, d, e, f];\n}\nfunction setLayerDimensions(div, viewport, mustFlip = false, mustRotate = true) {\n  if (viewport instanceof PageViewport) {\n    const {\n      pageWidth,\n      pageHeight\n    } = viewport.rawDims;\n    const {\n      style\n    } = div;\n    const useRound = util_FeatureTest.isCSSRoundSupported;\n    const w = `var(--total-scale-factor) * ${pageWidth}px`,\n      h = `var(--total-scale-factor) * ${pageHeight}px`;\n    const widthStr = useRound ? `round(down, ${w}, var(--scale-round-x))` : `calc(${w})`,\n      heightStr = useRound ? `round(down, ${h}, var(--scale-round-y))` : `calc(${h})`;\n    if (!mustFlip || viewport.rotation % 180 === 0) {\n      style.width = widthStr;\n      style.height = heightStr;\n    } else {\n      style.width = heightStr;\n      style.height = widthStr;\n    }\n  }\n  if (mustRotate) {\n    div.setAttribute(\"data-main-rotation\", viewport.rotation);\n  }\n}\nclass OutputScale {\n  constructor() {\n    const {\n      pixelRatio\n    } = OutputScale;\n    this.sx = pixelRatio;\n    this.sy = pixelRatio;\n  }\n  get scaled() {\n    return this.sx !== 1 || this.sy !== 1;\n  }\n  get symmetric() {\n    return this.sx === this.sy;\n  }\n  limitCanvas(width, height, maxPixels, maxDim, capAreaFactor = -1) {\n    let maxAreaScale = Infinity,\n      maxWidthScale = Infinity,\n      maxHeightScale = Infinity;\n    maxPixels = OutputScale.capPixels(maxPixels, capAreaFactor);\n    if (maxPixels > 0) {\n      maxAreaScale = Math.sqrt(maxPixels / (width * height));\n    }\n    if (maxDim !== -1) {\n      maxWidthScale = maxDim / width;\n      maxHeightScale = maxDim / height;\n    }\n    const maxScale = Math.min(maxAreaScale, maxWidthScale, maxHeightScale);\n    if (this.sx > maxScale || this.sy > maxScale) {\n      this.sx = maxScale;\n      this.sy = maxScale;\n      return true;\n    }\n    return false;\n  }\n  static get pixelRatio() {\n    return globalThis.devicePixelRatio || 1;\n  }\n  static capPixels(maxPixels, capAreaFactor) {\n    if (capAreaFactor >= 0) {\n      const winPixels = Math.ceil(window.screen.availWidth * window.screen.availHeight * this.pixelRatio ** 2 * (1 + capAreaFactor / 100));\n      return maxPixels > 0 ? Math.min(maxPixels, winPixels) : winPixels;\n    }\n    return maxPixels;\n  }\n}\nconst SupportedImageMimeTypes = [\"image/apng\", \"image/avif\", \"image/bmp\", \"image/gif\", \"image/jpeg\", \"image/png\", \"image/svg+xml\", \"image/webp\", \"image/x-icon\"];\nclass ColorScheme {\n  static get isDarkMode() {\n    return shadow(this, \"isDarkMode\", !!window?.matchMedia?.(\"(prefers-color-scheme: dark)\").matches);\n  }\n}\nclass CSSConstants {\n  static get commentForegroundColor() {\n    const element = document.createElement(\"span\");\n    element.classList.add(\"comment\", \"sidebar\");\n    const {\n      style\n    } = element;\n    style.width = style.height = \"0\";\n    style.display = \"none\";\n    style.color = \"var(--comment-fg-color)\";\n    document.body.append(element);\n    const {\n      color\n    } = window.getComputedStyle(element);\n    element.remove();\n    return shadow(this, \"commentForegroundColor\", getRGB(color));\n  }\n}\nfunction applyOpacity(r, g, b, opacity) {\n  opacity = Math.min(Math.max(opacity ?? 1, 0), 1);\n  const white = 255 * (1 - opacity);\n  r = Math.round(r * opacity + white);\n  g = Math.round(g * opacity + white);\n  b = Math.round(b * opacity + white);\n  return [r, g, b];\n}\nfunction RGBToHSL(rgb, output) {\n  const r = rgb[0] / 255;\n  const g = rgb[1] / 255;\n  const b = rgb[2] / 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  if (max === min) {\n    output[0] = output[1] = 0;\n  } else {\n    const d = max - min;\n    output[1] = l < 0.5 ? d / (max + min) : d / (2 - max - min);\n    switch (max) {\n      case r:\n        output[0] = ((g - b) / d + (g < b ? 6 : 0)) * 60;\n        break;\n      case g:\n        output[0] = ((b - r) / d + 2) * 60;\n        break;\n      case b:\n        output[0] = ((r - g) / d + 4) * 60;\n        break;\n    }\n  }\n  output[2] = l;\n}\nfunction HSLToRGB(hsl, output) {\n  const h = hsl[0];\n  const s = hsl[1];\n  const l = hsl[2];\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  const m = l - c / 2;\n  switch (Math.floor(h / 60)) {\n    case 0:\n      output[0] = c + m;\n      output[1] = x + m;\n      output[2] = m;\n      break;\n    case 1:\n      output[0] = x + m;\n      output[1] = c + m;\n      output[2] = m;\n      break;\n    case 2:\n      output[0] = m;\n      output[1] = c + m;\n      output[2] = x + m;\n      break;\n    case 3:\n      output[0] = m;\n      output[1] = x + m;\n      output[2] = c + m;\n      break;\n    case 4:\n      output[0] = x + m;\n      output[1] = m;\n      output[2] = c + m;\n      break;\n    case 5:\n    case 6:\n      output[0] = c + m;\n      output[1] = m;\n      output[2] = x + m;\n      break;\n  }\n}\nfunction computeLuminance(x) {\n  return x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n}\nfunction contrastRatio(hsl1, hsl2, output) {\n  HSLToRGB(hsl1, output);\n  output.map(computeLuminance);\n  const lum1 = 0.2126 * output[0] + 0.7152 * output[1] + 0.0722 * output[2];\n  HSLToRGB(hsl2, output);\n  output.map(computeLuminance);\n  const lum2 = 0.2126 * output[0] + 0.7152 * output[1] + 0.0722 * output[2];\n  return lum1 > lum2 ? (lum1 + 0.05) / (lum2 + 0.05) : (lum2 + 0.05) / (lum1 + 0.05);\n}\nconst contrastCache = new Map();\nfunction findContrastColor(baseColor, fixedColor) {\n  const key = baseColor[0] + baseColor[1] * 0x100 + baseColor[2] * 0x10000 + fixedColor[0] * 0x1000000 + fixedColor[1] * 0x100000000 + fixedColor[2] * 0x10000000000;\n  let cachedValue = contrastCache.get(key);\n  if (cachedValue) {\n    return cachedValue;\n  }\n  const array = new Float32Array(9);\n  const output = array.subarray(0, 3);\n  const baseHSL = array.subarray(3, 6);\n  RGBToHSL(baseColor, baseHSL);\n  const fixedHSL = array.subarray(6, 9);\n  RGBToHSL(fixedColor, fixedHSL);\n  const isFixedColorDark = fixedHSL[2] < 0.5;\n  const minContrast = isFixedColorDark ? 12 : 4.5;\n  baseHSL[2] = isFixedColorDark ? Math.sqrt(baseHSL[2]) : 1 - Math.sqrt(1 - baseHSL[2]);\n  if (contrastRatio(baseHSL, fixedHSL, output) < minContrast) {\n    let start, end;\n    if (isFixedColorDark) {\n      start = baseHSL[2];\n      end = 1;\n    } else {\n      start = 0;\n      end = baseHSL[2];\n    }\n    const PRECISION = 0.005;\n    while (end - start > PRECISION) {\n      const mid = baseHSL[2] = (start + end) / 2;\n      if (isFixedColorDark === contrastRatio(baseHSL, fixedHSL, output) < minContrast) {\n        start = mid;\n      } else {\n        end = mid;\n      }\n    }\n    baseHSL[2] = isFixedColorDark ? end : start;\n  }\n  HSLToRGB(baseHSL, output);\n  cachedValue = Util.makeHexColor(Math.round(output[0] * 255), Math.round(output[1] * 255), Math.round(output[2] * 255));\n  contrastCache.set(key, cachedValue);\n  return cachedValue;\n}\nfunction renderRichText({\n  html,\n  dir,\n  className\n}, container) {\n  const fragment = document.createDocumentFragment();\n  if (typeof html === \"string\") {\n    const p = document.createElement(\"p\");\n    p.dir = dir || \"auto\";\n    const lines = html.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.append(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.append(document.createElement(\"br\"));\n      }\n    }\n    fragment.append(p);\n  } else {\n    XfaLayer.render({\n      xfaHtml: html,\n      div: fragment,\n      intent: \"richText\"\n    });\n  }\n  fragment.firstChild.classList.add(\"richText\", className);\n  container.append(fragment);\n}\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.iterator.take.js\nvar es_iterator_take = __webpack_require__(4972);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.promise.with-resolvers.js\nvar es_promise_with_resolvers = __webpack_require__(4628);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.set.difference.v2.js\nvar es_set_difference_v2 = __webpack_require__(7642);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.set.intersection.v2.js\nvar es_set_intersection_v2 = __webpack_require__(8004);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.set.is-disjoint-from.v2.js\nvar es_set_is_disjoint_from_v2 = __webpack_require__(3853);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.set.is-subset-of.v2.js\nvar es_set_is_subset_of_v2 = __webpack_require__(5876);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.set.is-superset-of.v2.js\nvar es_set_is_superset_of_v2 = __webpack_require__(2475);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.set.symmetric-difference.v2.js\nvar es_set_symmetric_difference_v2 = __webpack_require__(5024);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.set.union.v2.js\nvar es_set_union_v2 = __webpack_require__(1698);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.iterator.drop.js\nvar es_iterator_drop = __webpack_require__(9314);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.iterator.every.js\nvar es_iterator_every = __webpack_require__(1148);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.iterator.some.js\nvar es_iterator_some = __webpack_require__(3579);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.json.parse.js\nvar esnext_json_parse = __webpack_require__(8335);\n;// ./src/display/editor/toolbar.js\n\nclass EditorToolbar {\n  #toolbar = null;\n  #colorPicker = null;\n  #editor;\n  #buttons = null;\n  #altText = null;\n  #comment = null;\n  #commentButtonDivider = null;\n  #signatureDescriptionButton = null;\n  static #l10nRemove = null;\n  constructor(editor) {\n    this.#editor = editor;\n    EditorToolbar.#l10nRemove ||= Object.freeze({\n      freetext: \"pdfjs-editor-remove-freetext-button\",\n      highlight: \"pdfjs-editor-remove-highlight-button\",\n      ink: \"pdfjs-editor-remove-ink-button\",\n      stamp: \"pdfjs-editor-remove-stamp-button\",\n      signature: \"pdfjs-editor-remove-signature-button\"\n    });\n  }\n  render() {\n    const editToolbar = this.#toolbar = document.createElement(\"div\");\n    editToolbar.classList.add(\"editToolbar\", \"hidden\");\n    editToolbar.setAttribute(\"role\", \"toolbar\");\n    const signal = this.#editor._uiManager._signal;\n    if (signal instanceof AbortSignal && !signal.aborted) {\n      editToolbar.addEventListener(\"contextmenu\", noContextMenu, {\n        signal\n      });\n      editToolbar.addEventListener(\"pointerdown\", EditorToolbar.#pointerDown, {\n        signal\n      });\n    }\n    const buttons = this.#buttons = document.createElement(\"div\");\n    buttons.className = \"buttons\";\n    editToolbar.append(buttons);\n    const position = this.#editor.toolbarPosition;\n    if (position) {\n      const {\n        style\n      } = editToolbar;\n      const x = this.#editor._uiManager.direction === \"ltr\" ? 1 - position[0] : position[0];\n      style.insetInlineEnd = `${100 * x}%`;\n      style.top = `calc(${100 * position[1]}% + var(--editor-toolbar-vert-offset))`;\n    }\n    return editToolbar;\n  }\n  get div() {\n    return this.#toolbar;\n  }\n  static #pointerDown(e) {\n    e.stopPropagation();\n  }\n  #focusIn(e) {\n    this.#editor._focusEventsAllowed = false;\n    stopEvent(e);\n  }\n  #focusOut(e) {\n    this.#editor._focusEventsAllowed = true;\n    stopEvent(e);\n  }\n  #addListenersToElement(element) {\n    const signal = this.#editor._uiManager._signal;\n    if (!(signal instanceof AbortSignal) || signal.aborted) {\n      return false;\n    }\n    element.addEventListener(\"focusin\", this.#focusIn.bind(this), {\n      capture: true,\n      signal\n    });\n    element.addEventListener(\"focusout\", this.#focusOut.bind(this), {\n      capture: true,\n      signal\n    });\n    element.addEventListener(\"contextmenu\", noContextMenu, {\n      signal\n    });\n    return true;\n  }\n  hide() {\n    this.#toolbar.classList.add(\"hidden\");\n    this.#colorPicker?.hideDropdown();\n  }\n  show() {\n    this.#toolbar.classList.remove(\"hidden\");\n    this.#altText?.shown();\n    this.#comment?.shown();\n  }\n  addDeleteButton() {\n    const {\n      editorType,\n      _uiManager\n    } = this.#editor;\n    const button = document.createElement(\"button\");\n    button.classList.add(\"basic\", \"deleteButton\");\n    button.tabIndex = 0;\n    button.setAttribute(\"data-l10n-id\", EditorToolbar.#l10nRemove[editorType]);\n    if (this.#addListenersToElement(button)) {\n      button.addEventListener(\"click\", e => {\n        _uiManager.delete();\n      }, {\n        signal: _uiManager._signal\n      });\n    }\n    this.#buttons.append(button);\n  }\n  get #divider() {\n    const divider = document.createElement(\"div\");\n    divider.className = \"divider\";\n    return divider;\n  }\n  async addAltText(altText) {\n    const button = await altText.render();\n    this.#addListenersToElement(button);\n    this.#buttons.append(button, this.#divider);\n    this.#altText = altText;\n  }\n  addComment(comment, beforeElement = null) {\n    if (this.#comment) {\n      return;\n    }\n    const button = comment.renderForToolbar();\n    if (!button) {\n      return;\n    }\n    this.#addListenersToElement(button);\n    const divider = this.#commentButtonDivider = this.#divider;\n    if (!beforeElement) {\n      this.#buttons.append(button, divider);\n    } else {\n      this.#buttons.insertBefore(button, beforeElement);\n      this.#buttons.insertBefore(divider, beforeElement);\n    }\n    this.#comment = comment;\n    comment.toolbar = this;\n  }\n  addColorPicker(colorPicker) {\n    if (this.#colorPicker) {\n      return;\n    }\n    this.#colorPicker = colorPicker;\n    const button = colorPicker.renderButton();\n    this.#addListenersToElement(button);\n    this.#buttons.append(button, this.#divider);\n  }\n  async addEditSignatureButton(signatureManager) {\n    const button = this.#signatureDescriptionButton = await signatureManager.renderEditButton(this.#editor);\n    this.#addListenersToElement(button);\n    this.#buttons.append(button, this.#divider);\n  }\n  removeButton(name) {\n    switch (name) {\n      case \"comment\":\n        this.#comment?.removeToolbarCommentButton();\n        this.#comment = null;\n        this.#commentButtonDivider?.remove();\n        this.#commentButtonDivider = null;\n        break;\n    }\n  }\n  async addButton(name, tool) {\n    switch (name) {\n      case \"colorPicker\":\n        this.addColorPicker(tool);\n        break;\n      case \"altText\":\n        await this.addAltText(tool);\n        break;\n      case \"editSignature\":\n        await this.addEditSignatureButton(tool);\n        break;\n      case \"delete\":\n        this.addDeleteButton();\n        break;\n      case \"comment\":\n        this.addComment(tool);\n        break;\n    }\n  }\n  async addButtonBefore(name, tool, beforeSelector) {\n    const beforeElement = this.#buttons.querySelector(beforeSelector);\n    if (!beforeElement) {\n      return;\n    }\n    if (name === \"comment\") {\n      this.addComment(tool, beforeElement);\n    }\n  }\n  updateEditSignatureButton(description) {\n    if (this.#signatureDescriptionButton) {\n      this.#signatureDescriptionButton.title = description;\n    }\n  }\n  remove() {\n    this.#toolbar.remove();\n    this.#colorPicker?.destroy();\n    this.#colorPicker = null;\n  }\n}\nclass FloatingToolbar {\n  #buttons = null;\n  #toolbar = null;\n  #uiManager;\n  constructor(uiManager) {\n    this.#uiManager = uiManager;\n  }\n  #render() {\n    const editToolbar = this.#toolbar = document.createElement(\"div\");\n    editToolbar.className = \"editToolbar\";\n    editToolbar.setAttribute(\"role\", \"toolbar\");\n    const signal = this.#uiManager._signal;\n    if (signal instanceof AbortSignal && !signal.aborted) {\n      editToolbar.addEventListener(\"contextmenu\", noContextMenu, {\n        signal\n      });\n    }\n    const buttons = this.#buttons = document.createElement(\"div\");\n    buttons.className = \"buttons\";\n    editToolbar.append(buttons);\n    if (this.#uiManager.hasCommentManager()) {\n      this.#makeButton(\"commentButton\", `pdfjs-comment-floating-button`, \"pdfjs-comment-floating-button-label\", () => {\n        this.#uiManager.commentSelection(\"floating_button\");\n      });\n    }\n    this.#makeButton(\"highlightButton\", `pdfjs-highlight-floating-button1`, \"pdfjs-highlight-floating-button-label\", () => {\n      this.#uiManager.highlightSelection(\"floating_button\");\n    });\n    return editToolbar;\n  }\n  #getLastPoint(boxes, isLTR) {\n    let lastY = 0;\n    let lastX = 0;\n    for (const box of boxes) {\n      const y = box.y + box.height;\n      if (y < lastY) {\n        continue;\n      }\n      const x = box.x + (isLTR ? box.width : 0);\n      if (y > lastY) {\n        lastX = x;\n        lastY = y;\n        continue;\n      }\n      if (isLTR) {\n        if (x > lastX) {\n          lastX = x;\n        }\n      } else if (x < lastX) {\n        lastX = x;\n      }\n    }\n    return [isLTR ? 1 - lastX : lastX, lastY];\n  }\n  show(parent, boxes, isLTR) {\n    const [x, y] = this.#getLastPoint(boxes, isLTR);\n    const {\n      style\n    } = this.#toolbar ||= this.#render();\n    parent.append(this.#toolbar);\n    style.insetInlineEnd = `${100 * x}%`;\n    style.top = `calc(${100 * y}% + var(--editor-toolbar-vert-offset))`;\n  }\n  hide() {\n    this.#toolbar.remove();\n  }\n  #makeButton(buttonClass, l10nId, labelL10nId, clickHandler) {\n    const button = document.createElement(\"button\");\n    button.classList.add(\"basic\", buttonClass);\n    button.tabIndex = 0;\n    button.setAttribute(\"data-l10n-id\", l10nId);\n    const span = document.createElement(\"span\");\n    button.append(span);\n    span.className = \"visuallyHidden\";\n    span.setAttribute(\"data-l10n-id\", labelL10nId);\n    const signal = this.#uiManager._signal;\n    if (signal instanceof AbortSignal && !signal.aborted) {\n      button.addEventListener(\"contextmenu\", noContextMenu, {\n        signal\n      });\n      button.addEventListener(\"click\", clickHandler, {\n        signal\n      });\n    }\n    this.#buttons.append(button);\n  }\n}\n\n;// ./src/display/editor/tools.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction bindEvents(obj, element, names) {\n  for (const name of names) {\n    element.addEventListener(name, obj[name].bind(obj));\n  }\n}\nclass IdManager {\n  #id = 0;\n  get id() {\n    return `${AnnotationEditorPrefix}${this.#id++}`;\n  }\n}\nclass ImageManager {\n  #baseId = getUuid();\n  #id = 0;\n  #cache = null;\n  static get _isSVGFittingCanvas() {\n    const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;\n    const canvas = new OffscreenCanvas(1, 3);\n    const ctx = canvas.getContext(\"2d\", {\n      willReadFrequently: true\n    });\n    const image = new Image();\n    image.src = svg;\n    const promise = image.decode().then(() => {\n      ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);\n      return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;\n    });\n    return shadow(this, \"_isSVGFittingCanvas\", promise);\n  }\n  async #get(key, rawData) {\n    this.#cache ||= new Map();\n    let data = this.#cache.get(key);\n    if (data === null) {\n      return null;\n    }\n    if (data?.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n    try {\n      data ||= {\n        bitmap: null,\n        id: `image_${this.#baseId}_${this.#id++}`,\n        refCounter: 0,\n        isSvg: false\n      };\n      let image;\n      if (typeof rawData === \"string\") {\n        data.url = rawData;\n        image = await fetchData(rawData, \"blob\");\n      } else if (rawData instanceof File) {\n        image = data.file = rawData;\n      } else if (rawData instanceof Blob) {\n        image = rawData;\n      }\n      if (image.type === \"image/svg+xml\") {\n        const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;\n        const fileReader = new FileReader();\n        const imageElement = new Image();\n        const imagePromise = new Promise((resolve, reject) => {\n          imageElement.onload = () => {\n            data.bitmap = imageElement;\n            data.isSvg = true;\n            resolve();\n          };\n          fileReader.onload = async () => {\n            const url = data.svgUrl = fileReader.result;\n            imageElement.src = (await mustRemoveAspectRatioPromise) ? `${url}#svgView(preserveAspectRatio(none))` : url;\n          };\n          imageElement.onerror = fileReader.onerror = reject;\n        });\n        fileReader.readAsDataURL(image);\n        await imagePromise;\n      } else {\n        data.bitmap = await createImageBitmap(image);\n      }\n      data.refCounter = 1;\n    } catch (e) {\n      warn(e);\n      data = null;\n    }\n    this.#cache.set(key, data);\n    if (data) {\n      this.#cache.set(data.id, data);\n    }\n    return data;\n  }\n  async getFromFile(file) {\n    const {\n      lastModified,\n      name,\n      size,\n      type\n    } = file;\n    return this.#get(`${lastModified}_${name}_${size}_${type}`, file);\n  }\n  async getFromUrl(url) {\n    return this.#get(url, url);\n  }\n  async getFromBlob(id, blobPromise) {\n    const blob = await blobPromise;\n    return this.#get(id, blob);\n  }\n  async getFromId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return null;\n    }\n    if (data.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n    if (data.file) {\n      return this.getFromFile(data.file);\n    }\n    if (data.blobPromise) {\n      const {\n        blobPromise\n      } = data;\n      delete data.blobPromise;\n      return this.getFromBlob(data.id, blobPromise);\n    }\n    return this.getFromUrl(data.url);\n  }\n  getFromCanvas(id, canvas) {\n    this.#cache ||= new Map();\n    let data = this.#cache.get(id);\n    if (data?.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n    const offscreen = new OffscreenCanvas(canvas.width, canvas.height);\n    const ctx = offscreen.getContext(\"2d\");\n    ctx.drawImage(canvas, 0, 0);\n    data = {\n      bitmap: offscreen.transferToImageBitmap(),\n      id: `image_${this.#baseId}_${this.#id++}`,\n      refCounter: 1,\n      isSvg: false\n    };\n    this.#cache.set(id, data);\n    this.#cache.set(data.id, data);\n    return data;\n  }\n  getSvgUrl(id) {\n    const data = this.#cache.get(id);\n    if (!data?.isSvg) {\n      return null;\n    }\n    return data.svgUrl;\n  }\n  deleteId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return;\n    }\n    data.refCounter -= 1;\n    if (data.refCounter !== 0) {\n      return;\n    }\n    const {\n      bitmap\n    } = data;\n    if (!data.url && !data.file) {\n      const canvas = new OffscreenCanvas(bitmap.width, bitmap.height);\n      const ctx = canvas.getContext(\"bitmaprenderer\");\n      ctx.transferFromImageBitmap(bitmap);\n      data.blobPromise = canvas.convertToBlob();\n    }\n    bitmap.close?.();\n    data.bitmap = null;\n  }\n  isValidId(id) {\n    return id.startsWith(`image_${this.#baseId}_`);\n  }\n}\nclass CommandManager {\n  #commands = [];\n  #locked = false;\n  #maxSize;\n  #position = -1;\n  constructor(maxSize = 128) {\n    this.#maxSize = maxSize;\n  }\n  add({\n    cmd,\n    undo,\n    post,\n    mustExec,\n    type = NaN,\n    overwriteIfSameType = false,\n    keepUndo = false\n  }) {\n    if (mustExec) {\n      cmd();\n    }\n    if (this.#locked) {\n      return;\n    }\n    const save = {\n      cmd,\n      undo,\n      post,\n      type\n    };\n    if (this.#position === -1) {\n      if (this.#commands.length > 0) {\n        this.#commands.length = 0;\n      }\n      this.#position = 0;\n      this.#commands.push(save);\n      return;\n    }\n    if (overwriteIfSameType && this.#commands[this.#position].type === type) {\n      if (keepUndo) {\n        save.undo = this.#commands[this.#position].undo;\n      }\n      this.#commands[this.#position] = save;\n      return;\n    }\n    const next = this.#position + 1;\n    if (next === this.#maxSize) {\n      this.#commands.splice(0, 1);\n    } else {\n      this.#position = next;\n      if (next < this.#commands.length) {\n        this.#commands.splice(next);\n      }\n    }\n    this.#commands.push(save);\n  }\n  undo() {\n    if (this.#position === -1) {\n      return;\n    }\n    this.#locked = true;\n    const {\n      undo,\n      post\n    } = this.#commands[this.#position];\n    undo();\n    post?.();\n    this.#locked = false;\n    this.#position -= 1;\n  }\n  redo() {\n    if (this.#position < this.#commands.length - 1) {\n      this.#position += 1;\n      this.#locked = true;\n      const {\n        cmd,\n        post\n      } = this.#commands[this.#position];\n      cmd();\n      post?.();\n      this.#locked = false;\n    }\n  }\n  hasSomethingToUndo() {\n    return this.#position !== -1;\n  }\n  hasSomethingToRedo() {\n    return this.#position < this.#commands.length - 1;\n  }\n  cleanType(type) {\n    if (this.#position === -1) {\n      return;\n    }\n    for (let i = this.#position; i >= 0; i--) {\n      if (this.#commands[i].type !== type) {\n        this.#commands.splice(i + 1, this.#position - i);\n        this.#position = i;\n        return;\n      }\n    }\n    this.#commands.length = 0;\n    this.#position = -1;\n  }\n  destroy() {\n    this.#commands = null;\n  }\n}\nclass KeyboardManager {\n  constructor(callbacks) {\n    this.buffer = [];\n    this.callbacks = new Map();\n    this.allKeys = new Set();\n    const {\n      isMac\n    } = util_FeatureTest.platform;\n    for (const [keys, callback, options = {}] of callbacks) {\n      for (const key of keys) {\n        const isMacKey = key.startsWith(\"mac+\");\n        if (isMac && isMacKey) {\n          this.callbacks.set(key.slice(4), {\n            callback,\n            options\n          });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        } else if (!isMac && !isMacKey) {\n          this.callbacks.set(key, {\n            callback,\n            options\n          });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        }\n      }\n    }\n  }\n  #serialize(event) {\n    if (event.altKey) {\n      this.buffer.push(\"alt\");\n    }\n    if (event.ctrlKey) {\n      this.buffer.push(\"ctrl\");\n    }\n    if (event.metaKey) {\n      this.buffer.push(\"meta\");\n    }\n    if (event.shiftKey) {\n      this.buffer.push(\"shift\");\n    }\n    this.buffer.push(event.key);\n    const str = this.buffer.join(\"+\");\n    this.buffer.length = 0;\n    return str;\n  }\n  exec(self, event) {\n    if (!this.allKeys.has(event.key)) {\n      return;\n    }\n    const info = this.callbacks.get(this.#serialize(event));\n    if (!info) {\n      return;\n    }\n    const {\n      callback,\n      options: {\n        bubbles = false,\n        args = [],\n        checker = null\n      }\n    } = info;\n    if (checker && !checker(self, event)) {\n      return;\n    }\n    callback.bind(self, ...args, event)();\n    if (!bubbles) {\n      stopEvent(event);\n    }\n  }\n}\nclass ColorManager {\n  static _colorsMapping = new Map([[\"CanvasText\", [0, 0, 0]], [\"Canvas\", [255, 255, 255]]]);\n  get _colors() {\n    const colors = new Map([[\"CanvasText\", null], [\"Canvas\", null]]);\n    getColorValues(colors);\n    return shadow(this, \"_colors\", colors);\n  }\n  convert(color) {\n    const rgb = getRGB(color);\n    if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n      return rgb;\n    }\n    for (const [name, RGB] of this._colors) {\n      if (RGB.every((x, i) => x === rgb[i])) {\n        return ColorManager._colorsMapping.get(name);\n      }\n    }\n    return rgb;\n  }\n  getHexCode(name) {\n    const rgb = this._colors.get(name);\n    if (!rgb) {\n      return name;\n    }\n    return Util.makeHexColor(...rgb);\n  }\n}\nclass AnnotationEditorUIManager {\n  #abortController = new AbortController();\n  #activeEditor = null;\n  #allEditableAnnotations = null;\n  #allEditors = new Map();\n  #allLayers = new Map();\n  #altTextManager = null;\n  #annotationStorage = null;\n  #changedExistingAnnotations = null;\n  #commandManager = new CommandManager();\n  #commentManager = null;\n  #copyPasteAC = null;\n  #currentDrawingSession = null;\n  #currentPageIndex = 0;\n  #deletedAnnotationsElementIds = new Set();\n  #draggingEditors = null;\n  #editorTypes = null;\n  #editorsToRescale = new Set();\n  _editorUndoBar = null;\n  #enableHighlightFloatingButton = false;\n  #enableUpdatedAddImage = false;\n  #enableNewAltTextWhenAddingImage = false;\n  #filterFactory = null;\n  #focusMainContainerTimeoutId = null;\n  #focusManagerAC = null;\n  #highlightColors = null;\n  #highlightWhenShiftUp = false;\n  #floatingToolbar = null;\n  #idManager = new IdManager();\n  #isEnabled = false;\n  #isPointerDown = false;\n  #isWaiting = false;\n  #keyboardManagerAC = null;\n  #lastActiveElement = null;\n  #mainHighlightColorPicker = null;\n  #missingCanvases = null;\n  #mlManager = null;\n  #mode = AnnotationEditorType.NONE;\n  #selectedEditors = new Set();\n  #selectedTextNode = null;\n  #signatureManager = null;\n  #pageColors = null;\n  #showAllStates = null;\n  #pdfDocument = null;\n  #previousStates = {\n    isEditing: false,\n    isEmpty: true,\n    hasSomethingToUndo: false,\n    hasSomethingToRedo: false,\n    hasSelectedEditor: false,\n    hasSelectedText: false\n  };\n  #translation = [0, 0];\n  #translationTimeoutId = null;\n  #container = null;\n  #viewer = null;\n  #viewerAlert = null;\n  #updateModeCapability = null;\n  static TRANSLATE_SMALL = 1;\n  static TRANSLATE_BIG = 10;\n  static get _keyboardManager() {\n    const proto = AnnotationEditorUIManager.prototype;\n    const arrowChecker = self => self.#container.contains(document.activeElement) && document.activeElement.tagName !== \"BUTTON\" && self.hasSomethingToControl();\n    const textInputChecker = (_self, {\n      target: el\n    }) => {\n      if (el instanceof HTMLInputElement) {\n        const {\n          type\n        } = el;\n        return type !== \"text\" && type !== \"number\";\n      }\n      return true;\n    };\n    const small = this.TRANSLATE_SMALL;\n    const big = this.TRANSLATE_BIG;\n    return shadow(this, \"_keyboardManager\", new KeyboardManager([[[\"ctrl+a\", \"mac+meta+a\"], proto.selectAll, {\n      checker: textInputChecker\n    }], [[\"ctrl+z\", \"mac+meta+z\"], proto.undo, {\n      checker: textInputChecker\n    }], [[\"ctrl+y\", \"ctrl+shift+z\", \"mac+meta+shift+z\", \"ctrl+shift+Z\", \"mac+meta+shift+Z\"], proto.redo, {\n      checker: textInputChecker\n    }], [[\"Backspace\", \"alt+Backspace\", \"ctrl+Backspace\", \"shift+Backspace\", \"mac+Backspace\", \"mac+alt+Backspace\", \"mac+ctrl+Backspace\", \"Delete\", \"ctrl+Delete\", \"shift+Delete\", \"mac+Delete\"], proto.delete, {\n      checker: textInputChecker\n    }], [[\"Enter\", \"mac+Enter\"], proto.addNewEditorFromKeyboard, {\n      checker: (self, {\n        target: el\n      }) => !(el instanceof HTMLButtonElement) && self.#container.contains(el) && !self.isEnterHandled\n    }], [[\" \", \"mac+ \"], proto.addNewEditorFromKeyboard, {\n      checker: (self, {\n        target: el\n      }) => !(el instanceof HTMLButtonElement) && self.#container.contains(document.activeElement)\n    }], [[\"Escape\", \"mac+Escape\"], proto.unselectAll], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto.translateSelectedEditors, {\n      args: [-small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto.translateSelectedEditors, {\n      args: [-big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto.translateSelectedEditors, {\n      args: [small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto.translateSelectedEditors, {\n      args: [big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto.translateSelectedEditors, {\n      args: [0, -small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto.translateSelectedEditors, {\n      args: [0, -big],\n      checker: arrowChecker\n    }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto.translateSelectedEditors, {\n      args: [0, small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto.translateSelectedEditors, {\n      args: [0, big],\n      checker: arrowChecker\n    }]]));\n  }\n  constructor(container, viewer, viewerAlert, altTextManager, commentManager, signatureManager, eventBus, pdfDocument, pageColors, highlightColors, enableHighlightFloatingButton, enableUpdatedAddImage, enableNewAltTextWhenAddingImage, mlManager, editorUndoBar, supportsPinchToZoom) {\n    const signal = this._signal = this.#abortController.signal;\n    this.#container = container;\n    this.#viewer = viewer;\n    this.#viewerAlert = viewerAlert;\n    this.#altTextManager = altTextManager;\n    this.#commentManager = commentManager;\n    this.#signatureManager = signatureManager;\n    this.#pdfDocument = pdfDocument;\n    this._eventBus = eventBus;\n    eventBus._on(\"editingaction\", this.onEditingAction.bind(this), {\n      signal\n    });\n    eventBus._on(\"pagechanging\", this.onPageChanging.bind(this), {\n      signal\n    });\n    eventBus._on(\"scalechanging\", this.onScaleChanging.bind(this), {\n      signal\n    });\n    eventBus._on(\"rotationchanging\", this.onRotationChanging.bind(this), {\n      signal\n    });\n    eventBus._on(\"setpreference\", this.onSetPreference.bind(this), {\n      signal\n    });\n    eventBus._on(\"switchannotationeditorparams\", evt => this.updateParams(evt.type, evt.value), {\n      signal\n    });\n    window.addEventListener(\"pointerdown\", () => {\n      this.#isPointerDown = true;\n    }, {\n      capture: true,\n      signal\n    });\n    window.addEventListener(\"pointerup\", () => {\n      this.#isPointerDown = false;\n    }, {\n      capture: true,\n      signal\n    });\n    this.#addSelectionListener();\n    this.#addDragAndDropListeners();\n    this.#addKeyboardManager();\n    this.#annotationStorage = pdfDocument.annotationStorage;\n    this.#filterFactory = pdfDocument.filterFactory;\n    this.#pageColors = pageColors;\n    this.#highlightColors = highlightColors || null;\n    this.#enableHighlightFloatingButton = enableHighlightFloatingButton;\n    this.#enableUpdatedAddImage = enableUpdatedAddImage;\n    this.#enableNewAltTextWhenAddingImage = enableNewAltTextWhenAddingImage;\n    this.#mlManager = mlManager || null;\n    this.viewParameters = {\n      realScale: PixelsPerInch.PDF_TO_CSS_UNITS,\n      rotation: 0\n    };\n    this.isShiftKeyDown = false;\n    this._editorUndoBar = editorUndoBar || null;\n    this._supportsPinchToZoom = supportsPinchToZoom !== false;\n    commentManager?.setSidebarUiManager(this);\n  }\n  destroy() {\n    this.#updateModeCapability?.resolve();\n    this.#updateModeCapability = null;\n    this.#abortController?.abort();\n    this.#abortController = null;\n    this._signal = null;\n    for (const layer of this.#allLayers.values()) {\n      layer.destroy();\n    }\n    this.#allLayers.clear();\n    this.#allEditors.clear();\n    this.#editorsToRescale.clear();\n    this.#missingCanvases?.clear();\n    this.#activeEditor = null;\n    this.#selectedEditors.clear();\n    this.#commandManager.destroy();\n    this.#altTextManager?.destroy();\n    this.#commentManager?.destroy();\n    this.#signatureManager?.destroy();\n    this.#floatingToolbar?.hide();\n    this.#floatingToolbar = null;\n    this.#mainHighlightColorPicker?.destroy();\n    this.#mainHighlightColorPicker = null;\n    this.#allEditableAnnotations = null;\n    if (this.#focusMainContainerTimeoutId) {\n      clearTimeout(this.#focusMainContainerTimeoutId);\n      this.#focusMainContainerTimeoutId = null;\n    }\n    if (this.#translationTimeoutId) {\n      clearTimeout(this.#translationTimeoutId);\n      this.#translationTimeoutId = null;\n    }\n    this._editorUndoBar?.destroy();\n    this.#pdfDocument = null;\n  }\n  combinedSignal(ac) {\n    return AbortSignal.any([this._signal, ac.signal]);\n  }\n  get mlManager() {\n    return this.#mlManager;\n  }\n  get useNewAltTextFlow() {\n    return this.#enableUpdatedAddImage;\n  }\n  get useNewAltTextWhenAddingImage() {\n    return this.#enableNewAltTextWhenAddingImage;\n  }\n  get hcmFilter() {\n    return shadow(this, \"hcmFilter\", this.#pageColors ? this.#filterFactory.addHCMFilter(this.#pageColors.foreground, this.#pageColors.background) : \"none\");\n  }\n  get direction() {\n    return shadow(this, \"direction\", getComputedStyle(this.#container).direction);\n  }\n  get _highlightColors() {\n    return shadow(this, \"_highlightColors\", this.#highlightColors ? new Map(this.#highlightColors.split(\",\").map(pair => {\n      pair = pair.split(\"=\").map(x => x.trim());\n      pair[1] = pair[1].toUpperCase();\n      return pair;\n    })) : null);\n  }\n  get highlightColors() {\n    const {\n      _highlightColors\n    } = this;\n    if (!_highlightColors) {\n      return shadow(this, \"highlightColors\", null);\n    }\n    const map = new Map();\n    const hasHCM = !!this.#pageColors;\n    for (const [name, color] of _highlightColors) {\n      const isNameForHCM = name.endsWith(\"_HCM\");\n      if (hasHCM && isNameForHCM) {\n        map.set(name.replace(\"_HCM\", \"\"), color);\n        continue;\n      }\n      if (!hasHCM && !isNameForHCM) {\n        map.set(name, color);\n      }\n    }\n    return shadow(this, \"highlightColors\", map);\n  }\n  get highlightColorNames() {\n    return shadow(this, \"highlightColorNames\", this.highlightColors ? new Map(Array.from(this.highlightColors, e => e.reverse())) : null);\n  }\n  getNonHCMColor(color) {\n    if (!this._highlightColors) {\n      return color;\n    }\n    const colorName = this.highlightColorNames.get(color);\n    return this._highlightColors.get(colorName) || color;\n  }\n  getNonHCMColorName(color) {\n    return this.highlightColorNames.get(color) || color;\n  }\n  setCurrentDrawingSession(layer) {\n    if (layer) {\n      this.unselectAll();\n      this.disableUserSelect(true);\n    } else {\n      this.disableUserSelect(false);\n    }\n    this.#currentDrawingSession = layer;\n  }\n  setMainHighlightColorPicker(colorPicker) {\n    this.#mainHighlightColorPicker = colorPicker;\n  }\n  editAltText(editor, firstTime = false) {\n    this.#altTextManager?.editAltText(this, editor, firstTime);\n  }\n  hasCommentManager() {\n    return !!this.#commentManager;\n  }\n  editComment(editor, posX, posY, options) {\n    this.#commentManager?.showDialog(this, editor, posX, posY, options);\n  }\n  selectComment(pageIndex, uid) {\n    const layer = this.#allLayers.get(pageIndex);\n    const editor = layer?.getEditorByUID(uid);\n    editor?.toggleComment(true, true);\n  }\n  updateComment(editor) {\n    this.#commentManager?.updateComment(editor.getData());\n  }\n  updatePopupColor(editor) {\n    this.#commentManager?.updatePopupColor(editor);\n  }\n  removeComment(editor) {\n    this.#commentManager?.removeComments([editor.uid]);\n  }\n  toggleComment(editor, isSelected, visibility = undefined) {\n    this.#commentManager?.toggleCommentPopup(editor, isSelected, visibility);\n  }\n  makeCommentColor(color, opacity) {\n    return color && this.#commentManager?.makeCommentColor(color, opacity) || null;\n  }\n  getCommentDialogElement() {\n    return this.#commentManager?.dialogElement || null;\n  }\n  async waitForEditorsRendered(pageNumber) {\n    if (this.#allLayers.has(pageNumber - 1)) {\n      return;\n    }\n    const {\n      resolve,\n      promise\n    } = Promise.withResolvers();\n    const onEditorsRendered = evt => {\n      if (evt.pageNumber === pageNumber) {\n        this._eventBus._off(\"editorsrendered\", onEditorsRendered);\n        resolve();\n      }\n    };\n    this._eventBus.on(\"editorsrendered\", onEditorsRendered);\n    await promise;\n  }\n  getSignature(editor) {\n    this.#signatureManager?.getSignature({\n      uiManager: this,\n      editor\n    });\n  }\n  get signatureManager() {\n    return this.#signatureManager;\n  }\n  switchToMode(mode, callback) {\n    this._eventBus.on(\"annotationeditormodechanged\", callback, {\n      once: true,\n      signal: this._signal\n    });\n    this._eventBus.dispatch(\"showannotationeditorui\", {\n      source: this,\n      mode\n    });\n  }\n  setPreference(name, value) {\n    this._eventBus.dispatch(\"setpreference\", {\n      source: this,\n      name,\n      value\n    });\n  }\n  onSetPreference({\n    name,\n    value\n  }) {\n    switch (name) {\n      case \"enableNewAltTextWhenAddingImage\":\n        this.#enableNewAltTextWhenAddingImage = value;\n        break;\n    }\n  }\n  onPageChanging({\n    pageNumber\n  }) {\n    this.#currentPageIndex = pageNumber - 1;\n  }\n  focusMainContainer() {\n    this.#container.focus();\n  }\n  findParent(x, y) {\n    for (const layer of this.#allLayers.values()) {\n      const {\n        x: layerX,\n        y: layerY,\n        width,\n        height\n      } = layer.div.getBoundingClientRect();\n      if (x >= layerX && x <= layerX + width && y >= layerY && y <= layerY + height) {\n        return layer;\n      }\n    }\n    return null;\n  }\n  disableUserSelect(value = false) {\n    this.#viewer.classList.toggle(\"noUserSelect\", value);\n  }\n  addShouldRescale(editor) {\n    this.#editorsToRescale.add(editor);\n  }\n  removeShouldRescale(editor) {\n    this.#editorsToRescale.delete(editor);\n  }\n  onScaleChanging({\n    scale\n  }) {\n    this.commitOrRemove();\n    this.viewParameters.realScale = scale * PixelsPerInch.PDF_TO_CSS_UNITS;\n    for (const editor of this.#editorsToRescale) {\n      editor.onScaleChanging();\n    }\n    this.#currentDrawingSession?.onScaleChanging();\n  }\n  onRotationChanging({\n    pagesRotation\n  }) {\n    this.commitOrRemove();\n    this.viewParameters.rotation = pagesRotation;\n  }\n  #getAnchorElementForSelection({\n    anchorNode\n  }) {\n    return anchorNode.nodeType === Node.TEXT_NODE ? anchorNode.parentElement : anchorNode;\n  }\n  #getLayerForTextLayer(textLayer) {\n    const {\n      currentLayer\n    } = this;\n    if (currentLayer.hasTextLayer(textLayer)) {\n      return currentLayer;\n    }\n    for (const layer of this.#allLayers.values()) {\n      if (layer.hasTextLayer(textLayer)) {\n        return layer;\n      }\n    }\n    return null;\n  }\n  highlightSelection(methodOfCreation = \"\", comment = false) {\n    const selection = document.getSelection();\n    if (!selection || selection.isCollapsed) {\n      return;\n    }\n    const {\n      anchorNode,\n      anchorOffset,\n      focusNode,\n      focusOffset\n    } = selection;\n    const text = selection.toString();\n    const anchorElement = this.#getAnchorElementForSelection(selection);\n    const textLayer = anchorElement.closest(\".textLayer\");\n    const boxes = this.getSelectionBoxes(textLayer);\n    if (!boxes) {\n      return;\n    }\n    selection.empty();\n    const layer = this.#getLayerForTextLayer(textLayer);\n    const isNoneMode = this.#mode === AnnotationEditorType.NONE;\n    const callback = () => {\n      const editor = layer?.createAndAddNewEditor({\n        x: 0,\n        y: 0\n      }, false, {\n        methodOfCreation,\n        boxes,\n        anchorNode,\n        anchorOffset,\n        focusNode,\n        focusOffset,\n        text\n      });\n      if (isNoneMode) {\n        this.showAllEditors(\"highlight\", true, true);\n      }\n      if (comment) {\n        editor?.editComment();\n      }\n    };\n    if (isNoneMode) {\n      this.switchToMode(AnnotationEditorType.HIGHLIGHT, callback);\n      return;\n    }\n    callback();\n  }\n  commentSelection(methodOfCreation = \"\") {\n    this.highlightSelection(methodOfCreation, true);\n  }\n  #displayFloatingToolbar() {\n    const selection = document.getSelection();\n    if (!selection || selection.isCollapsed) {\n      return;\n    }\n    const anchorElement = this.#getAnchorElementForSelection(selection);\n    const textLayer = anchorElement.closest(\".textLayer\");\n    const boxes = this.getSelectionBoxes(textLayer);\n    if (!boxes) {\n      return;\n    }\n    this.#floatingToolbar ||= new FloatingToolbar(this);\n    this.#floatingToolbar.show(textLayer, boxes, this.direction === \"ltr\");\n  }\n  getAndRemoveDataFromAnnotationStorage(annotationId) {\n    if (!this.#annotationStorage) {\n      return null;\n    }\n    const key = `${AnnotationEditorPrefix}${annotationId}`;\n    const storedValue = this.#annotationStorage.getRawValue(key);\n    if (storedValue) {\n      this.#annotationStorage.remove(key);\n    }\n    return storedValue;\n  }\n  addToAnnotationStorage(editor) {\n    if (!editor.isEmpty() && this.#annotationStorage && !this.#annotationStorage.has(editor.id)) {\n      this.#annotationStorage.setValue(editor.id, editor);\n    }\n  }\n  a11yAlert(messageId, args = null) {\n    const viewerAlert = this.#viewerAlert;\n    if (!viewerAlert) {\n      return;\n    }\n    viewerAlert.setAttribute(\"data-l10n-id\", messageId);\n    if (args) {\n      viewerAlert.setAttribute(\"data-l10n-args\", JSON.stringify(args));\n    } else {\n      viewerAlert.removeAttribute(\"data-l10n-args\");\n    }\n  }\n  #selectionChange() {\n    const selection = document.getSelection();\n    if (!selection || selection.isCollapsed) {\n      if (this.#selectedTextNode) {\n        this.#floatingToolbar?.hide();\n        this.#selectedTextNode = null;\n        this.#dispatchUpdateStates({\n          hasSelectedText: false\n        });\n      }\n      return;\n    }\n    const {\n      anchorNode\n    } = selection;\n    if (anchorNode === this.#selectedTextNode) {\n      return;\n    }\n    const anchorElement = this.#getAnchorElementForSelection(selection);\n    const textLayer = anchorElement.closest(\".textLayer\");\n    if (!textLayer) {\n      if (this.#selectedTextNode) {\n        this.#floatingToolbar?.hide();\n        this.#selectedTextNode = null;\n        this.#dispatchUpdateStates({\n          hasSelectedText: false\n        });\n      }\n      return;\n    }\n    this.#floatingToolbar?.hide();\n    this.#selectedTextNode = anchorNode;\n    this.#dispatchUpdateStates({\n      hasSelectedText: true\n    });\n    if (this.#mode !== AnnotationEditorType.HIGHLIGHT && this.#mode !== AnnotationEditorType.NONE) {\n      return;\n    }\n    if (this.#mode === AnnotationEditorType.HIGHLIGHT) {\n      this.showAllEditors(\"highlight\", true, true);\n    }\n    this.#highlightWhenShiftUp = this.isShiftKeyDown;\n    if (!this.isShiftKeyDown) {\n      const activeLayer = this.#mode === AnnotationEditorType.HIGHLIGHT ? this.#getLayerForTextLayer(textLayer) : null;\n      activeLayer?.toggleDrawing();\n      if (this.#isPointerDown) {\n        const ac = new AbortController();\n        const signal = this.combinedSignal(ac);\n        const pointerup = e => {\n          if (e.type === \"pointerup\" && e.button !== 0) {\n            return;\n          }\n          ac.abort();\n          activeLayer?.toggleDrawing(true);\n          if (e.type === \"pointerup\") {\n            this.#onSelectEnd(\"main_toolbar\");\n          }\n        };\n        window.addEventListener(\"pointerup\", pointerup, {\n          signal\n        });\n        window.addEventListener(\"blur\", pointerup, {\n          signal\n        });\n      } else {\n        activeLayer?.toggleDrawing(true);\n        this.#onSelectEnd(\"main_toolbar\");\n      }\n    }\n  }\n  #onSelectEnd(methodOfCreation = \"\") {\n    if (this.#mode === AnnotationEditorType.HIGHLIGHT) {\n      this.highlightSelection(methodOfCreation);\n    } else if (this.#enableHighlightFloatingButton) {\n      this.#displayFloatingToolbar();\n    }\n  }\n  #addSelectionListener() {\n    document.addEventListener(\"selectionchange\", this.#selectionChange.bind(this), {\n      signal: this._signal\n    });\n  }\n  #addFocusManager() {\n    if (this.#focusManagerAC) {\n      return;\n    }\n    this.#focusManagerAC = new AbortController();\n    const signal = this.combinedSignal(this.#focusManagerAC);\n    window.addEventListener(\"focus\", this.focus.bind(this), {\n      signal\n    });\n    window.addEventListener(\"blur\", this.blur.bind(this), {\n      signal\n    });\n  }\n  #removeFocusManager() {\n    this.#focusManagerAC?.abort();\n    this.#focusManagerAC = null;\n  }\n  blur() {\n    this.isShiftKeyDown = false;\n    if (this.#highlightWhenShiftUp) {\n      this.#highlightWhenShiftUp = false;\n      this.#onSelectEnd(\"main_toolbar\");\n    }\n    if (!this.hasSelection) {\n      return;\n    }\n    const {\n      activeElement\n    } = document;\n    for (const editor of this.#selectedEditors) {\n      if (editor.div.contains(activeElement)) {\n        this.#lastActiveElement = [editor, activeElement];\n        editor._focusEventsAllowed = false;\n        break;\n      }\n    }\n  }\n  focus() {\n    if (!this.#lastActiveElement) {\n      return;\n    }\n    const [lastEditor, lastActiveElement] = this.#lastActiveElement;\n    this.#lastActiveElement = null;\n    lastActiveElement.addEventListener(\"focusin\", () => {\n      lastEditor._focusEventsAllowed = true;\n    }, {\n      once: true,\n      signal: this._signal\n    });\n    lastActiveElement.focus();\n  }\n  #addKeyboardManager() {\n    if (this.#keyboardManagerAC) {\n      return;\n    }\n    this.#keyboardManagerAC = new AbortController();\n    const signal = this.combinedSignal(this.#keyboardManagerAC);\n    window.addEventListener(\"keydown\", this.keydown.bind(this), {\n      signal\n    });\n    window.addEventListener(\"keyup\", this.keyup.bind(this), {\n      signal\n    });\n  }\n  #removeKeyboardManager() {\n    this.#keyboardManagerAC?.abort();\n    this.#keyboardManagerAC = null;\n  }\n  #addCopyPasteListeners() {\n    if (this.#copyPasteAC) {\n      return;\n    }\n    this.#copyPasteAC = new AbortController();\n    const signal = this.combinedSignal(this.#copyPasteAC);\n    document.addEventListener(\"copy\", this.copy.bind(this), {\n      signal\n    });\n    document.addEventListener(\"cut\", this.cut.bind(this), {\n      signal\n    });\n    document.addEventListener(\"paste\", this.paste.bind(this), {\n      signal\n    });\n  }\n  #removeCopyPasteListeners() {\n    this.#copyPasteAC?.abort();\n    this.#copyPasteAC = null;\n  }\n  #addDragAndDropListeners() {\n    const signal = this._signal;\n    document.addEventListener(\"dragover\", this.dragOver.bind(this), {\n      signal\n    });\n    document.addEventListener(\"drop\", this.drop.bind(this), {\n      signal\n    });\n  }\n  addEditListeners() {\n    this.#addKeyboardManager();\n    this.#addCopyPasteListeners();\n  }\n  removeEditListeners() {\n    this.#removeKeyboardManager();\n    this.#removeCopyPasteListeners();\n  }\n  dragOver(event) {\n    for (const {\n      type\n    } of event.dataTransfer.items) {\n      for (const editorType of this.#editorTypes) {\n        if (editorType.isHandlingMimeForPasting(type)) {\n          event.dataTransfer.dropEffect = \"copy\";\n          event.preventDefault();\n          return;\n        }\n      }\n    }\n  }\n  drop(event) {\n    for (const item of event.dataTransfer.items) {\n      for (const editorType of this.#editorTypes) {\n        if (editorType.isHandlingMimeForPasting(item.type)) {\n          editorType.paste(item, this.currentLayer);\n          event.preventDefault();\n          return;\n        }\n      }\n    }\n  }\n  copy(event) {\n    event.preventDefault();\n    this.#activeEditor?.commitOrRemove();\n    if (!this.hasSelection) {\n      return;\n    }\n    const editors = [];\n    for (const editor of this.#selectedEditors) {\n      const serialized = editor.serialize(true);\n      if (serialized) {\n        editors.push(serialized);\n      }\n    }\n    if (editors.length === 0) {\n      return;\n    }\n    event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n  }\n  cut(event) {\n    this.copy(event);\n    this.delete();\n  }\n  async paste(event) {\n    event.preventDefault();\n    const {\n      clipboardData\n    } = event;\n    for (const item of clipboardData.items) {\n      for (const editorType of this.#editorTypes) {\n        if (editorType.isHandlingMimeForPasting(item.type)) {\n          editorType.paste(item, this.currentLayer);\n          return;\n        }\n      }\n    }\n    let data = clipboardData.getData(\"application/pdfjs\");\n    if (!data) {\n      return;\n    }\n    try {\n      data = JSON.parse(data);\n    } catch (ex) {\n      warn(`paste: \"${ex.message}\".`);\n      return;\n    }\n    if (!Array.isArray(data)) {\n      return;\n    }\n    this.unselectAll();\n    const layer = this.currentLayer;\n    try {\n      const newEditors = [];\n      for (const editor of data) {\n        const deserializedEditor = await layer.deserialize(editor);\n        if (!deserializedEditor) {\n          return;\n        }\n        newEditors.push(deserializedEditor);\n      }\n      const cmd = () => {\n        for (const editor of newEditors) {\n          this.#addEditorToLayer(editor);\n        }\n        this.#selectEditors(newEditors);\n      };\n      const undo = () => {\n        for (const editor of newEditors) {\n          editor.remove();\n        }\n      };\n      this.addCommands({\n        cmd,\n        undo,\n        mustExec: true\n      });\n    } catch (ex) {\n      warn(`paste: \"${ex.message}\".`);\n    }\n  }\n  keydown(event) {\n    if (!this.isShiftKeyDown && event.key === \"Shift\") {\n      this.isShiftKeyDown = true;\n    }\n    if (this.#mode !== AnnotationEditorType.NONE && !this.isEditorHandlingKeyboard) {\n      AnnotationEditorUIManager._keyboardManager.exec(this, event);\n    }\n  }\n  keyup(event) {\n    if (this.isShiftKeyDown && event.key === \"Shift\") {\n      this.isShiftKeyDown = false;\n      if (this.#highlightWhenShiftUp) {\n        this.#highlightWhenShiftUp = false;\n        this.#onSelectEnd(\"main_toolbar\");\n      }\n    }\n  }\n  onEditingAction({\n    name\n  }) {\n    switch (name) {\n      case \"undo\":\n      case \"redo\":\n      case \"delete\":\n      case \"selectAll\":\n        this[name]();\n        break;\n      case \"highlightSelection\":\n        this.highlightSelection(\"context_menu\");\n        break;\n      case \"commentSelection\":\n        this.commentSelection(\"context_menu\");\n        break;\n    }\n  }\n  #dispatchUpdateStates(details) {\n    const hasChanged = Object.entries(details).some(([key, value]) => this.#previousStates[key] !== value);\n    if (hasChanged) {\n      this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n        source: this,\n        details: Object.assign(this.#previousStates, details)\n      });\n      if (this.#mode === AnnotationEditorType.HIGHLIGHT && details.hasSelectedEditor === false) {\n        this.#dispatchUpdateUI([[AnnotationEditorParamsType.HIGHLIGHT_FREE, true]]);\n      }\n    }\n  }\n  #dispatchUpdateUI(details) {\n    this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n      source: this,\n      details\n    });\n  }\n  setEditingState(isEditing) {\n    if (isEditing) {\n      this.#addFocusManager();\n      this.#addCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: this.#mode !== AnnotationEditorType.NONE,\n        isEmpty: this.#isEmpty(),\n        hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n        hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n        hasSelectedEditor: false\n      });\n    } else {\n      this.#removeFocusManager();\n      this.#removeCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: false\n      });\n      this.disableUserSelect(false);\n    }\n  }\n  registerEditorTypes(types) {\n    if (this.#editorTypes) {\n      return;\n    }\n    this.#editorTypes = types;\n    for (const editorType of this.#editorTypes) {\n      this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n    }\n  }\n  getId() {\n    return this.#idManager.id;\n  }\n  get currentLayer() {\n    return this.#allLayers.get(this.#currentPageIndex);\n  }\n  getLayer(pageIndex) {\n    return this.#allLayers.get(pageIndex);\n  }\n  get currentPageIndex() {\n    return this.#currentPageIndex;\n  }\n  addLayer(layer) {\n    this.#allLayers.set(layer.pageIndex, layer);\n    if (this.#isEnabled) {\n      layer.enable();\n    } else {\n      layer.disable();\n    }\n  }\n  removeLayer(layer) {\n    this.#allLayers.delete(layer.pageIndex);\n  }\n  async updateMode(mode, editId = null, isFromKeyboard = false, mustEnterInEditMode = false, editComment = false) {\n    if (this.#mode === mode) {\n      return;\n    }\n    if (this.#updateModeCapability) {\n      await this.#updateModeCapability.promise;\n      if (!this.#updateModeCapability) {\n        return;\n      }\n    }\n    this.#updateModeCapability = Promise.withResolvers();\n    this.#currentDrawingSession?.commitOrRemove();\n    if (this.#mode === AnnotationEditorType.POPUP) {\n      this.#commentManager?.hideSidebar();\n    }\n    this.#commentManager?.destroyPopup();\n    this.#mode = mode;\n    if (mode === AnnotationEditorType.NONE) {\n      this.setEditingState(false);\n      this.#disableAll();\n      for (const editor of this.#allEditors.values()) {\n        editor.hideStandaloneCommentButton();\n      }\n      this._editorUndoBar?.hide();\n      this.toggleComment(null);\n      this.#updateModeCapability.resolve();\n      return;\n    }\n    for (const editor of this.#allEditors.values()) {\n      editor.addStandaloneCommentButton();\n    }\n    if (mode === AnnotationEditorType.SIGNATURE) {\n      await this.#signatureManager?.loadSignatures();\n    }\n    this.setEditingState(true);\n    await this.#enableAll();\n    this.unselectAll();\n    for (const layer of this.#allLayers.values()) {\n      layer.updateMode(mode);\n    }\n    if (mode === AnnotationEditorType.POPUP) {\n      this.#allEditableAnnotations ||= await this.#pdfDocument.getAnnotationsByType(new Set(this.#editorTypes.map(editorClass => editorClass._editorType)));\n      const elementIds = new Set();\n      const allComments = [];\n      for (const editor of this.#allEditors.values()) {\n        const {\n          annotationElementId,\n          hasComment,\n          deleted\n        } = editor;\n        if (annotationElementId) {\n          elementIds.add(annotationElementId);\n        }\n        if (hasComment && !deleted) {\n          allComments.push(editor.getData());\n        }\n      }\n      for (const annotation of this.#allEditableAnnotations) {\n        const {\n          id,\n          popupRef,\n          contentsObj\n        } = annotation;\n        if (popupRef && contentsObj?.str && !elementIds.has(id) && !this.#deletedAnnotationsElementIds.has(id)) {\n          allComments.push(annotation);\n        }\n      }\n      this.#commentManager?.showSidebar(allComments);\n    }\n    if (!editId) {\n      if (isFromKeyboard) {\n        this.addNewEditorFromKeyboard();\n      }\n      this.#updateModeCapability.resolve();\n      return;\n    }\n    for (const editor of this.#allEditors.values()) {\n      if (editor.uid === editId) {\n        this.setSelected(editor);\n        if (editComment) {\n          editor.editComment();\n        } else if (mustEnterInEditMode) {\n          editor.enterInEditMode();\n        } else {\n          editor.focus();\n        }\n      } else {\n        editor.unselect();\n      }\n    }\n    this.#updateModeCapability.resolve();\n  }\n  addNewEditorFromKeyboard() {\n    if (this.currentLayer.canCreateNewEmptyEditor()) {\n      this.currentLayer.addNewEditor();\n    }\n  }\n  updateToolbar(options) {\n    if (options.mode === this.#mode) {\n      return;\n    }\n    this._eventBus.dispatch(\"switchannotationeditormode\", {\n      source: this,\n      ...options\n    });\n  }\n  updateParams(type, value) {\n    if (!this.#editorTypes) {\n      return;\n    }\n    switch (type) {\n      case AnnotationEditorParamsType.CREATE:\n        this.currentLayer.addNewEditor(value);\n        return;\n      case AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL:\n        this._eventBus.dispatch(\"reporttelemetry\", {\n          source: this,\n          details: {\n            type: \"editing\",\n            data: {\n              type: \"highlight\",\n              action: \"toggle_visibility\"\n            }\n          }\n        });\n        (this.#showAllStates ||= new Map()).set(type, value);\n        this.showAllEditors(\"highlight\", value);\n        break;\n    }\n    if (this.hasSelection) {\n      for (const editor of this.#selectedEditors) {\n        editor.updateParams(type, value);\n      }\n    } else {\n      for (const editorType of this.#editorTypes) {\n        editorType.updateDefaultParams(type, value);\n      }\n    }\n  }\n  showAllEditors(type, visible, updateButton = false) {\n    for (const editor of this.#allEditors.values()) {\n      if (editor.editorType === type) {\n        editor.show(visible);\n      }\n    }\n    const state = this.#showAllStates?.get(AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL) ?? true;\n    if (state !== visible) {\n      this.#dispatchUpdateUI([[AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL, visible]]);\n    }\n  }\n  enableWaiting(mustWait = false) {\n    if (this.#isWaiting === mustWait) {\n      return;\n    }\n    this.#isWaiting = mustWait;\n    for (const layer of this.#allLayers.values()) {\n      if (mustWait) {\n        layer.disableClick();\n      } else {\n        layer.enableClick();\n      }\n      layer.div.classList.toggle(\"waiting\", mustWait);\n    }\n  }\n  async #enableAll() {\n    if (!this.#isEnabled) {\n      this.#isEnabled = true;\n      const promises = [];\n      for (const layer of this.#allLayers.values()) {\n        promises.push(layer.enable());\n      }\n      await Promise.all(promises);\n      for (const editor of this.#allEditors.values()) {\n        editor.enable();\n      }\n    }\n  }\n  #disableAll() {\n    this.unselectAll();\n    if (this.#isEnabled) {\n      this.#isEnabled = false;\n      for (const layer of this.#allLayers.values()) {\n        layer.disable();\n      }\n      for (const editor of this.#allEditors.values()) {\n        editor.disable();\n      }\n    }\n  }\n  *getEditors(pageIndex) {\n    for (const editor of this.#allEditors.values()) {\n      if (editor.pageIndex === pageIndex) {\n        yield editor;\n      }\n    }\n  }\n  getEditor(id) {\n    return this.#allEditors.get(id);\n  }\n  addEditor(editor) {\n    this.#allEditors.set(editor.id, editor);\n  }\n  removeEditor(editor) {\n    if (editor.div.contains(document.activeElement)) {\n      if (this.#focusMainContainerTimeoutId) {\n        clearTimeout(this.#focusMainContainerTimeoutId);\n      }\n      this.#focusMainContainerTimeoutId = setTimeout(() => {\n        this.focusMainContainer();\n        this.#focusMainContainerTimeoutId = null;\n      }, 0);\n    }\n    this.#allEditors.delete(editor.id);\n    if (editor.annotationElementId) {\n      this.#missingCanvases?.delete(editor.annotationElementId);\n    }\n    this.unselect(editor);\n    if (!editor.annotationElementId || !this.#deletedAnnotationsElementIds.has(editor.annotationElementId)) {\n      this.#annotationStorage?.remove(editor.id);\n    }\n  }\n  addDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.add(editor.annotationElementId);\n    this.addChangedExistingAnnotation(editor);\n    editor.deleted = true;\n  }\n  isDeletedAnnotationElement(annotationElementId) {\n    return this.#deletedAnnotationsElementIds.has(annotationElementId);\n  }\n  removeDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);\n    this.removeChangedExistingAnnotation(editor);\n    editor.deleted = false;\n  }\n  #addEditorToLayer(editor) {\n    const layer = this.#allLayers.get(editor.pageIndex);\n    if (layer) {\n      layer.addOrRebuild(editor);\n    } else {\n      this.addEditor(editor);\n      this.addToAnnotationStorage(editor);\n    }\n  }\n  setActiveEditor(editor) {\n    if (this.#activeEditor === editor) {\n      return;\n    }\n    this.#activeEditor = editor;\n    if (editor) {\n      this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    }\n  }\n  get #lastSelectedEditor() {\n    let ed = null;\n    for (ed of this.#selectedEditors) {}\n    return ed;\n  }\n  updateUI(editor) {\n    if (this.#lastSelectedEditor === editor) {\n      this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    }\n  }\n  updateUIForDefaultProperties(editorType) {\n    this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n  }\n  toggleSelected(editor) {\n    if (this.#selectedEditors.has(editor)) {\n      this.#selectedEditors.delete(editor);\n      editor.unselect();\n      this.#dispatchUpdateStates({\n        hasSelectedEditor: this.hasSelection\n      });\n      return;\n    }\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true\n    });\n  }\n  setSelected(editor) {\n    this.updateToolbar({\n      mode: editor.mode,\n      editId: editor.id\n    });\n    this.#currentDrawingSession?.commitOrRemove();\n    for (const ed of this.#selectedEditors) {\n      if (ed !== editor) {\n        ed.unselect();\n      }\n    }\n    this.#selectedEditors.clear();\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true\n    });\n  }\n  isSelected(editor) {\n    return this.#selectedEditors.has(editor);\n  }\n  get firstSelectedEditor() {\n    return this.#selectedEditors.values().next().value;\n  }\n  unselect(editor) {\n    editor.unselect();\n    this.#selectedEditors.delete(editor);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: this.hasSelection\n    });\n  }\n  get hasSelection() {\n    return this.#selectedEditors.size !== 0;\n  }\n  get isEnterHandled() {\n    return this.#selectedEditors.size === 1 && this.firstSelectedEditor.isEnterHandled;\n  }\n  undo() {\n    this.#commandManager.undo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n      hasSomethingToRedo: true,\n      isEmpty: this.#isEmpty()\n    });\n    this._editorUndoBar?.hide();\n  }\n  redo() {\n    this.#commandManager.redo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n      isEmpty: this.#isEmpty()\n    });\n  }\n  addCommands(params) {\n    this.#commandManager.add(params);\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: false,\n      isEmpty: this.#isEmpty()\n    });\n  }\n  cleanUndoStack(type) {\n    this.#commandManager.cleanType(type);\n  }\n  #isEmpty() {\n    if (this.#allEditors.size === 0) {\n      return true;\n    }\n    if (this.#allEditors.size === 1) {\n      for (const editor of this.#allEditors.values()) {\n        return editor.isEmpty();\n      }\n    }\n    return false;\n  }\n  delete() {\n    this.commitOrRemove();\n    const drawingEditor = this.currentLayer?.endDrawingSession(true);\n    if (!this.hasSelection && !drawingEditor) {\n      return;\n    }\n    const editors = drawingEditor ? [drawingEditor] : [...this.#selectedEditors];\n    const cmd = () => {\n      this._editorUndoBar?.show(undo, editors.length === 1 ? editors[0].editorType : editors.length);\n      for (const editor of editors) {\n        editor.remove();\n      }\n    };\n    const undo = () => {\n      for (const editor of editors) {\n        this.#addEditorToLayer(editor);\n      }\n    };\n    this.addCommands({\n      cmd,\n      undo,\n      mustExec: true\n    });\n  }\n  commitOrRemove() {\n    this.#activeEditor?.commitOrRemove();\n  }\n  hasSomethingToControl() {\n    return this.#activeEditor || this.hasSelection;\n  }\n  #selectEditors(editors) {\n    for (const editor of this.#selectedEditors) {\n      editor.unselect();\n    }\n    this.#selectedEditors.clear();\n    for (const editor of editors) {\n      if (editor.isEmpty()) {\n        continue;\n      }\n      this.#selectedEditors.add(editor);\n      editor.select();\n    }\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: this.hasSelection\n    });\n  }\n  selectAll() {\n    for (const editor of this.#selectedEditors) {\n      editor.commit();\n    }\n    this.#selectEditors(this.#allEditors.values());\n  }\n  unselectAll() {\n    if (this.#activeEditor) {\n      this.#activeEditor.commitOrRemove();\n      if (this.#mode !== AnnotationEditorType.NONE) {\n        return;\n      }\n    }\n    if (this.#currentDrawingSession?.commitOrRemove()) {\n      return;\n    }\n    if (!this.hasSelection) {\n      return;\n    }\n    for (const editor of this.#selectedEditors) {\n      editor.unselect();\n    }\n    this.#selectedEditors.clear();\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: false\n    });\n  }\n  translateSelectedEditors(x, y, noCommit = false) {\n    if (!noCommit) {\n      this.commitOrRemove();\n    }\n    if (!this.hasSelection) {\n      return;\n    }\n    this.#translation[0] += x;\n    this.#translation[1] += y;\n    const [totalX, totalY] = this.#translation;\n    const editors = [...this.#selectedEditors];\n    const TIME_TO_WAIT = 1000;\n    if (this.#translationTimeoutId) {\n      clearTimeout(this.#translationTimeoutId);\n    }\n    this.#translationTimeoutId = setTimeout(() => {\n      this.#translationTimeoutId = null;\n      this.#translation[0] = this.#translation[1] = 0;\n      this.addCommands({\n        cmd: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(totalX, totalY);\n              editor.translationDone();\n            }\n          }\n        },\n        undo: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(-totalX, -totalY);\n              editor.translationDone();\n            }\n          }\n        },\n        mustExec: false\n      });\n    }, TIME_TO_WAIT);\n    for (const editor of editors) {\n      editor.translateInPage(x, y);\n      editor.translationDone();\n    }\n  }\n  setUpDragSession() {\n    if (!this.hasSelection) {\n      return;\n    }\n    this.disableUserSelect(true);\n    this.#draggingEditors = new Map();\n    for (const editor of this.#selectedEditors) {\n      this.#draggingEditors.set(editor, {\n        savedX: editor.x,\n        savedY: editor.y,\n        savedPageIndex: editor.pageIndex,\n        newX: 0,\n        newY: 0,\n        newPageIndex: -1\n      });\n    }\n  }\n  endDragSession() {\n    if (!this.#draggingEditors) {\n      return false;\n    }\n    this.disableUserSelect(false);\n    const map = this.#draggingEditors;\n    this.#draggingEditors = null;\n    let mustBeAddedInUndoStack = false;\n    for (const [{\n      x,\n      y,\n      pageIndex\n    }, value] of map) {\n      value.newX = x;\n      value.newY = y;\n      value.newPageIndex = pageIndex;\n      mustBeAddedInUndoStack ||= x !== value.savedX || y !== value.savedY || pageIndex !== value.savedPageIndex;\n    }\n    if (!mustBeAddedInUndoStack) {\n      return false;\n    }\n    const move = (editor, x, y, pageIndex) => {\n      if (this.#allEditors.has(editor.id)) {\n        const parent = this.#allLayers.get(pageIndex);\n        if (parent) {\n          editor._setParentAndPosition(parent, x, y);\n        } else {\n          editor.pageIndex = pageIndex;\n          editor.x = x;\n          editor.y = y;\n        }\n      }\n    };\n    this.addCommands({\n      cmd: () => {\n        for (const [editor, {\n          newX,\n          newY,\n          newPageIndex\n        }] of map) {\n          move(editor, newX, newY, newPageIndex);\n        }\n      },\n      undo: () => {\n        for (const [editor, {\n          savedX,\n          savedY,\n          savedPageIndex\n        }] of map) {\n          move(editor, savedX, savedY, savedPageIndex);\n        }\n      },\n      mustExec: true\n    });\n    return true;\n  }\n  dragSelectedEditors(tx, ty) {\n    if (!this.#draggingEditors) {\n      return;\n    }\n    for (const editor of this.#draggingEditors.keys()) {\n      editor.drag(tx, ty);\n    }\n  }\n  rebuild(editor) {\n    if (editor.parent === null) {\n      const parent = this.getLayer(editor.pageIndex);\n      if (parent) {\n        parent.changeParent(editor);\n        parent.addOrRebuild(editor);\n      } else {\n        this.addEditor(editor);\n        this.addToAnnotationStorage(editor);\n        editor.rebuild();\n      }\n    } else {\n      editor.parent.addOrRebuild(editor);\n    }\n  }\n  get isEditorHandlingKeyboard() {\n    return this.getActive()?.shouldGetKeyboardEvents() || this.#selectedEditors.size === 1 && this.firstSelectedEditor.shouldGetKeyboardEvents();\n  }\n  isActive(editor) {\n    return this.#activeEditor === editor;\n  }\n  getActive() {\n    return this.#activeEditor;\n  }\n  getMode() {\n    return this.#mode;\n  }\n  isEditingMode() {\n    return this.#mode !== AnnotationEditorType.NONE;\n  }\n  get imageManager() {\n    return shadow(this, \"imageManager\", new ImageManager());\n  }\n  getSelectionBoxes(textLayer) {\n    if (!textLayer) {\n      return null;\n    }\n    const selection = document.getSelection();\n    for (let i = 0, ii = selection.rangeCount; i < ii; i++) {\n      if (!textLayer.contains(selection.getRangeAt(i).commonAncestorContainer)) {\n        return null;\n      }\n    }\n    const {\n      x: layerX,\n      y: layerY,\n      width: parentWidth,\n      height: parentHeight\n    } = textLayer.getBoundingClientRect();\n    let rotator;\n    switch (textLayer.getAttribute(\"data-main-rotation\")) {\n      case \"90\":\n        rotator = (x, y, w, h) => ({\n          x: (y - layerY) / parentHeight,\n          y: 1 - (x + w - layerX) / parentWidth,\n          width: h / parentHeight,\n          height: w / parentWidth\n        });\n        break;\n      case \"180\":\n        rotator = (x, y, w, h) => ({\n          x: 1 - (x + w - layerX) / parentWidth,\n          y: 1 - (y + h - layerY) / parentHeight,\n          width: w / parentWidth,\n          height: h / parentHeight\n        });\n        break;\n      case \"270\":\n        rotator = (x, y, w, h) => ({\n          x: 1 - (y + h - layerY) / parentHeight,\n          y: (x - layerX) / parentWidth,\n          width: h / parentHeight,\n          height: w / parentWidth\n        });\n        break;\n      default:\n        rotator = (x, y, w, h) => ({\n          x: (x - layerX) / parentWidth,\n          y: (y - layerY) / parentHeight,\n          width: w / parentWidth,\n          height: h / parentHeight\n        });\n        break;\n    }\n    const boxes = [];\n    for (let i = 0, ii = selection.rangeCount; i < ii; i++) {\n      const range = selection.getRangeAt(i);\n      if (range.collapsed) {\n        continue;\n      }\n      for (const {\n        x,\n        y,\n        width,\n        height\n      } of range.getClientRects()) {\n        if (width === 0 || height === 0) {\n          continue;\n        }\n        boxes.push(rotator(x, y, width, height));\n      }\n    }\n    return boxes.length === 0 ? null : boxes;\n  }\n  addChangedExistingAnnotation({\n    annotationElementId,\n    id\n  }) {\n    (this.#changedExistingAnnotations ||= new Map()).set(annotationElementId, id);\n  }\n  removeChangedExistingAnnotation({\n    annotationElementId\n  }) {\n    this.#changedExistingAnnotations?.delete(annotationElementId);\n  }\n  renderAnnotationElement(annotation) {\n    const editorId = this.#changedExistingAnnotations?.get(annotation.data.id);\n    if (!editorId) {\n      return;\n    }\n    const editor = this.#annotationStorage.getRawValue(editorId);\n    if (!editor) {\n      return;\n    }\n    if (this.#mode === AnnotationEditorType.NONE && !editor.hasBeenModified) {\n      return;\n    }\n    editor.renderAnnotationElement(annotation);\n  }\n  setMissingCanvas(annotationId, annotationElementId, canvas) {\n    const editor = this.#missingCanvases?.get(annotationId);\n    if (!editor) {\n      return;\n    }\n    editor.setCanvas(annotationElementId, canvas);\n    this.#missingCanvases.delete(annotationId);\n  }\n  addMissingCanvas(annotationId, editor) {\n    (this.#missingCanvases ||= new Map()).set(annotationId, editor);\n  }\n}\n\n;// ./src/display/editor/alt_text.js\n\nclass AltText {\n  #altText = null;\n  #altTextDecorative = false;\n  #altTextButton = null;\n  #altTextButtonLabel = null;\n  #altTextTooltip = null;\n  #altTextTooltipTimeout = null;\n  #altTextWasFromKeyBoard = false;\n  #badge = null;\n  #editor = null;\n  #guessedText = null;\n  #textWithDisclaimer = null;\n  #useNewAltTextFlow = false;\n  static #l10nNewButton = null;\n  static _l10n = null;\n  constructor(editor) {\n    this.#editor = editor;\n    this.#useNewAltTextFlow = editor._uiManager.useNewAltTextFlow;\n    AltText.#l10nNewButton ||= Object.freeze({\n      added: \"pdfjs-editor-new-alt-text-added-button\",\n      \"added-label\": \"pdfjs-editor-new-alt-text-added-button-label\",\n      missing: \"pdfjs-editor-new-alt-text-missing-button\",\n      \"missing-label\": \"pdfjs-editor-new-alt-text-missing-button-label\",\n      review: \"pdfjs-editor-new-alt-text-to-review-button\",\n      \"review-label\": \"pdfjs-editor-new-alt-text-to-review-button-label\"\n    });\n  }\n  static initialize(l10n) {\n    AltText._l10n ??= l10n;\n  }\n  async render() {\n    const altText = this.#altTextButton = document.createElement(\"button\");\n    altText.className = \"altText\";\n    altText.tabIndex = \"0\";\n    const label = this.#altTextButtonLabel = document.createElement(\"span\");\n    altText.append(label);\n    if (this.#useNewAltTextFlow) {\n      altText.classList.add(\"new\");\n      altText.setAttribute(\"data-l10n-id\", AltText.#l10nNewButton.missing);\n      label.setAttribute(\"data-l10n-id\", AltText.#l10nNewButton[\"missing-label\"]);\n    } else {\n      altText.setAttribute(\"data-l10n-id\", \"pdfjs-editor-alt-text-button\");\n      label.setAttribute(\"data-l10n-id\", \"pdfjs-editor-alt-text-button-label\");\n    }\n    const signal = this.#editor._uiManager._signal;\n    altText.addEventListener(\"contextmenu\", noContextMenu, {\n      signal\n    });\n    altText.addEventListener(\"pointerdown\", event => event.stopPropagation(), {\n      signal\n    });\n    const onClick = event => {\n      event.preventDefault();\n      this.#editor._uiManager.editAltText(this.#editor);\n      if (this.#useNewAltTextFlow) {\n        this.#editor._reportTelemetry({\n          action: \"pdfjs.image.alt_text.image_status_label_clicked\",\n          data: {\n            label: this.#label\n          }\n        });\n      }\n    };\n    altText.addEventListener(\"click\", onClick, {\n      capture: true,\n      signal\n    });\n    altText.addEventListener(\"keydown\", event => {\n      if (event.target === altText && event.key === \"Enter\") {\n        this.#altTextWasFromKeyBoard = true;\n        onClick(event);\n      }\n    }, {\n      signal\n    });\n    await this.#setState();\n    return altText;\n  }\n  get #label() {\n    return this.#altText && \"added\" || this.#altText === null && this.guessedText && \"review\" || \"missing\";\n  }\n  finish() {\n    if (!this.#altTextButton) {\n      return;\n    }\n    this.#altTextButton.focus({\n      focusVisible: this.#altTextWasFromKeyBoard\n    });\n    this.#altTextWasFromKeyBoard = false;\n  }\n  isEmpty() {\n    if (this.#useNewAltTextFlow) {\n      return this.#altText === null;\n    }\n    return !this.#altText && !this.#altTextDecorative;\n  }\n  hasData() {\n    if (this.#useNewAltTextFlow) {\n      return this.#altText !== null || !!this.#guessedText;\n    }\n    return this.isEmpty();\n  }\n  get guessedText() {\n    return this.#guessedText;\n  }\n  async setGuessedText(guessedText) {\n    if (this.#altText !== null) {\n      return;\n    }\n    this.#guessedText = guessedText;\n    this.#textWithDisclaimer = await AltText._l10n.get(\"pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer\", {\n      generatedAltText: guessedText\n    });\n    this.#setState();\n  }\n  toggleAltTextBadge(visibility = false) {\n    if (!this.#useNewAltTextFlow || this.#altText) {\n      this.#badge?.remove();\n      this.#badge = null;\n      return;\n    }\n    if (!this.#badge) {\n      const badge = this.#badge = document.createElement(\"div\");\n      badge.className = \"noAltTextBadge\";\n      this.#editor.div.append(badge);\n    }\n    this.#badge.classList.toggle(\"hidden\", !visibility);\n  }\n  serialize(isForCopying) {\n    let altText = this.#altText;\n    if (!isForCopying && this.#guessedText === altText) {\n      altText = this.#textWithDisclaimer;\n    }\n    return {\n      altText,\n      decorative: this.#altTextDecorative,\n      guessedText: this.#guessedText,\n      textWithDisclaimer: this.#textWithDisclaimer\n    };\n  }\n  get data() {\n    return {\n      altText: this.#altText,\n      decorative: this.#altTextDecorative\n    };\n  }\n  set data({\n    altText,\n    decorative,\n    guessedText,\n    textWithDisclaimer,\n    cancel = false\n  }) {\n    if (guessedText) {\n      this.#guessedText = guessedText;\n      this.#textWithDisclaimer = textWithDisclaimer;\n    }\n    if (this.#altText === altText && this.#altTextDecorative === decorative) {\n      return;\n    }\n    if (!cancel) {\n      this.#altText = altText;\n      this.#altTextDecorative = decorative;\n    }\n    this.#setState();\n  }\n  toggle(enabled = false) {\n    if (!this.#altTextButton) {\n      return;\n    }\n    if (!enabled && this.#altTextTooltipTimeout) {\n      clearTimeout(this.#altTextTooltipTimeout);\n      this.#altTextTooltipTimeout = null;\n    }\n    this.#altTextButton.disabled = !enabled;\n  }\n  shown() {\n    this.#editor._reportTelemetry({\n      action: \"pdfjs.image.alt_text.image_status_label_displayed\",\n      data: {\n        label: this.#label\n      }\n    });\n  }\n  destroy() {\n    this.#altTextButton?.remove();\n    this.#altTextButton = null;\n    this.#altTextButtonLabel = null;\n    this.#altTextTooltip = null;\n    this.#badge?.remove();\n    this.#badge = null;\n  }\n  async #setState() {\n    const button = this.#altTextButton;\n    if (!button) {\n      return;\n    }\n    if (this.#useNewAltTextFlow) {\n      button.classList.toggle(\"done\", !!this.#altText);\n      button.setAttribute(\"data-l10n-id\", AltText.#l10nNewButton[this.#label]);\n      this.#altTextButtonLabel?.setAttribute(\"data-l10n-id\", AltText.#l10nNewButton[`${this.#label}-label`]);\n      if (!this.#altText) {\n        this.#altTextTooltip?.remove();\n        return;\n      }\n    } else {\n      if (!this.#altText && !this.#altTextDecorative) {\n        button.classList.remove(\"done\");\n        this.#altTextTooltip?.remove();\n        return;\n      }\n      button.classList.add(\"done\");\n      button.setAttribute(\"data-l10n-id\", \"pdfjs-editor-alt-text-edit-button\");\n    }\n    let tooltip = this.#altTextTooltip;\n    if (!tooltip) {\n      this.#altTextTooltip = tooltip = document.createElement(\"span\");\n      tooltip.className = \"tooltip\";\n      tooltip.setAttribute(\"role\", \"tooltip\");\n      tooltip.id = `alt-text-tooltip-${this.#editor.id}`;\n      const DELAY_TO_SHOW_TOOLTIP = 100;\n      const signal = this.#editor._uiManager._signal;\n      signal.addEventListener(\"abort\", () => {\n        clearTimeout(this.#altTextTooltipTimeout);\n        this.#altTextTooltipTimeout = null;\n      }, {\n        once: true\n      });\n      button.addEventListener(\"mouseenter\", () => {\n        this.#altTextTooltipTimeout = setTimeout(() => {\n          this.#altTextTooltipTimeout = null;\n          this.#altTextTooltip.classList.add(\"show\");\n          this.#editor._reportTelemetry({\n            action: \"alt_text_tooltip\"\n          });\n        }, DELAY_TO_SHOW_TOOLTIP);\n      }, {\n        signal\n      });\n      button.addEventListener(\"mouseleave\", () => {\n        if (this.#altTextTooltipTimeout) {\n          clearTimeout(this.#altTextTooltipTimeout);\n          this.#altTextTooltipTimeout = null;\n        }\n        this.#altTextTooltip?.classList.remove(\"show\");\n      }, {\n        signal\n      });\n    }\n    if (this.#altTextDecorative) {\n      tooltip.setAttribute(\"data-l10n-id\", \"pdfjs-editor-alt-text-decorative-tooltip\");\n    } else {\n      tooltip.removeAttribute(\"data-l10n-id\");\n      tooltip.textContent = this.#altText;\n    }\n    if (!tooltip.parentNode) {\n      button.append(tooltip);\n    }\n    const element = this.#editor.getElementForAltText();\n    element?.setAttribute(\"aria-describedby\", tooltip.id);\n  }\n}\n\n;// ./src/display/editor/comment.js\n\nclass Comment {\n  #commentStandaloneButton = null;\n  #commentToolbarButton = null;\n  #commentWasFromKeyBoard = false;\n  #editor = null;\n  #initialText = null;\n  #richText = null;\n  #text = null;\n  #date = null;\n  #deleted = false;\n  #popupPosition = null;\n  constructor(editor) {\n    this.#editor = editor;\n  }\n  renderForToolbar() {\n    const button = this.#commentToolbarButton = document.createElement(\"button\");\n    button.className = \"comment\";\n    return this.#render(button, false);\n  }\n  renderForStandalone() {\n    const button = this.#commentStandaloneButton = document.createElement(\"button\");\n    button.className = \"annotationCommentButton\";\n    const position = this.#editor.commentButtonPosition;\n    if (position) {\n      const {\n        style\n      } = button;\n      style.insetInlineEnd = `calc(${100 * (this.#editor._uiManager.direction === \"ltr\" ? 1 - position[0] : position[0])}% - var(--comment-button-dim))`;\n      style.top = `calc(${100 * position[1]}% - var(--comment-button-dim))`;\n      const color = this.#editor.commentButtonColor;\n      if (color) {\n        style.backgroundColor = color;\n      }\n    }\n    return this.#render(button, true);\n  }\n  focusButton() {\n    setTimeout(() => {\n      (this.#commentStandaloneButton ?? this.#commentToolbarButton)?.focus();\n    }, 0);\n  }\n  onUpdatedColor() {\n    if (!this.#commentStandaloneButton) {\n      return;\n    }\n    const color = this.#editor.commentButtonColor;\n    if (color) {\n      this.#commentStandaloneButton.style.backgroundColor = color;\n    }\n    this.#editor._uiManager.updatePopupColor(this.#editor);\n  }\n  get commentButtonWidth() {\n    return (this.#commentStandaloneButton?.getBoundingClientRect().width ?? 0) / this.#editor.parent.boundingClientRect.width;\n  }\n  get commentPopupPositionInLayer() {\n    if (this.#popupPosition) {\n      return this.#popupPosition;\n    }\n    if (!this.#commentStandaloneButton) {\n      return null;\n    }\n    const {\n      x,\n      y,\n      height\n    } = this.#commentStandaloneButton.getBoundingClientRect();\n    const {\n      x: parentX,\n      y: parentY,\n      width: parentWidth,\n      height: parentHeight\n    } = this.#editor.parent.boundingClientRect;\n    return [(x - parentX) / parentWidth, (y + height - parentY) / parentHeight];\n  }\n  set commentPopupPositionInLayer(pos) {\n    this.#popupPosition = pos;\n  }\n  hasDefaultPopupPosition() {\n    return this.#popupPosition === null;\n  }\n  removeStandaloneCommentButton() {\n    this.#commentStandaloneButton?.remove();\n    this.#commentStandaloneButton = null;\n  }\n  removeToolbarCommentButton() {\n    this.#commentToolbarButton?.remove();\n    this.#commentToolbarButton = null;\n  }\n  setCommentButtonStates({\n    selected,\n    hasPopup\n  }) {\n    if (!this.#commentStandaloneButton) {\n      return;\n    }\n    this.#commentStandaloneButton.classList.toggle(\"selected\", selected);\n    this.#commentStandaloneButton.ariaExpanded = hasPopup;\n  }\n  #render(comment, isStandalone) {\n    if (!this.#editor._uiManager.hasCommentManager()) {\n      return null;\n    }\n    comment.tabIndex = \"0\";\n    comment.ariaHasPopup = \"dialog\";\n    if (isStandalone) {\n      comment.ariaControls = \"commentPopup\";\n      comment.setAttribute(\"data-l10n-id\", \"pdfjs-show-comment-button\");\n    } else {\n      comment.ariaControlsElements = [this.#editor._uiManager.getCommentDialogElement()];\n      comment.setAttribute(\"data-l10n-id\", \"pdfjs-editor-edit-comment-button\");\n    }\n    const signal = this.#editor._uiManager._signal;\n    if (!(signal instanceof AbortSignal) || signal.aborted) {\n      return comment;\n    }\n    comment.addEventListener(\"contextmenu\", noContextMenu, {\n      signal\n    });\n    if (isStandalone) {\n      comment.addEventListener(\"focusin\", e => {\n        this.#editor._focusEventsAllowed = false;\n        stopEvent(e);\n      }, {\n        capture: true,\n        signal\n      });\n      comment.addEventListener(\"focusout\", e => {\n        this.#editor._focusEventsAllowed = true;\n        stopEvent(e);\n      }, {\n        capture: true,\n        signal\n      });\n    }\n    comment.addEventListener(\"pointerdown\", event => event.stopPropagation(), {\n      signal\n    });\n    const onClick = event => {\n      event.preventDefault();\n      if (comment === this.#commentToolbarButton) {\n        this.edit();\n      } else {\n        this.#editor.toggleComment(true);\n      }\n    };\n    comment.addEventListener(\"click\", onClick, {\n      capture: true,\n      signal\n    });\n    comment.addEventListener(\"keydown\", event => {\n      if (event.target === comment && event.key === \"Enter\") {\n        this.#commentWasFromKeyBoard = true;\n        onClick(event);\n      }\n    }, {\n      signal\n    });\n    comment.addEventListener(\"pointerenter\", () => {\n      this.#editor.toggleComment(false, true);\n    }, {\n      signal\n    });\n    comment.addEventListener(\"pointerleave\", () => {\n      this.#editor.toggleComment(false, false);\n    }, {\n      signal\n    });\n    return comment;\n  }\n  edit(options) {\n    const position = this.commentPopupPositionInLayer;\n    let posX, posY;\n    if (position) {\n      [posX, posY] = position;\n    } else {\n      [posX, posY] = this.#editor.commentButtonPosition;\n      const {\n        width,\n        height,\n        x,\n        y\n      } = this.#editor;\n      posX = x + posX * width;\n      posY = y + posY * height;\n    }\n    const parentDimensions = this.#editor.parent.boundingClientRect;\n    const {\n      x: parentX,\n      y: parentY,\n      width: parentWidth,\n      height: parentHeight\n    } = parentDimensions;\n    this.#editor._uiManager.editComment(this.#editor, parentX + posX * parentWidth, parentY + posY * parentHeight, {\n      ...options,\n      parentDimensions\n    });\n  }\n  finish() {\n    if (!this.#commentToolbarButton) {\n      return;\n    }\n    this.#commentToolbarButton.focus({\n      focusVisible: this.#commentWasFromKeyBoard\n    });\n    this.#commentWasFromKeyBoard = false;\n  }\n  isDeleted() {\n    return this.#deleted || this.#text === \"\";\n  }\n  isEmpty() {\n    return this.#text === null;\n  }\n  hasBeenEdited() {\n    return this.isDeleted() || this.#text !== this.#initialText;\n  }\n  serialize() {\n    return this.data;\n  }\n  get data() {\n    return {\n      text: this.#text,\n      richText: this.#richText,\n      date: this.#date,\n      deleted: this.isDeleted()\n    };\n  }\n  set data(text) {\n    if (text !== this.#text) {\n      this.#richText = null;\n    }\n    if (text === null) {\n      this.#text = \"\";\n      this.#deleted = true;\n      return;\n    }\n    this.#text = text;\n    this.#date = new Date();\n    this.#deleted = false;\n  }\n  setInitialText(text, richText = null) {\n    this.#initialText = text;\n    this.data = text;\n    this.#date = null;\n    this.#richText = richText;\n  }\n  shown() {}\n  destroy() {\n    this.#commentToolbarButton?.remove();\n    this.#commentToolbarButton = null;\n    this.#commentStandaloneButton?.remove();\n    this.#commentStandaloneButton = null;\n    this.#text = \"\";\n    this.#richText = null;\n    this.#date = null;\n    this.#editor = null;\n    this.#commentWasFromKeyBoard = false;\n    this.#deleted = false;\n  }\n}\n\n;// ./src/display/touch_manager.js\n\nclass TouchManager {\n  #container;\n  #isPinching = false;\n  #isPinchingStopped = null;\n  #isPinchingDisabled;\n  #onPinchStart;\n  #onPinching;\n  #onPinchEnd;\n  #pointerDownAC = null;\n  #signal;\n  #touchInfo = null;\n  #touchManagerAC;\n  #touchMoveAC = null;\n  constructor({\n    container,\n    isPinchingDisabled = null,\n    isPinchingStopped = null,\n    onPinchStart = null,\n    onPinching = null,\n    onPinchEnd = null,\n    signal\n  }) {\n    this.#container = container;\n    this.#isPinchingStopped = isPinchingStopped;\n    this.#isPinchingDisabled = isPinchingDisabled;\n    this.#onPinchStart = onPinchStart;\n    this.#onPinching = onPinching;\n    this.#onPinchEnd = onPinchEnd;\n    this.#touchManagerAC = new AbortController();\n    this.#signal = AbortSignal.any([signal, this.#touchManagerAC.signal]);\n    container.addEventListener(\"touchstart\", this.#onTouchStart.bind(this), {\n      passive: false,\n      signal: this.#signal\n    });\n  }\n  get MIN_TOUCH_DISTANCE_TO_PINCH() {\n    return 35 / OutputScale.pixelRatio;\n  }\n  #onTouchStart(evt) {\n    if (this.#isPinchingDisabled?.()) {\n      return;\n    }\n    if (evt.touches.length === 1) {\n      if (this.#pointerDownAC) {\n        return;\n      }\n      const pointerDownAC = this.#pointerDownAC = new AbortController();\n      const signal = AbortSignal.any([this.#signal, pointerDownAC.signal]);\n      const container = this.#container;\n      const opts = {\n        capture: true,\n        signal,\n        passive: false\n      };\n      const cancelPointerDown = e => {\n        if (e.pointerType === \"touch\") {\n          this.#pointerDownAC?.abort();\n          this.#pointerDownAC = null;\n        }\n      };\n      container.addEventListener(\"pointerdown\", e => {\n        if (e.pointerType === \"touch\") {\n          stopEvent(e);\n          cancelPointerDown(e);\n        }\n      }, opts);\n      container.addEventListener(\"pointerup\", cancelPointerDown, opts);\n      container.addEventListener(\"pointercancel\", cancelPointerDown, opts);\n      return;\n    }\n    if (!this.#touchMoveAC) {\n      this.#touchMoveAC = new AbortController();\n      const signal = AbortSignal.any([this.#signal, this.#touchMoveAC.signal]);\n      const container = this.#container;\n      const opt = {\n        signal,\n        capture: false,\n        passive: false\n      };\n      container.addEventListener(\"touchmove\", this.#onTouchMove.bind(this), opt);\n      const onTouchEnd = this.#onTouchEnd.bind(this);\n      container.addEventListener(\"touchend\", onTouchEnd, opt);\n      container.addEventListener(\"touchcancel\", onTouchEnd, opt);\n      opt.capture = true;\n      container.addEventListener(\"pointerdown\", stopEvent, opt);\n      container.addEventListener(\"pointermove\", stopEvent, opt);\n      container.addEventListener(\"pointercancel\", stopEvent, opt);\n      container.addEventListener(\"pointerup\", stopEvent, opt);\n      this.#onPinchStart?.();\n    }\n    stopEvent(evt);\n    if (evt.touches.length !== 2 || this.#isPinchingStopped?.()) {\n      this.#touchInfo = null;\n      return;\n    }\n    let [touch0, touch1] = evt.touches;\n    if (touch0.identifier > touch1.identifier) {\n      [touch0, touch1] = [touch1, touch0];\n    }\n    this.#touchInfo = {\n      touch0X: touch0.screenX,\n      touch0Y: touch0.screenY,\n      touch1X: touch1.screenX,\n      touch1Y: touch1.screenY\n    };\n  }\n  #onTouchMove(evt) {\n    if (!this.#touchInfo || evt.touches.length !== 2) {\n      return;\n    }\n    stopEvent(evt);\n    let [touch0, touch1] = evt.touches;\n    if (touch0.identifier > touch1.identifier) {\n      [touch0, touch1] = [touch1, touch0];\n    }\n    const {\n      screenX: screen0X,\n      screenY: screen0Y\n    } = touch0;\n    const {\n      screenX: screen1X,\n      screenY: screen1Y\n    } = touch1;\n    const touchInfo = this.#touchInfo;\n    const {\n      touch0X: pTouch0X,\n      touch0Y: pTouch0Y,\n      touch1X: pTouch1X,\n      touch1Y: pTouch1Y\n    } = touchInfo;\n    const prevGapX = pTouch1X - pTouch0X;\n    const prevGapY = pTouch1Y - pTouch0Y;\n    const currGapX = screen1X - screen0X;\n    const currGapY = screen1Y - screen0Y;\n    const distance = Math.hypot(currGapX, currGapY) || 1;\n    const pDistance = Math.hypot(prevGapX, prevGapY) || 1;\n    if (!this.#isPinching && Math.abs(pDistance - distance) <= TouchManager.MIN_TOUCH_DISTANCE_TO_PINCH) {\n      return;\n    }\n    touchInfo.touch0X = screen0X;\n    touchInfo.touch0Y = screen0Y;\n    touchInfo.touch1X = screen1X;\n    touchInfo.touch1Y = screen1Y;\n    if (!this.#isPinching) {\n      this.#isPinching = true;\n      return;\n    }\n    const origin = [(screen0X + screen1X) / 2, (screen0Y + screen1Y) / 2];\n    this.#onPinching?.(origin, pDistance, distance);\n  }\n  #onTouchEnd(evt) {\n    if (evt.touches.length >= 2) {\n      return;\n    }\n    if (this.#touchMoveAC) {\n      this.#touchMoveAC.abort();\n      this.#touchMoveAC = null;\n      this.#onPinchEnd?.();\n    }\n    if (!this.#touchInfo) {\n      return;\n    }\n    stopEvent(evt);\n    this.#touchInfo = null;\n    this.#isPinching = false;\n  }\n  destroy() {\n    this.#touchManagerAC?.abort();\n    this.#touchManagerAC = null;\n    this.#pointerDownAC?.abort();\n    this.#pointerDownAC = null;\n  }\n}\n\n;// ./src/display/editor/editor.js\n\n\n\n\n\n\n\nclass AnnotationEditor {\n  #accessibilityData = null;\n  #allResizerDivs = null;\n  #altText = null;\n  #comment = null;\n  #commentStandaloneButton = null;\n  #disabled = false;\n  #dragPointerId = null;\n  #dragPointerType = \"\";\n  #resizersDiv = null;\n  #lastPointerCoords = null;\n  #savedDimensions = null;\n  #fakeAnnotation = null;\n  #focusAC = null;\n  #focusedResizerName = \"\";\n  #hasBeenClicked = false;\n  #initialRect = null;\n  #isEditing = false;\n  #isInEditMode = false;\n  #isResizerEnabledForKeyboard = false;\n  #moveInDOMTimeout = null;\n  #prevDragX = 0;\n  #prevDragY = 0;\n  #telemetryTimeouts = null;\n  #touchManager = null;\n  isSelected = false;\n  _isCopy = false;\n  _editToolbar = null;\n  _initialOptions = Object.create(null);\n  _initialData = null;\n  _isVisible = true;\n  _uiManager = null;\n  _focusEventsAllowed = true;\n  static _l10n = null;\n  static _l10nResizer = null;\n  #isDraggable = false;\n  #zIndex = AnnotationEditor._zIndex++;\n  static _borderLineWidth = -1;\n  static _colorManager = new ColorManager();\n  static _zIndex = 1;\n  static _telemetryTimeout = 1000;\n  static get _resizerKeyboardManager() {\n    const resize = AnnotationEditor.prototype._resizeWithKeyboard;\n    const small = AnnotationEditorUIManager.TRANSLATE_SMALL;\n    const big = AnnotationEditorUIManager.TRANSLATE_BIG;\n    return shadow(this, \"_resizerKeyboardManager\", new KeyboardManager([[[\"ArrowLeft\", \"mac+ArrowLeft\"], resize, {\n      args: [-small, 0]\n    }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], resize, {\n      args: [-big, 0]\n    }], [[\"ArrowRight\", \"mac+ArrowRight\"], resize, {\n      args: [small, 0]\n    }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], resize, {\n      args: [big, 0]\n    }], [[\"ArrowUp\", \"mac+ArrowUp\"], resize, {\n      args: [0, -small]\n    }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], resize, {\n      args: [0, -big]\n    }], [[\"ArrowDown\", \"mac+ArrowDown\"], resize, {\n      args: [0, small]\n    }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], resize, {\n      args: [0, big]\n    }], [[\"Escape\", \"mac+Escape\"], AnnotationEditor.prototype._stopResizingWithKeyboard]]));\n  }\n  constructor(parameters) {\n    this.parent = parameters.parent;\n    this.id = parameters.id;\n    this.width = this.height = null;\n    this.pageIndex = parameters.parent.pageIndex;\n    this.name = parameters.name;\n    this.div = null;\n    this._uiManager = parameters.uiManager;\n    this.annotationElementId = null;\n    this._willKeepAspectRatio = false;\n    this._initialOptions.isCentered = parameters.isCentered;\n    this._structTreeParentId = null;\n    this.annotationElementId = parameters.annotationElementId || null;\n    this.creationDate = parameters.creationDate || new Date();\n    this.modificationDate = parameters.modificationDate || null;\n    const {\n      rotation,\n      rawDims: {\n        pageWidth,\n        pageHeight,\n        pageX,\n        pageY\n      }\n    } = this.parent.viewport;\n    this.rotation = rotation;\n    this.pageRotation = (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n    this.pageDimensions = [pageWidth, pageHeight];\n    this.pageTranslation = [pageX, pageY];\n    const [width, height] = this.parentDimensions;\n    this.x = parameters.x / width;\n    this.y = parameters.y / height;\n    this.isAttachedToDOM = false;\n    this.deleted = false;\n  }\n  get editorType() {\n    return Object.getPrototypeOf(this).constructor._type;\n  }\n  get mode() {\n    return Object.getPrototypeOf(this).constructor._editorType;\n  }\n  static get isDrawer() {\n    return false;\n  }\n  static get _defaultLineColor() {\n    return shadow(this, \"_defaultLineColor\", this._colorManager.getHexCode(\"CanvasText\"));\n  }\n  static deleteAnnotationElement(editor) {\n    const fakeEditor = new FakeEditor({\n      id: editor.parent.getNextId(),\n      parent: editor.parent,\n      uiManager: editor._uiManager\n    });\n    fakeEditor.annotationElementId = editor.annotationElementId;\n    fakeEditor.deleted = true;\n    fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n  }\n  static initialize(l10n, _uiManager) {\n    AnnotationEditor._l10n ??= l10n;\n    AnnotationEditor._l10nResizer ||= Object.freeze({\n      topLeft: \"pdfjs-editor-resizer-top-left\",\n      topMiddle: \"pdfjs-editor-resizer-top-middle\",\n      topRight: \"pdfjs-editor-resizer-top-right\",\n      middleRight: \"pdfjs-editor-resizer-middle-right\",\n      bottomRight: \"pdfjs-editor-resizer-bottom-right\",\n      bottomMiddle: \"pdfjs-editor-resizer-bottom-middle\",\n      bottomLeft: \"pdfjs-editor-resizer-bottom-left\",\n      middleLeft: \"pdfjs-editor-resizer-middle-left\"\n    });\n    if (AnnotationEditor._borderLineWidth !== -1) {\n      return;\n    }\n    const style = getComputedStyle(document.documentElement);\n    AnnotationEditor._borderLineWidth = parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n  }\n  static updateDefaultParams(_type, _value) {}\n  static get defaultPropertiesToUpdate() {\n    return [];\n  }\n  static isHandlingMimeForPasting(mime) {\n    return false;\n  }\n  static paste(item, parent) {\n    unreachable(\"Not implemented\");\n  }\n  get propertiesToUpdate() {\n    return [];\n  }\n  get _isDraggable() {\n    return this.#isDraggable;\n  }\n  set _isDraggable(value) {\n    this.#isDraggable = value;\n    this.div?.classList.toggle(\"draggable\", value);\n  }\n  get uid() {\n    return this.annotationElementId || this.id;\n  }\n  get isEnterHandled() {\n    return true;\n  }\n  center() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    switch (this.parentRotation) {\n      case 90:\n        this.x -= this.height * pageHeight / (pageWidth * 2);\n        this.y += this.width * pageWidth / (pageHeight * 2);\n        break;\n      case 180:\n        this.x += this.width / 2;\n        this.y += this.height / 2;\n        break;\n      case 270:\n        this.x += this.height * pageHeight / (pageWidth * 2);\n        this.y -= this.width * pageWidth / (pageHeight * 2);\n        break;\n      default:\n        this.x -= this.width / 2;\n        this.y -= this.height / 2;\n        break;\n    }\n    this.fixAndSetPosition();\n  }\n  addCommands(params) {\n    this._uiManager.addCommands(params);\n  }\n  get currentLayer() {\n    return this._uiManager.currentLayer;\n  }\n  setInBackground() {\n    this.div.style.zIndex = 0;\n  }\n  setInForeground() {\n    this.div.style.zIndex = this.#zIndex;\n  }\n  setParent(parent) {\n    if (parent !== null) {\n      this.pageIndex = parent.pageIndex;\n      this.pageDimensions = parent.pageDimensions;\n    } else {\n      this.#stopResizing();\n      this.#fakeAnnotation?.remove();\n      this.#fakeAnnotation = null;\n    }\n    this.parent = parent;\n  }\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    if (!this.#hasBeenClicked) {\n      this.parent.setSelected(this);\n    } else {\n      this.#hasBeenClicked = false;\n    }\n  }\n  focusout(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    if (!this.isAttachedToDOM) {\n      return;\n    }\n    const target = event.relatedTarget;\n    if (target?.closest(`#${this.id}`)) {\n      return;\n    }\n    event.preventDefault();\n    if (!this.parent?.isMultipleSelection) {\n      this.commitOrRemove();\n    }\n  }\n  commitOrRemove() {\n    if (this.isEmpty()) {\n      this.remove();\n    } else {\n      this.commit();\n    }\n  }\n  commit() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n    this.addToAnnotationStorage();\n  }\n  addToAnnotationStorage() {\n    this._uiManager.addToAnnotationStorage(this);\n  }\n  setAt(x, y, tx, ty) {\n    const [width, height] = this.parentDimensions;\n    [tx, ty] = this.screenToPageTranslation(tx, ty);\n    this.x = (x + tx) / width;\n    this.y = (y + ty) / height;\n    this.fixAndSetPosition();\n  }\n  _moveAfterPaste(baseX, baseY) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n    this._onTranslated();\n  }\n  #translate([width, height], x, y) {\n    [x, y] = this.screenToPageTranslation(x, y);\n    this.x += x / width;\n    this.y += y / height;\n    this._onTranslating(this.x, this.y);\n    this.fixAndSetPosition();\n  }\n  translate(x, y) {\n    this.#translate(this.parentDimensions, x, y);\n  }\n  translateInPage(x, y) {\n    this.#initialRect ||= [this.x, this.y, this.width, this.height];\n    this.#translate(this.pageDimensions, x, y);\n    this.div.scrollIntoView({\n      block: \"nearest\"\n    });\n  }\n  translationDone() {\n    this._onTranslated(this.x, this.y);\n  }\n  drag(tx, ty) {\n    this.#initialRect ||= [this.x, this.y, this.width, this.height];\n    const {\n      div,\n      parentDimensions: [parentWidth, parentHeight]\n    } = this;\n    this.x += tx / parentWidth;\n    this.y += ty / parentHeight;\n    if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n      const {\n        x,\n        y\n      } = this.div.getBoundingClientRect();\n      if (this.parent.findNewParent(this, x, y)) {\n        this.x -= Math.floor(this.x);\n        this.y -= Math.floor(this.y);\n      }\n    }\n    let {\n      x,\n      y\n    } = this;\n    const [bx, by] = this.getBaseTranslation();\n    x += bx;\n    y += by;\n    const {\n      style\n    } = div;\n    style.left = `${(100 * x).toFixed(2)}%`;\n    style.top = `${(100 * y).toFixed(2)}%`;\n    this._onTranslating(x, y);\n    div.scrollIntoView({\n      block: \"nearest\"\n    });\n  }\n  _onTranslating(x, y) {}\n  _onTranslated(x, y) {}\n  get _hasBeenMoved() {\n    return !!this.#initialRect && (this.#initialRect[0] !== this.x || this.#initialRect[1] !== this.y);\n  }\n  get _hasBeenResized() {\n    return !!this.#initialRect && (this.#initialRect[2] !== this.width || this.#initialRect[3] !== this.height);\n  }\n  getBaseTranslation() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const {\n      _borderLineWidth\n    } = AnnotationEditor;\n    const x = _borderLineWidth / parentWidth;\n    const y = _borderLineWidth / parentHeight;\n    switch (this.rotation) {\n      case 90:\n        return [-x, y];\n      case 180:\n        return [x, y];\n      case 270:\n        return [x, -y];\n      default:\n        return [-x, -y];\n    }\n  }\n  get _mustFixPosition() {\n    return true;\n  }\n  fixAndSetPosition(rotation = this.rotation) {\n    const {\n      div: {\n        style\n      },\n      pageDimensions: [pageWidth, pageHeight]\n    } = this;\n    let {\n      x,\n      y,\n      width,\n      height\n    } = this;\n    width *= pageWidth;\n    height *= pageHeight;\n    x *= pageWidth;\n    y *= pageHeight;\n    if (this._mustFixPosition) {\n      switch (rotation) {\n        case 0:\n          x = MathClamp(x, 0, pageWidth - width);\n          y = MathClamp(y, 0, pageHeight - height);\n          break;\n        case 90:\n          x = MathClamp(x, 0, pageWidth - height);\n          y = MathClamp(y, width, pageHeight);\n          break;\n        case 180:\n          x = MathClamp(x, width, pageWidth);\n          y = MathClamp(y, height, pageHeight);\n          break;\n        case 270:\n          x = MathClamp(x, height, pageWidth);\n          y = MathClamp(y, 0, pageHeight - width);\n          break;\n      }\n    }\n    this.x = x /= pageWidth;\n    this.y = y /= pageHeight;\n    const [bx, by] = this.getBaseTranslation();\n    x += bx;\n    y += by;\n    style.left = `${(100 * x).toFixed(2)}%`;\n    style.top = `${(100 * y).toFixed(2)}%`;\n    this.moveInDOM();\n  }\n  static #rotatePoint(x, y, angle) {\n    switch (angle) {\n      case 90:\n        return [y, -x];\n      case 180:\n        return [-x, -y];\n      case 270:\n        return [-y, x];\n      default:\n        return [x, y];\n    }\n  }\n  screenToPageTranslation(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, this.parentRotation);\n  }\n  pageTranslationToScreen(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, 360 - this.parentRotation);\n  }\n  #getRotationMatrix(rotation) {\n    switch (rotation) {\n      case 90:\n        {\n          const [pageWidth, pageHeight] = this.pageDimensions;\n          return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n        }\n      case 180:\n        return [-1, 0, 0, -1];\n      case 270:\n        {\n          const [pageWidth, pageHeight] = this.pageDimensions;\n          return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n        }\n      default:\n        return [1, 0, 0, 1];\n    }\n  }\n  get parentScale() {\n    return this._uiManager.viewParameters.realScale;\n  }\n  get parentRotation() {\n    return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n  }\n  get parentDimensions() {\n    const {\n      parentScale,\n      pageDimensions: [pageWidth, pageHeight]\n    } = this;\n    return [pageWidth * parentScale, pageHeight * parentScale];\n  }\n  setDims() {\n    const {\n      div: {\n        style\n      },\n      width,\n      height\n    } = this;\n    style.width = `${(100 * width).toFixed(2)}%`;\n    style.height = `${(100 * height).toFixed(2)}%`;\n  }\n  getInitialTranslation() {\n    return [0, 0];\n  }\n  #createResizers() {\n    if (this.#resizersDiv) {\n      return;\n    }\n    this.#resizersDiv = document.createElement(\"div\");\n    this.#resizersDiv.classList.add(\"resizers\");\n    const classes = this._willKeepAspectRatio ? [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"] : [\"topLeft\", \"topMiddle\", \"topRight\", \"middleRight\", \"bottomRight\", \"bottomMiddle\", \"bottomLeft\", \"middleLeft\"];\n    const signal = this._uiManager._signal;\n    for (const name of classes) {\n      const div = document.createElement(\"div\");\n      this.#resizersDiv.append(div);\n      div.classList.add(\"resizer\", name);\n      div.setAttribute(\"data-resizer-name\", name);\n      div.addEventListener(\"pointerdown\", this.#resizerPointerdown.bind(this, name), {\n        signal\n      });\n      div.addEventListener(\"contextmenu\", noContextMenu, {\n        signal\n      });\n      div.tabIndex = -1;\n    }\n    this.div.prepend(this.#resizersDiv);\n  }\n  #resizerPointerdown(name, event) {\n    event.preventDefault();\n    const {\n      isMac\n    } = util_FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      return;\n    }\n    this.#altText?.toggle(false);\n    const savedDraggable = this._isDraggable;\n    this._isDraggable = false;\n    this.#lastPointerCoords = [event.screenX, event.screenY];\n    const ac = new AbortController();\n    const signal = this._uiManager.combinedSignal(ac);\n    this.parent.togglePointerEvents(false);\n    window.addEventListener(\"pointermove\", this.#resizerPointermove.bind(this, name), {\n      passive: true,\n      capture: true,\n      signal\n    });\n    window.addEventListener(\"touchmove\", stopEvent, {\n      passive: false,\n      signal\n    });\n    window.addEventListener(\"contextmenu\", noContextMenu, {\n      signal\n    });\n    this.#savedDimensions = {\n      savedX: this.x,\n      savedY: this.y,\n      savedWidth: this.width,\n      savedHeight: this.height\n    };\n    const savedParentCursor = this.parent.div.style.cursor;\n    const savedCursor = this.div.style.cursor;\n    this.div.style.cursor = this.parent.div.style.cursor = window.getComputedStyle(event.target).cursor;\n    const pointerUpCallback = () => {\n      ac.abort();\n      this.parent.togglePointerEvents(true);\n      this.#altText?.toggle(true);\n      this._isDraggable = savedDraggable;\n      this.parent.div.style.cursor = savedParentCursor;\n      this.div.style.cursor = savedCursor;\n      this.#addResizeToUndoStack();\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback, {\n      signal\n    });\n    window.addEventListener(\"blur\", pointerUpCallback, {\n      signal\n    });\n  }\n  #resize(x, y, width, height) {\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n    this.setDims();\n    this.fixAndSetPosition();\n    this._onResized();\n  }\n  _onResized() {}\n  #addResizeToUndoStack() {\n    if (!this.#savedDimensions) {\n      return;\n    }\n    const {\n      savedX,\n      savedY,\n      savedWidth,\n      savedHeight\n    } = this.#savedDimensions;\n    this.#savedDimensions = null;\n    const newX = this.x;\n    const newY = this.y;\n    const newWidth = this.width;\n    const newHeight = this.height;\n    if (newX === savedX && newY === savedY && newWidth === savedWidth && newHeight === savedHeight) {\n      return;\n    }\n    this.addCommands({\n      cmd: this.#resize.bind(this, newX, newY, newWidth, newHeight),\n      undo: this.#resize.bind(this, savedX, savedY, savedWidth, savedHeight),\n      mustExec: true\n    });\n  }\n  static _round(x) {\n    return Math.round(x * 10000) / 10000;\n  }\n  #resizerPointermove(name, event) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n    const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n    const rotationMatrix = this.#getRotationMatrix(this.rotation);\n    const transf = (x, y) => [rotationMatrix[0] * x + rotationMatrix[2] * y, rotationMatrix[1] * x + rotationMatrix[3] * y];\n    const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n    const invTransf = (x, y) => [invRotationMatrix[0] * x + invRotationMatrix[2] * y, invRotationMatrix[1] * x + invRotationMatrix[3] * y];\n    let getPoint;\n    let getOpposite;\n    let isDiagonal = false;\n    let isHorizontal = false;\n    switch (name) {\n      case \"topLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, 0];\n        getOpposite = (w, h) => [w, h];\n        break;\n      case \"topMiddle\":\n        getPoint = (w, h) => [w / 2, 0];\n        getOpposite = (w, h) => [w / 2, h];\n        break;\n      case \"topRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, 0];\n        getOpposite = (w, h) => [0, h];\n        break;\n      case \"middleRight\":\n        isHorizontal = true;\n        getPoint = (w, h) => [w, h / 2];\n        getOpposite = (w, h) => [0, h / 2];\n        break;\n      case \"bottomRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, h];\n        getOpposite = (w, h) => [0, 0];\n        break;\n      case \"bottomMiddle\":\n        getPoint = (w, h) => [w / 2, h];\n        getOpposite = (w, h) => [w / 2, 0];\n        break;\n      case \"bottomLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, h];\n        getOpposite = (w, h) => [w, 0];\n        break;\n      case \"middleLeft\":\n        isHorizontal = true;\n        getPoint = (w, h) => [0, h / 2];\n        getOpposite = (w, h) => [w, h / 2];\n        break;\n    }\n    const point = getPoint(savedWidth, savedHeight);\n    const oppositePoint = getOpposite(savedWidth, savedHeight);\n    let transfOppositePoint = transf(...oppositePoint);\n    const oppositeX = AnnotationEditor._round(savedX + transfOppositePoint[0]);\n    const oppositeY = AnnotationEditor._round(savedY + transfOppositePoint[1]);\n    let ratioX = 1;\n    let ratioY = 1;\n    let deltaX, deltaY;\n    if (!event.fromKeyboard) {\n      const {\n        screenX,\n        screenY\n      } = event;\n      const [lastScreenX, lastScreenY] = this.#lastPointerCoords;\n      [deltaX, deltaY] = this.screenToPageTranslation(screenX - lastScreenX, screenY - lastScreenY);\n      this.#lastPointerCoords[0] = screenX;\n      this.#lastPointerCoords[1] = screenY;\n    } else {\n      ({\n        deltaX,\n        deltaY\n      } = event);\n    }\n    [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n    if (isDiagonal) {\n      const oldDiag = Math.hypot(savedWidth, savedHeight);\n      ratioX = ratioY = Math.max(Math.min(Math.hypot(oppositePoint[0] - point[0] - deltaX, oppositePoint[1] - point[1] - deltaY) / oldDiag, 1 / savedWidth, 1 / savedHeight), minWidth / savedWidth, minHeight / savedHeight);\n    } else if (isHorizontal) {\n      ratioX = MathClamp(Math.abs(oppositePoint[0] - point[0] - deltaX), minWidth, 1) / savedWidth;\n    } else {\n      ratioY = MathClamp(Math.abs(oppositePoint[1] - point[1] - deltaY), minHeight, 1) / savedHeight;\n    }\n    const newWidth = AnnotationEditor._round(savedWidth * ratioX);\n    const newHeight = AnnotationEditor._round(savedHeight * ratioY);\n    transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n    const newX = oppositeX - transfOppositePoint[0];\n    const newY = oppositeY - transfOppositePoint[1];\n    this.#initialRect ||= [this.x, this.y, this.width, this.height];\n    this.width = newWidth;\n    this.height = newHeight;\n    this.x = newX;\n    this.y = newY;\n    this.setDims();\n    this.fixAndSetPosition();\n    this._onResizing();\n  }\n  _onResizing() {}\n  altTextFinish() {\n    this.#altText?.finish();\n  }\n  get toolbarButtons() {\n    return null;\n  }\n  async addEditToolbar() {\n    if (this._editToolbar || this.#isInEditMode) {\n      return this._editToolbar;\n    }\n    this._editToolbar = new EditorToolbar(this);\n    this.div.append(this._editToolbar.render());\n    const {\n      toolbarButtons\n    } = this;\n    if (toolbarButtons) {\n      for (const [name, tool] of toolbarButtons) {\n        await this._editToolbar.addButton(name, tool);\n      }\n    }\n    if (!this.hasComment) {\n      this._editToolbar.addButton(\"comment\", this.addCommentButton());\n    }\n    this._editToolbar.addButton(\"delete\");\n    return this._editToolbar;\n  }\n  addCommentButtonInToolbar() {\n    this._editToolbar?.addButtonBefore(\"comment\", this.addCommentButton(), \".deleteButton\");\n  }\n  removeCommentButtonFromToolbar() {\n    this._editToolbar?.removeButton(\"comment\");\n  }\n  removeEditToolbar() {\n    this._editToolbar?.remove();\n    this._editToolbar = null;\n    this.#altText?.destroy();\n  }\n  addContainer(container) {\n    const editToolbarDiv = this._editToolbar?.div;\n    if (editToolbarDiv) {\n      editToolbarDiv.before(container);\n    } else {\n      this.div.append(container);\n    }\n  }\n  getClientDimensions() {\n    return this.div.getBoundingClientRect();\n  }\n  createAltText() {\n    if (!this.#altText) {\n      AltText.initialize(AnnotationEditor._l10n);\n      this.#altText = new AltText(this);\n      if (this.#accessibilityData) {\n        this.#altText.data = this.#accessibilityData;\n        this.#accessibilityData = null;\n      }\n    }\n    return this.#altText;\n  }\n  get altTextData() {\n    return this.#altText?.data;\n  }\n  set altTextData(data) {\n    if (!this.#altText) {\n      return;\n    }\n    this.#altText.data = data;\n  }\n  get guessedAltText() {\n    return this.#altText?.guessedText;\n  }\n  async setGuessedAltText(text) {\n    await this.#altText?.setGuessedText(text);\n  }\n  serializeAltText(isForCopying) {\n    return this.#altText?.serialize(isForCopying);\n  }\n  hasAltText() {\n    return !!this.#altText && !this.#altText.isEmpty();\n  }\n  hasAltTextData() {\n    return this.#altText?.hasData() ?? false;\n  }\n  focusCommentButton() {\n    this.#comment?.focusButton();\n  }\n  addCommentButton() {\n    return this.#comment ||= new Comment(this);\n  }\n  addStandaloneCommentButton() {\n    if (this.#commentStandaloneButton) {\n      if (this._uiManager.isEditingMode()) {\n        this.#commentStandaloneButton.classList.remove(\"hidden\");\n      }\n      return;\n    }\n    if (!this.hasComment) {\n      return;\n    }\n    this.#commentStandaloneButton = this.#comment.renderForStandalone();\n    this.div.append(this.#commentStandaloneButton);\n  }\n  removeStandaloneCommentButton() {\n    this.#comment.removeStandaloneCommentButton();\n    this.#commentStandaloneButton = null;\n  }\n  hideStandaloneCommentButton() {\n    this.#commentStandaloneButton?.classList.add(\"hidden\");\n  }\n  get comment() {\n    const {\n      data: {\n        richText,\n        text,\n        date,\n        deleted\n      }\n    } = this.#comment;\n    return {\n      text,\n      richText,\n      date,\n      deleted,\n      color: this.getNonHCMColor(),\n      opacity: this.opacity ?? 1\n    };\n  }\n  set comment(text) {\n    this.#comment ||= new Comment(this);\n    this.#comment.data = text;\n    if (this.hasComment) {\n      this.removeCommentButtonFromToolbar();\n      this.addStandaloneCommentButton();\n      this._uiManager.updateComment(this);\n    } else {\n      this.addCommentButtonInToolbar();\n      this.removeStandaloneCommentButton();\n      this._uiManager.removeComment(this);\n    }\n  }\n  setCommentData({\n    comment,\n    popupRef,\n    richText\n  }) {\n    if (!popupRef) {\n      return;\n    }\n    this.#comment ||= new Comment(this);\n    this.#comment.setInitialText(comment, richText);\n    if (!this.annotationElementId) {\n      return;\n    }\n    const storedData = this._uiManager.getAndRemoveDataFromAnnotationStorage(this.annotationElementId);\n    if (storedData) {\n      this.updateFromAnnotationLayer(storedData);\n    }\n  }\n  get hasEditedComment() {\n    return this.#comment?.hasBeenEdited();\n  }\n  get hasDeletedComment() {\n    return this.#comment?.isDeleted();\n  }\n  get hasComment() {\n    return !!this.#comment && !this.#comment.isEmpty() && !this.#comment.isDeleted();\n  }\n  async editComment(options) {\n    this.#comment ||= new Comment(this);\n    this.#comment.edit(options);\n  }\n  toggleComment(isSelected, visibility = undefined) {\n    if (this.hasComment) {\n      this._uiManager.toggleComment(this, isSelected, visibility);\n    }\n  }\n  setSelectedCommentButton(selected) {\n    this.#comment.setSelectedButton(selected);\n  }\n  addComment(serialized) {\n    if (this.hasEditedComment) {\n      const DEFAULT_POPUP_WIDTH = 180;\n      const DEFAULT_POPUP_HEIGHT = 100;\n      const [,,, trY] = serialized.rect;\n      const [pageWidth] = this.pageDimensions;\n      const [pageX] = this.pageTranslation;\n      const blX = pageX + pageWidth + 1;\n      const blY = trY - DEFAULT_POPUP_HEIGHT;\n      const trX = blX + DEFAULT_POPUP_WIDTH;\n      serialized.popup = {\n        contents: this.comment.text,\n        deleted: this.comment.deleted,\n        rect: [blX, blY, trX, trY]\n      };\n    }\n  }\n  updateFromAnnotationLayer({\n    popup: {\n      contents,\n      deleted\n    }\n  }) {\n    this.#comment.data = deleted ? null : contents;\n  }\n  get parentBoundingClientRect() {\n    return this.parent.boundingClientRect;\n  }\n  render() {\n    const div = this.div = document.createElement(\"div\");\n    div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n    div.className = this.name;\n    div.setAttribute(\"id\", this.id);\n    div.tabIndex = this.#disabled ? -1 : 0;\n    div.setAttribute(\"role\", \"application\");\n    if (this.defaultL10nId) {\n      div.setAttribute(\"data-l10n-id\", this.defaultL10nId);\n    }\n    if (!this._isVisible) {\n      div.classList.add(\"hidden\");\n    }\n    this.setInForeground();\n    this.#addFocusListeners();\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (this.parentRotation % 180 !== 0) {\n      div.style.maxWidth = `${(100 * parentHeight / parentWidth).toFixed(2)}%`;\n      div.style.maxHeight = `${(100 * parentWidth / parentHeight).toFixed(2)}%`;\n    }\n    const [tx, ty] = this.getInitialTranslation();\n    this.translate(tx, ty);\n    bindEvents(this, div, [\"keydown\", \"pointerdown\", \"dblclick\"]);\n    if (this.isResizable && this._uiManager._supportsPinchToZoom) {\n      this.#touchManager ||= new TouchManager({\n        container: div,\n        isPinchingDisabled: () => !this.isSelected,\n        onPinchStart: this.#touchPinchStartCallback.bind(this),\n        onPinching: this.#touchPinchCallback.bind(this),\n        onPinchEnd: this.#touchPinchEndCallback.bind(this),\n        signal: this._uiManager._signal\n      });\n    }\n    this.addStandaloneCommentButton();\n    this._uiManager._editorUndoBar?.hide();\n    return div;\n  }\n  #touchPinchStartCallback() {\n    this.#savedDimensions = {\n      savedX: this.x,\n      savedY: this.y,\n      savedWidth: this.width,\n      savedHeight: this.height\n    };\n    this.#altText?.toggle(false);\n    this.parent.togglePointerEvents(false);\n  }\n  #touchPinchCallback(_origin, prevDistance, distance) {\n    const slowDownFactor = 0.7;\n    let factor = slowDownFactor * (distance / prevDistance) + 1 - slowDownFactor;\n    if (factor === 1) {\n      return;\n    }\n    const rotationMatrix = this.#getRotationMatrix(this.rotation);\n    const transf = (x, y) => [rotationMatrix[0] * x + rotationMatrix[2] * y, rotationMatrix[1] * x + rotationMatrix[3] * y];\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n    const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n    factor = Math.max(Math.min(factor, 1 / savedWidth, 1 / savedHeight), minWidth / savedWidth, minHeight / savedHeight);\n    const newWidth = AnnotationEditor._round(savedWidth * factor);\n    const newHeight = AnnotationEditor._round(savedHeight * factor);\n    if (newWidth === savedWidth && newHeight === savedHeight) {\n      return;\n    }\n    this.#initialRect ||= [savedX, savedY, savedWidth, savedHeight];\n    const transfCenterPoint = transf(savedWidth / 2, savedHeight / 2);\n    const centerX = AnnotationEditor._round(savedX + transfCenterPoint[0]);\n    const centerY = AnnotationEditor._round(savedY + transfCenterPoint[1]);\n    const newTransfCenterPoint = transf(newWidth / 2, newHeight / 2);\n    this.x = centerX - newTransfCenterPoint[0];\n    this.y = centerY - newTransfCenterPoint[1];\n    this.width = newWidth;\n    this.height = newHeight;\n    this.setDims();\n    this.fixAndSetPosition();\n    this._onResizing();\n  }\n  #touchPinchEndCallback() {\n    this.#altText?.toggle(true);\n    this.parent.togglePointerEvents(true);\n    this.#addResizeToUndoStack();\n  }\n  pointerdown(event) {\n    const {\n      isMac\n    } = util_FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      event.preventDefault();\n      return;\n    }\n    this.#hasBeenClicked = true;\n    if (this._isDraggable) {\n      this.#setUpDragSession(event);\n      return;\n    }\n    this.#selectOnPointerEvent(event);\n  }\n  #selectOnPointerEvent(event) {\n    const {\n      isMac\n    } = util_FeatureTest.platform;\n    if (event.ctrlKey && !isMac || event.shiftKey || event.metaKey && isMac) {\n      this.parent.toggleSelected(this);\n    } else {\n      this.parent.setSelected(this);\n    }\n  }\n  #setUpDragSession(event) {\n    const {\n      isSelected\n    } = this;\n    this._uiManager.setUpDragSession();\n    let hasDraggingStarted = false;\n    const ac = new AbortController();\n    const signal = this._uiManager.combinedSignal(ac);\n    const opts = {\n      capture: true,\n      passive: false,\n      signal\n    };\n    const cancelDrag = e => {\n      ac.abort();\n      this.#dragPointerId = null;\n      this.#hasBeenClicked = false;\n      if (!this._uiManager.endDragSession()) {\n        this.#selectOnPointerEvent(e);\n      }\n      if (hasDraggingStarted) {\n        this._onStopDragging();\n      }\n    };\n    if (isSelected) {\n      this.#prevDragX = event.clientX;\n      this.#prevDragY = event.clientY;\n      this.#dragPointerId = event.pointerId;\n      this.#dragPointerType = event.pointerType;\n      window.addEventListener(\"pointermove\", e => {\n        if (!hasDraggingStarted) {\n          hasDraggingStarted = true;\n          this._uiManager.toggleComment(this, true, false);\n          this._onStartDragging();\n        }\n        const {\n          clientX: x,\n          clientY: y,\n          pointerId\n        } = e;\n        if (pointerId !== this.#dragPointerId) {\n          stopEvent(e);\n          return;\n        }\n        const [tx, ty] = this.screenToPageTranslation(x - this.#prevDragX, y - this.#prevDragY);\n        this.#prevDragX = x;\n        this.#prevDragY = y;\n        this._uiManager.dragSelectedEditors(tx, ty);\n      }, opts);\n      window.addEventListener(\"touchmove\", stopEvent, opts);\n      window.addEventListener(\"pointerdown\", e => {\n        if (e.pointerType === this.#dragPointerType) {\n          if (this.#touchManager || e.isPrimary) {\n            cancelDrag(e);\n          }\n        }\n        stopEvent(e);\n      }, opts);\n    }\n    const pointerUpCallback = e => {\n      if (!this.#dragPointerId || this.#dragPointerId === e.pointerId) {\n        cancelDrag(e);\n        return;\n      }\n      stopEvent(e);\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback, {\n      signal\n    });\n    window.addEventListener(\"blur\", pointerUpCallback, {\n      signal\n    });\n  }\n  _onStartDragging() {}\n  _onStopDragging() {}\n  moveInDOM() {\n    if (this.#moveInDOMTimeout) {\n      clearTimeout(this.#moveInDOMTimeout);\n    }\n    this.#moveInDOMTimeout = setTimeout(() => {\n      this.#moveInDOMTimeout = null;\n      this.parent?.moveEditorInDOM(this);\n    }, 0);\n  }\n  _setParentAndPosition(parent, x, y) {\n    parent.changeParent(this);\n    this.x = x;\n    this.y = y;\n    this.fixAndSetPosition();\n    this._onTranslated();\n  }\n  getRect(tx, ty, rotation = this.rotation) {\n    const scale = this.parentScale;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const [pageX, pageY] = this.pageTranslation;\n    const shiftX = tx / scale;\n    const shiftY = ty / scale;\n    const x = this.x * pageWidth;\n    const y = this.y * pageHeight;\n    const width = this.width * pageWidth;\n    const height = this.height * pageHeight;\n    switch (rotation) {\n      case 0:\n        return [x + shiftX + pageX, pageHeight - y - shiftY - height + pageY, x + shiftX + width + pageX, pageHeight - y - shiftY + pageY];\n      case 90:\n        return [x + shiftY + pageX, pageHeight - y + shiftX + pageY, x + shiftY + height + pageX, pageHeight - y + shiftX + width + pageY];\n      case 180:\n        return [x - shiftX - width + pageX, pageHeight - y + shiftY + pageY, x - shiftX + pageX, pageHeight - y + shiftY + height + pageY];\n      case 270:\n        return [x - shiftY - height + pageX, pageHeight - y - shiftX - width + pageY, x - shiftY + pageX, pageHeight - y - shiftX + pageY];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n  getRectInCurrentCoords(rect, pageHeight) {\n    const [x1, y1, x2, y2] = rect;\n    const width = x2 - x1;\n    const height = y2 - y1;\n    switch (this.rotation) {\n      case 0:\n        return [x1, pageHeight - y2, width, height];\n      case 90:\n        return [x1, pageHeight - y1, height, width];\n      case 180:\n        return [x2, pageHeight - y1, width, height];\n      case 270:\n        return [x2, pageHeight - y2, height, width];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n  getPDFRect() {\n    return this.getRect(0, 0);\n  }\n  getNonHCMColor() {\n    return this.color && AnnotationEditor._colorManager.convert(this._uiManager.getNonHCMColor(this.color));\n  }\n  onUpdatedColor() {\n    this.#comment?.onUpdatedColor();\n  }\n  getData() {\n    const {\n      comment: {\n        text: str,\n        color,\n        date,\n        opacity,\n        deleted,\n        richText\n      },\n      uid: id,\n      pageIndex,\n      creationDate,\n      modificationDate\n    } = this;\n    return {\n      id,\n      pageIndex,\n      rect: this.getPDFRect(),\n      richText,\n      contentsObj: {\n        str\n      },\n      creationDate,\n      modificationDate: date || modificationDate,\n      popupRef: !deleted,\n      color,\n      opacity\n    };\n  }\n  onceAdded(focus) {}\n  isEmpty() {\n    return false;\n  }\n  enableEditMode() {\n    if (this.isInEditMode()) {\n      return false;\n    }\n    this.parent.setEditingState(false);\n    this.#isInEditMode = true;\n    return true;\n  }\n  disableEditMode() {\n    if (!this.isInEditMode()) {\n      return false;\n    }\n    this.parent.setEditingState(true);\n    this.#isInEditMode = false;\n    return true;\n  }\n  isInEditMode() {\n    return this.#isInEditMode;\n  }\n  shouldGetKeyboardEvents() {\n    return this.#isResizerEnabledForKeyboard;\n  }\n  needsToBeRebuilt() {\n    return this.div && !this.isAttachedToDOM;\n  }\n  get isOnScreen() {\n    const {\n      top,\n      left,\n      bottom,\n      right\n    } = this.getClientDimensions();\n    const {\n      innerHeight,\n      innerWidth\n    } = window;\n    return left < innerWidth && right > 0 && top < innerHeight && bottom > 0;\n  }\n  #addFocusListeners() {\n    if (this.#focusAC || !this.div) {\n      return;\n    }\n    this.#focusAC = new AbortController();\n    const signal = this._uiManager.combinedSignal(this.#focusAC);\n    this.div.addEventListener(\"focusin\", this.focusin.bind(this), {\n      signal\n    });\n    this.div.addEventListener(\"focusout\", this.focusout.bind(this), {\n      signal\n    });\n  }\n  rebuild() {\n    this.#addFocusListeners();\n  }\n  rotate(_angle) {}\n  resize() {}\n  serializeDeleted() {\n    return {\n      id: this.annotationElementId,\n      deleted: true,\n      pageIndex: this.pageIndex,\n      popupRef: this._initialData?.popupRef || \"\"\n    };\n  }\n  serialize(isForCopying = false, context = null) {\n    return {\n      annotationType: this.mode,\n      pageIndex: this.pageIndex,\n      rect: this.getPDFRect(),\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId,\n      popupRef: this._initialData?.popupRef || \"\"\n    };\n  }\n  static async deserialize(data, parent, uiManager) {\n    const editor = new this.prototype.constructor({\n      parent,\n      id: parent.getNextId(),\n      uiManager,\n      annotationElementId: data.annotationElementId,\n      creationDate: data.creationDate,\n      modificationDate: data.modificationDate\n    });\n    editor.rotation = data.rotation;\n    editor.#accessibilityData = data.accessibilityData;\n    editor._isCopy = data.isCopy || false;\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const [x, y, width, height] = editor.getRectInCurrentCoords(data.rect, pageHeight);\n    editor.x = x / pageWidth;\n    editor.y = y / pageHeight;\n    editor.width = width / pageWidth;\n    editor.height = height / pageHeight;\n    return editor;\n  }\n  get hasBeenModified() {\n    return !!this.annotationElementId && (this.deleted || this.serialize() !== null);\n  }\n  remove() {\n    this.#focusAC?.abort();\n    this.#focusAC = null;\n    if (!this.isEmpty()) {\n      this.commit();\n    }\n    if (this.parent) {\n      this.parent.remove(this);\n    } else {\n      this._uiManager.removeEditor(this);\n    }\n    if (this.#moveInDOMTimeout) {\n      clearTimeout(this.#moveInDOMTimeout);\n      this.#moveInDOMTimeout = null;\n    }\n    this.#stopResizing();\n    this.removeEditToolbar();\n    if (this.#telemetryTimeouts) {\n      for (const timeout of this.#telemetryTimeouts.values()) {\n        clearTimeout(timeout);\n      }\n      this.#telemetryTimeouts = null;\n    }\n    this.parent = null;\n    this.#touchManager?.destroy();\n    this.#touchManager = null;\n  }\n  get isResizable() {\n    return false;\n  }\n  makeResizable() {\n    if (this.isResizable) {\n      this.#createResizers();\n      this.#resizersDiv.classList.remove(\"hidden\");\n    }\n  }\n  get toolbarPosition() {\n    return null;\n  }\n  get commentButtonPosition() {\n    return this._uiManager.direction === \"ltr\" ? [1, 0] : [0, 0];\n  }\n  get commentButtonPositionInPage() {\n    const {\n      commentButtonPosition: [posX, posY]\n    } = this;\n    const [blX, blY, trX, trY] = this.getPDFRect();\n    return [AnnotationEditor._round(blX + (trX - blX) * posX), AnnotationEditor._round(blY + (trY - blY) * (1 - posY))];\n  }\n  get commentButtonColor() {\n    return this._uiManager.makeCommentColor(this.getNonHCMColor(), this.opacity);\n  }\n  get commentPopupPosition() {\n    return this.#comment.commentPopupPositionInLayer;\n  }\n  set commentPopupPosition(pos) {\n    this.#comment.commentPopupPositionInLayer = pos;\n  }\n  hasDefaultPopupPosition() {\n    return this.#comment.hasDefaultPopupPosition();\n  }\n  get commentButtonWidth() {\n    return this.#comment.commentButtonWidth;\n  }\n  get elementBeforePopup() {\n    return this.div;\n  }\n  setCommentButtonStates(options) {\n    this.#comment.setCommentButtonStates(options);\n  }\n  keydown(event) {\n    if (!this.isResizable || event.target !== this.div || event.key !== \"Enter\") {\n      return;\n    }\n    this._uiManager.setSelected(this);\n    this.#savedDimensions = {\n      savedX: this.x,\n      savedY: this.y,\n      savedWidth: this.width,\n      savedHeight: this.height\n    };\n    const children = this.#resizersDiv.children;\n    if (!this.#allResizerDivs) {\n      this.#allResizerDivs = Array.from(children);\n      const boundResizerKeydown = this.#resizerKeydown.bind(this);\n      const boundResizerBlur = this.#resizerBlur.bind(this);\n      const signal = this._uiManager._signal;\n      for (const div of this.#allResizerDivs) {\n        const name = div.getAttribute(\"data-resizer-name\");\n        div.setAttribute(\"role\", \"spinbutton\");\n        div.addEventListener(\"keydown\", boundResizerKeydown, {\n          signal\n        });\n        div.addEventListener(\"blur\", boundResizerBlur, {\n          signal\n        });\n        div.addEventListener(\"focus\", this.#resizerFocus.bind(this, name), {\n          signal\n        });\n        div.setAttribute(\"data-l10n-id\", AnnotationEditor._l10nResizer[name]);\n      }\n    }\n    const first = this.#allResizerDivs[0];\n    let firstPosition = 0;\n    for (const div of children) {\n      if (div === first) {\n        break;\n      }\n      firstPosition++;\n    }\n    const nextFirstPosition = (360 - this.rotation + this.parentRotation) % 360 / 90 * (this.#allResizerDivs.length / 4);\n    if (nextFirstPosition !== firstPosition) {\n      if (nextFirstPosition < firstPosition) {\n        for (let i = 0; i < firstPosition - nextFirstPosition; i++) {\n          this.#resizersDiv.append(this.#resizersDiv.firstChild);\n        }\n      } else if (nextFirstPosition > firstPosition) {\n        for (let i = 0; i < nextFirstPosition - firstPosition; i++) {\n          this.#resizersDiv.firstChild.before(this.#resizersDiv.lastChild);\n        }\n      }\n      let i = 0;\n      for (const child of children) {\n        const div = this.#allResizerDivs[i++];\n        const name = div.getAttribute(\"data-resizer-name\");\n        child.setAttribute(\"data-l10n-id\", AnnotationEditor._l10nResizer[name]);\n      }\n    }\n    this.#setResizerTabIndex(0);\n    this.#isResizerEnabledForKeyboard = true;\n    this.#resizersDiv.firstChild.focus({\n      focusVisible: true\n    });\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n  #resizerKeydown(event) {\n    AnnotationEditor._resizerKeyboardManager.exec(this, event);\n  }\n  #resizerBlur(event) {\n    if (this.#isResizerEnabledForKeyboard && event.relatedTarget?.parentNode !== this.#resizersDiv) {\n      this.#stopResizing();\n    }\n  }\n  #resizerFocus(name) {\n    this.#focusedResizerName = this.#isResizerEnabledForKeyboard ? name : \"\";\n  }\n  #setResizerTabIndex(value) {\n    if (!this.#allResizerDivs) {\n      return;\n    }\n    for (const div of this.#allResizerDivs) {\n      div.tabIndex = value;\n    }\n  }\n  _resizeWithKeyboard(x, y) {\n    if (!this.#isResizerEnabledForKeyboard) {\n      return;\n    }\n    this.#resizerPointermove(this.#focusedResizerName, {\n      deltaX: x,\n      deltaY: y,\n      fromKeyboard: true\n    });\n  }\n  #stopResizing() {\n    this.#isResizerEnabledForKeyboard = false;\n    this.#setResizerTabIndex(-1);\n    this.#addResizeToUndoStack();\n  }\n  _stopResizingWithKeyboard() {\n    this.#stopResizing();\n    this.div.focus();\n  }\n  select() {\n    if (this.isSelected && this._editToolbar) {\n      this._editToolbar.show();\n      return;\n    }\n    this.isSelected = true;\n    this.makeResizable();\n    this.div?.classList.add(\"selectedEditor\");\n    if (!this._editToolbar) {\n      this.addEditToolbar().then(() => {\n        if (this.div?.classList.contains(\"selectedEditor\")) {\n          this._editToolbar?.show();\n        }\n      });\n      return;\n    }\n    this._editToolbar?.show();\n    this.#altText?.toggleAltTextBadge(false);\n  }\n  focus() {\n    if (this.div && !this.div.contains(document.activeElement)) {\n      setTimeout(() => this.div?.focus({\n        preventScroll: true\n      }), 0);\n    }\n  }\n  unselect() {\n    if (!this.isSelected) {\n      return;\n    }\n    this.isSelected = false;\n    this.#resizersDiv?.classList.add(\"hidden\");\n    this.div?.classList.remove(\"selectedEditor\");\n    if (this.div?.contains(document.activeElement)) {\n      this._uiManager.currentLayer.div.focus({\n        preventScroll: true\n      });\n    }\n    this._editToolbar?.hide();\n    this.#altText?.toggleAltTextBadge(true);\n    if (this.hasComment) {\n      this._uiManager.toggleComment(this, false, false);\n    }\n  }\n  updateParams(type, value) {}\n  disableEditing() {}\n  enableEditing() {}\n  get canChangeContent() {\n    return false;\n  }\n  enterInEditMode() {\n    if (!this.canChangeContent) {\n      return;\n    }\n    this.enableEditMode();\n    this.div.focus();\n  }\n  dblclick(event) {\n    if (event.target.nodeName === \"BUTTON\") {\n      return;\n    }\n    this.enterInEditMode();\n    this.parent.updateToolbar({\n      mode: this.constructor._editorType,\n      editId: this.id\n    });\n  }\n  getElementForAltText() {\n    return this.div;\n  }\n  get contentDiv() {\n    return this.div;\n  }\n  get isEditing() {\n    return this.#isEditing;\n  }\n  set isEditing(value) {\n    this.#isEditing = value;\n    if (!this.parent) {\n      return;\n    }\n    if (value) {\n      this.parent.setSelected(this);\n      this.parent.setActiveEditor(this);\n    } else {\n      this.parent.setActiveEditor(null);\n    }\n  }\n  static get MIN_SIZE() {\n    return 16;\n  }\n  static canCreateNewEmptyEditor() {\n    return true;\n  }\n  get telemetryInitialData() {\n    return {\n      action: \"added\"\n    };\n  }\n  get telemetryFinalData() {\n    return null;\n  }\n  _reportTelemetry(data, mustWait = false) {\n    if (mustWait) {\n      this.#telemetryTimeouts ||= new Map();\n      const {\n        action\n      } = data;\n      let timeout = this.#telemetryTimeouts.get(action);\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n      timeout = setTimeout(() => {\n        this._reportTelemetry(data);\n        this.#telemetryTimeouts.delete(action);\n        if (this.#telemetryTimeouts.size === 0) {\n          this.#telemetryTimeouts = null;\n        }\n      }, AnnotationEditor._telemetryTimeout);\n      this.#telemetryTimeouts.set(action, timeout);\n      return;\n    }\n    data.type ||= this.editorType;\n    this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n      source: this,\n      details: {\n        type: \"editing\",\n        data\n      }\n    });\n  }\n  show(visible = this._isVisible) {\n    this.div.classList.toggle(\"hidden\", !visible);\n    this._isVisible = visible;\n  }\n  enable() {\n    if (this.div) {\n      this.div.tabIndex = 0;\n    }\n    this.#disabled = false;\n  }\n  disable() {\n    if (this.div) {\n      this.div.tabIndex = -1;\n    }\n    this.#disabled = true;\n  }\n  updateFakeAnnotationElement(annotationLayer) {\n    if (!this.#fakeAnnotation && !this.deleted) {\n      this.#fakeAnnotation = annotationLayer.addFakeAnnotation(this);\n      return;\n    }\n    if (this.deleted) {\n      this.#fakeAnnotation.remove();\n      this.#fakeAnnotation = null;\n      return;\n    }\n    if (this.hasEditedComment || this._hasBeenMoved || this._hasBeenResized) {\n      this.#fakeAnnotation.updateEdited({\n        rect: this.getPDFRect(),\n        popup: this.comment\n      });\n    }\n  }\n  renderAnnotationElement(annotation) {\n    if (this.deleted) {\n      annotation.hide();\n      return null;\n    }\n    let content = annotation.container.querySelector(\".annotationContent\");\n    if (!content) {\n      content = document.createElement(\"div\");\n      content.classList.add(\"annotationContent\", this.editorType);\n      annotation.container.prepend(content);\n    } else if (content.nodeName === \"CANVAS\") {\n      const canvas = content;\n      content = document.createElement(\"div\");\n      content.classList.add(\"annotationContent\", this.editorType);\n      canvas.before(content);\n    }\n    return content;\n  }\n  resetAnnotationElement(annotation) {\n    const {\n      firstChild\n    } = annotation.container;\n    if (firstChild?.nodeName === \"DIV\" && firstChild.classList.contains(\"annotationContent\")) {\n      firstChild.remove();\n    }\n  }\n}\nclass FakeEditor extends AnnotationEditor {\n  constructor(params) {\n    super(params);\n    this.annotationElementId = params.annotationElementId;\n    this.deleted = true;\n  }\n  serialize() {\n    return this.serializeDeleted();\n  }\n}\n\n;// ./src/shared/murmurhash3.js\n\n\n\n\n\n\n\n\nconst SEED = 0xc3d2e1f0;\nconst MASK_HIGH = 0xffff0000;\nconst MASK_LOW = 0xffff;\nclass MurmurHash3_64 {\n  constructor(seed) {\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  update(input) {\n    let data, length;\n    if (typeof input === \"string\") {\n      data = new Uint8Array(input.length * 2);\n      length = 0;\n      for (let i = 0, ii = input.length; i < ii; i++) {\n        const code = input.charCodeAt(i);\n        if (code <= 0xff) {\n          data[length++] = code;\n        } else {\n          data[length++] = code >>> 8;\n          data[length++] = code & 0xff;\n        }\n      }\n    } else if (ArrayBuffer.isView(input)) {\n      data = input.slice();\n      length = data.byteLength;\n    } else {\n      throw new Error(\"Invalid data format, must be a string or TypedArray.\");\n    }\n    const blockCounts = length >> 2;\n    const tailLength = length - blockCounts * 4;\n    const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n    let k1 = 0,\n      k2 = 0;\n    let h1 = this.h1,\n      h2 = this.h2;\n    const C1 = 0xcc9e2d51,\n      C2 = 0x1b873593;\n    const C1_LOW = C1 & MASK_LOW,\n      C2_LOW = C2 & MASK_LOW;\n    for (let i = 0; i < blockCounts; i++) {\n      if (i & 1) {\n        k1 = dataUint32[i];\n        k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n        k1 = k1 << 15 | k1 >>> 17;\n        k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n        h1 ^= k1;\n        h1 = h1 << 13 | h1 >>> 19;\n        h1 = h1 * 5 + 0xe6546b64;\n      } else {\n        k2 = dataUint32[i];\n        k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n        k2 = k2 << 15 | k2 >>> 17;\n        k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n        h2 ^= k2;\n        h2 = h2 << 13 | h2 >>> 19;\n        h2 = h2 * 5 + 0xe6546b64;\n      }\n    }\n    k1 = 0;\n    switch (tailLength) {\n      case 3:\n        k1 ^= data[blockCounts * 4 + 2] << 16;\n      case 2:\n        k1 ^= data[blockCounts * 4 + 1] << 8;\n      case 1:\n        k1 ^= data[blockCounts * 4];\n        k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n        k1 = k1 << 15 | k1 >>> 17;\n        k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n        if (blockCounts & 1) {\n          h1 ^= k1;\n        } else {\n          h2 ^= k1;\n        }\n    }\n    this.h1 = h1;\n    this.h2 = h2;\n  }\n  hexdigest() {\n    let h1 = this.h1,\n      h2 = this.h2;\n    h1 ^= h2 >>> 1;\n    h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n    h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n    h1 ^= h2 >>> 1;\n    h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n    h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n    h1 ^= h2 >>> 1;\n    return (h1 >>> 0).toString(16).padStart(8, \"0\") + (h2 >>> 0).toString(16).padStart(8, \"0\");\n  }\n}\n\n;// ./src/display/annotation_storage.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst SerializableEmpty = Object.freeze({\n  map: null,\n  hash: \"\",\n  transfer: undefined\n});\nclass AnnotationStorage {\n  #modified = false;\n  #modifiedIds = null;\n  #editorsMap = null;\n  #storage = new Map();\n  constructor() {\n    this.onSetModified = null;\n    this.onResetModified = null;\n    this.onAnnotationEditor = null;\n  }\n  getValue(key, defaultValue) {\n    const value = this.#storage.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n    return Object.assign(defaultValue, value);\n  }\n  getRawValue(key) {\n    return this.#storage.get(key);\n  }\n  remove(key) {\n    const storedValue = this.#storage.get(key);\n    if (storedValue === undefined) {\n      return;\n    }\n    if (storedValue instanceof AnnotationEditor) {\n      this.#editorsMap.delete(storedValue.annotationElementId);\n    }\n    this.#storage.delete(key);\n    if (this.#storage.size === 0) {\n      this.resetModified();\n    }\n    if (typeof this.onAnnotationEditor === \"function\") {\n      for (const value of this.#storage.values()) {\n        if (value instanceof AnnotationEditor) {\n          return;\n        }\n      }\n      this.onAnnotationEditor(null);\n    }\n  }\n  setValue(key, value) {\n    const obj = this.#storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this.#storage.set(key, value);\n    }\n    if (modified) {\n      this.#setModified();\n    }\n    if (value instanceof AnnotationEditor) {\n      (this.#editorsMap ||= new Map()).set(value.annotationElementId, value);\n      if (typeof this.onAnnotationEditor === \"function\") {\n        this.onAnnotationEditor(value.constructor._type);\n      }\n    }\n  }\n  has(key) {\n    return this.#storage.has(key);\n  }\n  get size() {\n    return this.#storage.size;\n  }\n  #setModified() {\n    if (!this.#modified) {\n      this.#modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n  resetModified() {\n    if (this.#modified) {\n      this.#modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n  get print() {\n    return new PrintAnnotationStorage(this);\n  }\n  get serializable() {\n    if (this.#storage.size === 0) {\n      return SerializableEmpty;\n    }\n    const map = new Map(),\n      hash = new MurmurHash3_64(),\n      transfer = [];\n    const context = Object.create(null);\n    let hasBitmap = false;\n    for (const [key, val] of this.#storage) {\n      const serialized = val instanceof AnnotationEditor ? val.serialize(false, context) : val;\n      if (serialized) {\n        map.set(key, serialized);\n        hash.update(`${key}:${JSON.stringify(serialized)}`);\n        hasBitmap ||= !!serialized.bitmap;\n      }\n    }\n    if (hasBitmap) {\n      for (const value of map.values()) {\n        if (value.bitmap) {\n          transfer.push(value.bitmap);\n        }\n      }\n    }\n    return map.size > 0 ? {\n      map,\n      hash: hash.hexdigest(),\n      transfer\n    } : SerializableEmpty;\n  }\n  get editorStats() {\n    let stats = null;\n    const typeToEditor = new Map();\n    let numberOfEditedComments = 0;\n    let numberOfDeletedComments = 0;\n    for (const value of this.#storage.values()) {\n      if (!(value instanceof AnnotationEditor)) {\n        if (value.popup) {\n          if (value.popup.deleted) {\n            numberOfDeletedComments += 1;\n          } else {\n            numberOfEditedComments += 1;\n          }\n        }\n        continue;\n      }\n      if (value.isCommentDeleted) {\n        numberOfDeletedComments += 1;\n      } else if (value.hasEditedComment) {\n        numberOfEditedComments += 1;\n      }\n      const editorStats = value.telemetryFinalData;\n      if (!editorStats) {\n        continue;\n      }\n      const {\n        type\n      } = editorStats;\n      if (!typeToEditor.has(type)) {\n        typeToEditor.set(type, Object.getPrototypeOf(value).constructor);\n      }\n      stats ||= Object.create(null);\n      const map = stats[type] ||= new Map();\n      for (const [key, val] of Object.entries(editorStats)) {\n        if (key === \"type\") {\n          continue;\n        }\n        let counters = map.get(key);\n        if (!counters) {\n          counters = new Map();\n          map.set(key, counters);\n        }\n        const count = counters.get(val) ?? 0;\n        counters.set(val, count + 1);\n      }\n    }\n    if (numberOfDeletedComments > 0 || numberOfEditedComments > 0) {\n      stats ||= Object.create(null);\n      stats.comments = {\n        deleted: numberOfDeletedComments,\n        edited: numberOfEditedComments\n      };\n    }\n    if (!stats) {\n      return null;\n    }\n    for (const [type, editor] of typeToEditor) {\n      stats[type] = editor.computeTelemetryFinalData(stats[type]);\n    }\n    return stats;\n  }\n  resetModifiedIds() {\n    this.#modifiedIds = null;\n  }\n  updateEditor(annotationId, data) {\n    const value = this.#editorsMap?.get(annotationId);\n    if (value) {\n      value.updateFromAnnotationLayer(data);\n      return true;\n    }\n    return false;\n  }\n  getEditor(annotationId) {\n    return this.#editorsMap?.get(annotationId) || null;\n  }\n  get modifiedIds() {\n    if (this.#modifiedIds) {\n      return this.#modifiedIds;\n    }\n    const ids = [];\n    if (this.#editorsMap) {\n      for (const value of this.#editorsMap.values()) {\n        if (!value.serialize()) {\n          continue;\n        }\n        ids.push(value.annotationElementId);\n      }\n    }\n    return this.#modifiedIds = {\n      ids: new Set(ids),\n      hash: ids.join(\",\")\n    };\n  }\n  [Symbol.iterator]() {\n    return this.#storage.entries();\n  }\n}\nclass PrintAnnotationStorage extends AnnotationStorage {\n  #serializable;\n  constructor(parent) {\n    super();\n    const {\n      map,\n      hash,\n      transfer\n    } = parent.serializable;\n    const clone = structuredClone(map, transfer ? {\n      transfer\n    } : null);\n    this.#serializable = {\n      map: clone,\n      hash,\n      transfer\n    };\n  }\n  get print() {\n    unreachable(\"Should not call PrintAnnotationStorage.print\");\n  }\n  get serializable() {\n    return this.#serializable;\n  }\n  get modifiedIds() {\n    return shadow(this, \"modifiedIds\", {\n      ids: new Set(),\n      hash: \"\"\n    });\n  }\n}\n\n;// ./src/display/font_loader.js\n\n\n\n\n\n\n\n\n\n\nclass FontLoader {\n  #systemFonts = new Set();\n  constructor({\n    ownerDocument = globalThis.document,\n    styleElement = null\n  }) {\n    this._document = ownerDocument;\n    this.nativeFontFaces = new Set();\n    this.styleElement = null;\n    this.loadingRequests = [];\n    this.loadTestFontId = 0;\n  }\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.add(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n  removeNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.delete(nativeFontFace);\n    this._document.fonts.delete(nativeFontFace);\n  }\n  insertRule(rule) {\n    if (!this.styleElement) {\n      this.styleElement = this._document.createElement(\"style\");\n      this._document.documentElement.getElementsByTagName(\"head\")[0].append(this.styleElement);\n    }\n    const styleSheet = this.styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.clear();\n    this.#systemFonts.clear();\n    if (this.styleElement) {\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n  async loadSystemFont({\n    systemFontInfo: info,\n    disableFontFace,\n    _inspectFont\n  }) {\n    if (!info || this.#systemFonts.has(info.loadedName)) {\n      return;\n    }\n    assert(!disableFontFace, \"loadSystemFont shouldn't be called when `disableFontFace` is set.\");\n    if (this.isFontLoadingAPISupported) {\n      const {\n        loadedName,\n        src,\n        style\n      } = info;\n      const fontFace = new FontFace(loadedName, src, style);\n      this.addNativeFontFace(fontFace);\n      try {\n        await fontFace.load();\n        this.#systemFonts.add(loadedName);\n        _inspectFont?.(info);\n      } catch {\n        warn(`Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`);\n        this.removeNativeFontFace(fontFace);\n      }\n      return;\n    }\n    unreachable(\"Not implemented: loadSystemFont without the Font Loading API.\");\n  }\n  async bind(font) {\n    if (font.attached || font.missingFile && !font.systemFontInfo) {\n      return;\n    }\n    font.attached = true;\n    if (font.systemFontInfo) {\n      await this.loadSystemFont(font);\n      return;\n    }\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return;\n    }\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n      if (this.isSyncFontLoadingSupported) {\n        return;\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent(font, request);\n      });\n    }\n  }\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n  get isSyncFontLoadingSupported() {\n    return shadow(this, \"isSyncFontLoadingSupported\", isNodeJS || util_FeatureTest.platform.isFirefox);\n  }\n  _queueLoadingCallback(callback) {\n    function completeRequest() {\n      assert(!request.done, \"completeRequest() cannot be called twice.\");\n      request.done = true;\n      while (loadingRequests.length > 0 && loadingRequests[0].done) {\n        const otherRequest = loadingRequests.shift();\n        setTimeout(otherRequest.callback, 0);\n      }\n    }\n    const {\n      loadingRequests\n    } = this;\n    const request = {\n      done: false,\n      complete: completeRequest,\n      callback\n    };\n    loadingRequests.push(request);\n    return request;\n  }\n  get _loadTestFont() {\n    const testFont = atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n    return shadow(this, \"_loadTestFont\", testFont);\n  }\n  _prepareFontLoadEvent(font, request) {\n    function int32(data, offset) {\n      return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n    }\n    function spliceString(s, offset, remove, insert) {\n      const chunk1 = s.substring(0, offset);\n      const chunk2 = s.substring(offset + remove);\n      return chunk1 + insert + chunk2;\n    }\n    let i, ii;\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n    let called = 0;\n    function isFontReady(name, callback) {\n      if (++called > 30) {\n        warn(\"Load test font never loaded.\");\n        callback();\n        return;\n      }\n      ctx.font = \"30px \" + name;\n      ctx.fillText(\".\", 0, 20);\n      const imageData = ctx.getImageData(0, 0, 1, 1);\n      if (imageData.data[3] > 0) {\n        callback();\n        return;\n      }\n      setTimeout(isFontReady.bind(null, name, callback));\n    }\n    const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n    let data = this._loadTestFont;\n    const COMMENT_OFFSET = 976;\n    data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n    const CFF_CHECKSUM_OFFSET = 16;\n    const XXXX_VALUE = 0x58585858;\n    let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n    for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n      checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n    }\n    if (i < loadTestFontId.length) {\n      checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n    }\n    data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n    const url = `url(data:font/opentype;base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n    this.insertRule(rule);\n    const div = this._document.createElement(\"div\");\n    div.style.visibility = \"hidden\";\n    div.style.width = div.style.height = \"10px\";\n    div.style.position = \"absolute\";\n    div.style.top = div.style.left = \"0px\";\n    for (const name of [font.loadedName, loadTestFontId]) {\n      const span = this._document.createElement(\"span\");\n      span.textContent = \"Hi\";\n      span.style.fontFamily = name;\n      div.append(span);\n    }\n    this._document.body.append(div);\n    isFontReady(loadTestFontId, () => {\n      div.remove();\n      request.complete();\n    });\n  }\n}\nclass FontFaceObject {\n  #fontData;\n  constructor(translatedData, inspectFont = null, extra, charProcOperatorList) {\n    this.compiledGlyphs = Object.create(null);\n    this.#fontData = translatedData;\n    this._inspectFont = inspectFont;\n    if (extra) {\n      Object.assign(this, extra);\n    }\n    if (charProcOperatorList) {\n      this.charProcOperatorList = charProcOperatorList;\n    }\n  }\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n    }\n    this._inspectFont?.(this);\n    return nativeFontFace;\n  }\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const url = `url(data:${this.mimetype};base64,${toBase64Util(this.data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n    this._inspectFont?.(this, url);\n    return rule;\n  }\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n    const objId = this.loadedName + \"_path_\" + character;\n    let cmds;\n    try {\n      cmds = objs.get(objId);\n    } catch (ex) {\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n    }\n    const path = new Path2D(cmds || \"\");\n    if (!this.fontExtraProperties) {\n      objs.delete(objId);\n    }\n    return this.compiledGlyphs[character] = path;\n  }\n  get black() {\n    return this.#fontData.black;\n  }\n  get bold() {\n    return this.#fontData.bold;\n  }\n  get disableFontFace() {\n    return this.#fontData.disableFontFace ?? false;\n  }\n  get fontExtraProperties() {\n    return this.#fontData.fontExtraProperties ?? false;\n  }\n  get isInvalidPDFjsFont() {\n    return this.#fontData.isInvalidPDFjsFont;\n  }\n  get isType3Font() {\n    return this.#fontData.isType3Font;\n  }\n  get italic() {\n    return this.#fontData.italic;\n  }\n  get missingFile() {\n    return this.#fontData.missingFile;\n  }\n  get remeasure() {\n    return this.#fontData.remeasure;\n  }\n  get vertical() {\n    return this.#fontData.vertical;\n  }\n  get ascent() {\n    return this.#fontData.ascent;\n  }\n  get defaultWidth() {\n    return this.#fontData.defaultWidth;\n  }\n  get descent() {\n    return this.#fontData.descent;\n  }\n  get bbox() {\n    return this.#fontData.bbox;\n  }\n  get fontMatrix() {\n    return this.#fontData.fontMatrix;\n  }\n  get fallbackName() {\n    return this.#fontData.fallbackName;\n  }\n  get loadedName() {\n    return this.#fontData.loadedName;\n  }\n  get mimetype() {\n    return this.#fontData.mimetype;\n  }\n  get name() {\n    return this.#fontData.name;\n  }\n  get data() {\n    return this.#fontData.data;\n  }\n  clearData() {\n    this.#fontData.clearData();\n  }\n  get cssFontInfo() {\n    return this.#fontData.cssFontInfo;\n  }\n  get systemFontInfo() {\n    return this.#fontData.systemFontInfo;\n  }\n  get defaultVMetrics() {\n    return this.#fontData.defaultVMetrics;\n  }\n}\n\n;// ./src/display/api_utils.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getUrlProp(val) {\n  if (val instanceof URL) {\n    return val.href;\n  }\n  if (typeof val === \"string\") {\n    if (isNodeJS) {\n      return val;\n    }\n    const url = URL.parse(val, window.location);\n    if (url) {\n      return url.href;\n    }\n  }\n  throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n}\nfunction getDataProp(val) {\n  if (isNodeJS && typeof Buffer !== \"undefined\" && val instanceof Buffer) {\n    throw new Error(\"Please provide binary data as `Uint8Array`, rather than `Buffer`.\");\n  }\n  if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) {\n    return val;\n  }\n  if (typeof val === \"string\") {\n    return stringToBytes(val);\n  }\n  if (val instanceof ArrayBuffer || ArrayBuffer.isView(val) || typeof val === \"object\" && !isNaN(val?.length)) {\n    return new Uint8Array(val);\n  }\n  throw new Error(\"Invalid PDF binary data: either TypedArray, \" + \"string, or array-like object is expected in the data property.\");\n}\nfunction getFactoryUrlProp(val) {\n  if (typeof val !== \"string\") {\n    return null;\n  }\n  if (val.endsWith(\"/\")) {\n    return val;\n  }\n  throw new Error(`Invalid factory url: \"${val}\" must include trailing slash.`);\n}\nconst isRefProxy = v => typeof v === \"object\" && Number.isInteger(v?.num) && v.num >= 0 && Number.isInteger(v?.gen) && v.gen >= 0;\nconst isNameProxy = v => typeof v === \"object\" && typeof v?.name === \"string\";\nconst isValidExplicitDest = _isValidExplicitDest.bind(null, isRefProxy, isNameProxy);\nclass LoopbackPort {\n  #listeners = new Map();\n  #deferred = Promise.resolve();\n  postMessage(obj, transfer) {\n    const event = {\n      data: structuredClone(obj, transfer ? {\n        transfer\n      } : null)\n    };\n    this.#deferred.then(() => {\n      for (const [listener] of this.#listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n  addEventListener(name, listener, options = null) {\n    let rmAbort = null;\n    if (options?.signal instanceof AbortSignal) {\n      const {\n        signal\n      } = options;\n      if (signal.aborted) {\n        warn(\"LoopbackPort - cannot use an `aborted` signal.\");\n        return;\n      }\n      const onAbort = () => this.removeEventListener(name, listener);\n      rmAbort = () => signal.removeEventListener(\"abort\", onAbort);\n      signal.addEventListener(\"abort\", onAbort);\n    }\n    this.#listeners.set(listener, rmAbort);\n  }\n  removeEventListener(name, listener) {\n    const rmAbort = this.#listeners.get(listener);\n    rmAbort?.();\n    this.#listeners.delete(listener);\n  }\n  terminate() {\n    for (const [, rmAbort] of this.#listeners) {\n      rmAbort?.();\n    }\n    this.#listeners.clear();\n  }\n}\n\n;// ./src/shared/message_handler.js\n\n\n\nconst CallbackKind = {\n  DATA: 1,\n  ERROR: 2\n};\nconst StreamKind = {\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8\n};\nfunction onFn() {}\nfunction wrapReason(ex) {\n  if (ex instanceof AbortException || ex instanceof InvalidPDFException || ex instanceof PasswordException || ex instanceof ResponseException || ex instanceof UnknownErrorException) {\n    return ex;\n  }\n  if (!(ex instanceof Error || typeof ex === \"object\" && ex !== null)) {\n    unreachable('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n  }\n  switch (ex.name) {\n    case \"AbortException\":\n      return new AbortException(ex.message);\n    case \"InvalidPDFException\":\n      return new InvalidPDFException(ex.message);\n    case \"PasswordException\":\n      return new PasswordException(ex.message, ex.code);\n    case \"ResponseException\":\n      return new ResponseException(ex.message, ex.status, ex.missing);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(ex.message, ex.details);\n  }\n  return new UnknownErrorException(ex.message, ex.toString());\n}\nclass MessageHandler {\n  #messageAC = new AbortController();\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n    comObj.addEventListener(\"message\", this.#onMessage.bind(this), {\n      signal: this.#messageAC.signal\n    });\n  }\n  #onMessage({\n    data\n  }) {\n    if (data.targetName !== this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      this.#processStreamMessage(data);\n      return;\n    }\n    if (data.callback) {\n      const callbackId = data.callbackId;\n      const capability = this.callbackCapabilities[callbackId];\n      if (!capability) {\n        throw new Error(`Cannot resolve callback ${callbackId}`);\n      }\n      delete this.callbackCapabilities[callbackId];\n      if (data.callback === CallbackKind.DATA) {\n        capability.resolve(data.data);\n      } else if (data.callback === CallbackKind.ERROR) {\n        capability.reject(wrapReason(data.reason));\n      } else {\n        throw new Error(\"Unexpected callback case\");\n      }\n      return;\n    }\n    const action = this.actionHandler[data.action];\n    if (!action) {\n      throw new Error(`Unknown action from worker: ${data.action}`);\n    }\n    if (data.callbackId) {\n      const sourceName = this.sourceName,\n        targetName = data.sourceName,\n        comObj = this.comObj;\n      Promise.try(action, data.data).then(function (result) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          callback: CallbackKind.DATA,\n          callbackId: data.callbackId,\n          data: result\n        });\n      }, function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          callback: CallbackKind.ERROR,\n          callbackId: data.callbackId,\n          reason: wrapReason(reason)\n        });\n      });\n      return;\n    }\n    if (data.streamId) {\n      this.#createStreamSink(data);\n      return;\n    }\n    action(data.data);\n  }\n  on(actionName, handler) {\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n  send(actionName, data, transfers) {\n    this.comObj.postMessage({\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data\n    }, transfers);\n  }\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = Promise.withResolvers();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage({\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        callbackId,\n        data\n      }, transfers);\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n    return new ReadableStream({\n      start: controller => {\n        const startCapability = Promise.withResolvers();\n        this.streamControllers[streamId] = {\n          controller,\n          startCall: startCapability,\n          pullCall: null,\n          cancelCall: null,\n          isClosed: false\n        };\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          action: actionName,\n          streamId,\n          data,\n          desiredSize: controller.desiredSize\n        }, transfers);\n        return startCapability.promise;\n      },\n      pull: controller => {\n        const pullCapability = Promise.withResolvers();\n        this.streamControllers[streamId].pullCall = pullCapability;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.PULL,\n          streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: reason => {\n        assert(reason instanceof Error, \"cancel must have a valid reason\");\n        const cancelCapability = Promise.withResolvers();\n        this.streamControllers[streamId].cancelCall = cancelCapability;\n        this.streamControllers[streamId].isClosed = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CANCEL,\n          streamId,\n          reason: wrapReason(reason)\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  }\n  #createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = Promise.withResolvers();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ENQUEUE,\n          streamId,\n          chunk\n        }, transfers);\n      },\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId\n        });\n        delete self.streamSinks[streamId];\n      },\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason)\n        });\n      },\n      sinkCapability: Promise.withResolvers(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    Promise.try(action, data.data, streamSink).then(function () {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        success: true\n      });\n    }, function (reason) {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        reason: wrapReason(reason)\n      });\n    });\n  }\n  #processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n          break;\n        }\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        streamSink.desiredSize = data.desiredSize;\n        Promise.try(streamSink.onPull || onFn).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n        const dataReason = wrapReason(data.reason);\n        Promise.try(streamSink.onCancel || onFn, dataReason).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        streamSink.sinkCapability.reject(dataReason);\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n  async #deleteStreamController(streamController, streamId) {\n    await Promise.allSettled([streamController.startCall?.promise, streamController.pullCall?.promise, streamController.cancelCall?.promise]);\n    delete this.streamControllers[streamId];\n  }\n  destroy() {\n    this.#messageAC?.abort();\n    this.#messageAC = null;\n  }\n}\n\n;// ./src/display/canvas_factory.js\n\nclass BaseCanvasFactory {\n  #enableHWA = false;\n  constructor({\n    enableHWA = false\n  }) {\n    this.#enableHWA = enableHWA;\n  }\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\", {\n        willReadFrequently: !this.#enableHWA\n      })\n    };\n  }\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({\n    ownerDocument = globalThis.document,\n    enableHWA = false\n  }) {\n    super({\n      enableHWA\n    });\n    this._document = ownerDocument;\n  }\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\n;// ./src/display/cmap_reader_factory.js\n\n\n\n\n\n\n\n\n\n\nclass BaseCMapReaderFactory {\n  constructor({\n    baseUrl = null,\n    isCompressed = true\n  }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n  async fetch({\n    name\n  }) {\n    if (!this.baseUrl) {\n      throw new Error(\"Ensure that the `cMapUrl` and `cMapPacked` API parameters are provided.\");\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    return this._fetch(url).then(cMapData => ({\n      cMapData,\n      isCompressed: this.isCompressed\n    })).catch(reason => {\n      throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n    });\n  }\n  async _fetch(url) {\n    unreachable(\"Abstract method `_fetch` called.\");\n  }\n}\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  async _fetch(url) {\n    const data = await fetchData(url, this.isCompressed ? \"arraybuffer\" : \"text\");\n    return data instanceof ArrayBuffer ? new Uint8Array(data) : stringToBytes(data);\n  }\n}\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.iterator.filter.js\nvar es_iterator_filter = __webpack_require__(2489);\n;// ./src/display/filter_factory.js\n\n\n\n\nclass BaseFilterFactory {\n  addFilter(maps) {\n    return \"none\";\n  }\n  addHCMFilter(fgColor, bgColor) {\n    return \"none\";\n  }\n  addAlphaFilter(map) {\n    return \"none\";\n  }\n  addLuminosityFilter(map) {\n    return \"none\";\n  }\n  addHighlightHCMFilter(filterName, fgColor, bgColor, newFgColor, newBgColor) {\n    return \"none\";\n  }\n  destroy(keepHCM = false) {}\n}\nclass DOMFilterFactory extends BaseFilterFactory {\n  #baseUrl;\n  #_cache;\n  #_defs;\n  #docId;\n  #document;\n  #_hcmCache;\n  #id = 0;\n  constructor({\n    docId,\n    ownerDocument = globalThis.document\n  }) {\n    super();\n    this.#docId = docId;\n    this.#document = ownerDocument;\n  }\n  get #cache() {\n    return this.#_cache ||= new Map();\n  }\n  get #hcmCache() {\n    return this.#_hcmCache ||= new Map();\n  }\n  get #defs() {\n    if (!this.#_defs) {\n      const div = this.#document.createElement(\"div\");\n      const {\n        style\n      } = div;\n      style.visibility = \"hidden\";\n      style.contain = \"strict\";\n      style.width = style.height = 0;\n      style.position = \"absolute\";\n      style.top = style.left = 0;\n      style.zIndex = -1;\n      const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttribute(\"width\", 0);\n      svg.setAttribute(\"height\", 0);\n      this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n      div.append(svg);\n      svg.append(this.#_defs);\n      this.#document.body.append(div);\n    }\n    return this.#_defs;\n  }\n  #createTables(maps) {\n    if (maps.length === 1) {\n      const mapR = maps[0];\n      const buffer = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        buffer[i] = mapR[i] / 255;\n      }\n      const table = buffer.join(\",\");\n      return [table, table, table];\n    }\n    const [mapR, mapG, mapB] = maps;\n    const bufferR = new Array(256);\n    const bufferG = new Array(256);\n    const bufferB = new Array(256);\n    for (let i = 0; i < 256; i++) {\n      bufferR[i] = mapR[i] / 255;\n      bufferG[i] = mapG[i] / 255;\n      bufferB[i] = mapB[i] / 255;\n    }\n    return [bufferR.join(\",\"), bufferG.join(\",\"), bufferB.join(\",\")];\n  }\n  #createUrl(id) {\n    if (this.#baseUrl === undefined) {\n      this.#baseUrl = \"\";\n      const url = this.#document.URL;\n      if (url !== this.#document.baseURI) {\n        if (isDataScheme(url)) {\n          warn('#createUrl: ignore \"data:\"-URL for performance reasons.');\n        } else {\n          this.#baseUrl = updateUrlHash(url, \"\");\n        }\n      }\n    }\n    return `url(${this.#baseUrl}#${id})`;\n  }\n  addFilter(maps) {\n    if (!maps) {\n      return \"none\";\n    }\n    let value = this.#cache.get(maps);\n    if (value) {\n      return value;\n    }\n    const [tableR, tableG, tableB] = this.#createTables(maps);\n    const key = maps.length === 1 ? tableR : `${tableR}${tableG}${tableB}`;\n    value = this.#cache.get(key);\n    if (value) {\n      this.#cache.set(maps, value);\n      return value;\n    }\n    const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n    const url = this.#createUrl(id);\n    this.#cache.set(maps, url);\n    this.#cache.set(key, url);\n    const filter = this.#createFilter(id);\n    this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n    return url;\n  }\n  addHCMFilter(fgColor, bgColor) {\n    const key = `${fgColor}-${bgColor}`;\n    const filterName = \"base\";\n    let info = this.#hcmCache.get(filterName);\n    if (info?.key === key) {\n      return info.url;\n    }\n    if (info) {\n      info.filter?.remove();\n      info.key = key;\n      info.url = \"none\";\n      info.filter = null;\n    } else {\n      info = {\n        key,\n        url: \"none\",\n        filter: null\n      };\n      this.#hcmCache.set(filterName, info);\n    }\n    if (!fgColor || !bgColor) {\n      return info.url;\n    }\n    const fgRGB = this.#getRGB(fgColor);\n    fgColor = Util.makeHexColor(...fgRGB);\n    const bgRGB = this.#getRGB(bgColor);\n    bgColor = Util.makeHexColor(...bgRGB);\n    this.#defs.style.color = \"\";\n    if (fgColor === \"#000000\" && bgColor === \"#ffffff\" || fgColor === bgColor) {\n      return info.url;\n    }\n    const map = new Array(256);\n    for (let i = 0; i <= 255; i++) {\n      const x = i / 255;\n      map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n    }\n    const table = map.join(\",\");\n    const id = `g_${this.#docId}_hcm_filter`;\n    const filter = info.filter = this.#createFilter(id);\n    this.#addTransferMapConversion(table, table, table, filter);\n    this.#addGrayConversion(filter);\n    const getSteps = (c, n) => {\n      const start = fgRGB[c] / 255;\n      const end = bgRGB[c] / 255;\n      const arr = new Array(n + 1);\n      for (let i = 0; i <= n; i++) {\n        arr[i] = start + i / n * (end - start);\n      }\n      return arr.join(\",\");\n    };\n    this.#addTransferMapConversion(getSteps(0, 5), getSteps(1, 5), getSteps(2, 5), filter);\n    info.url = this.#createUrl(id);\n    return info.url;\n  }\n  addAlphaFilter(map) {\n    let value = this.#cache.get(map);\n    if (value) {\n      return value;\n    }\n    const [tableA] = this.#createTables([map]);\n    const key = `alpha_${tableA}`;\n    value = this.#cache.get(key);\n    if (value) {\n      this.#cache.set(map, value);\n      return value;\n    }\n    const id = `g_${this.#docId}_alpha_map_${this.#id++}`;\n    const url = this.#createUrl(id);\n    this.#cache.set(map, url);\n    this.#cache.set(key, url);\n    const filter = this.#createFilter(id);\n    this.#addTransferMapAlphaConversion(tableA, filter);\n    return url;\n  }\n  addLuminosityFilter(map) {\n    let value = this.#cache.get(map || \"luminosity\");\n    if (value) {\n      return value;\n    }\n    let tableA, key;\n    if (map) {\n      [tableA] = this.#createTables([map]);\n      key = `luminosity_${tableA}`;\n    } else {\n      key = \"luminosity\";\n    }\n    value = this.#cache.get(key);\n    if (value) {\n      this.#cache.set(map, value);\n      return value;\n    }\n    const id = `g_${this.#docId}_luminosity_map_${this.#id++}`;\n    const url = this.#createUrl(id);\n    this.#cache.set(map, url);\n    this.#cache.set(key, url);\n    const filter = this.#createFilter(id);\n    this.#addLuminosityConversion(filter);\n    if (map) {\n      this.#addTransferMapAlphaConversion(tableA, filter);\n    }\n    return url;\n  }\n  addHighlightHCMFilter(filterName, fgColor, bgColor, newFgColor, newBgColor) {\n    const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n    let info = this.#hcmCache.get(filterName);\n    if (info?.key === key) {\n      return info.url;\n    }\n    if (info) {\n      info.filter?.remove();\n      info.key = key;\n      info.url = \"none\";\n      info.filter = null;\n    } else {\n      info = {\n        key,\n        url: \"none\",\n        filter: null\n      };\n      this.#hcmCache.set(filterName, info);\n    }\n    if (!fgColor || !bgColor) {\n      return info.url;\n    }\n    const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n    let fgGray = Math.round(0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]);\n    let bgGray = Math.round(0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]);\n    let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(this.#getRGB.bind(this));\n    if (bgGray < fgGray) {\n      [fgGray, bgGray, newFgRGB, newBgRGB] = [bgGray, fgGray, newBgRGB, newFgRGB];\n    }\n    this.#defs.style.color = \"\";\n    const getSteps = (fg, bg, n) => {\n      const arr = new Array(256);\n      const step = (bgGray - fgGray) / n;\n      const newStart = fg / 255;\n      const newStep = (bg - fg) / (255 * n);\n      let prev = 0;\n      for (let i = 0; i <= n; i++) {\n        const k = Math.round(fgGray + i * step);\n        const value = newStart + i * newStep;\n        for (let j = prev; j <= k; j++) {\n          arr[j] = value;\n        }\n        prev = k + 1;\n      }\n      for (let i = prev; i < 256; i++) {\n        arr[i] = arr[prev - 1];\n      }\n      return arr.join(\",\");\n    };\n    const id = `g_${this.#docId}_hcm_${filterName}_filter`;\n    const filter = info.filter = this.#createFilter(id);\n    this.#addGrayConversion(filter);\n    this.#addTransferMapConversion(getSteps(newFgRGB[0], newBgRGB[0], 5), getSteps(newFgRGB[1], newBgRGB[1], 5), getSteps(newFgRGB[2], newBgRGB[2], 5), filter);\n    info.url = this.#createUrl(id);\n    return info.url;\n  }\n  destroy(keepHCM = false) {\n    if (keepHCM && this.#_hcmCache?.size) {\n      return;\n    }\n    this.#_defs?.parentNode.parentNode.remove();\n    this.#_defs = null;\n    this.#_cache?.clear();\n    this.#_cache = null;\n    this.#_hcmCache?.clear();\n    this.#_hcmCache = null;\n    this.#id = 0;\n  }\n  #addLuminosityConversion(filter) {\n    const feColorMatrix = this.#document.createElementNS(SVG_NS, \"feColorMatrix\");\n    feColorMatrix.setAttribute(\"type\", \"matrix\");\n    feColorMatrix.setAttribute(\"values\", \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0\");\n    filter.append(feColorMatrix);\n  }\n  #addGrayConversion(filter) {\n    const feColorMatrix = this.#document.createElementNS(SVG_NS, \"feColorMatrix\");\n    feColorMatrix.setAttribute(\"type\", \"matrix\");\n    feColorMatrix.setAttribute(\"values\", \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\");\n    filter.append(feColorMatrix);\n  }\n  #createFilter(id) {\n    const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n    filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n    filter.setAttribute(\"id\", id);\n    this.#defs.append(filter);\n    return filter;\n  }\n  #appendFeFunc(feComponentTransfer, func, table) {\n    const feFunc = this.#document.createElementNS(SVG_NS, func);\n    feFunc.setAttribute(\"type\", \"discrete\");\n    feFunc.setAttribute(\"tableValues\", table);\n    feComponentTransfer.append(feFunc);\n  }\n  #addTransferMapConversion(rTable, gTable, bTable, filter) {\n    const feComponentTransfer = this.#document.createElementNS(SVG_NS, \"feComponentTransfer\");\n    filter.append(feComponentTransfer);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n  }\n  #addTransferMapAlphaConversion(aTable, filter) {\n    const feComponentTransfer = this.#document.createElementNS(SVG_NS, \"feComponentTransfer\");\n    filter.append(feComponentTransfer);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncA\", aTable);\n  }\n  #getRGB(color) {\n    this.#defs.style.color = color;\n    return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n  }\n}\n\n;// ./src/display/standard_fontdata_factory.js\n\n\n\n\n\n\n\n\n\n\nclass BaseStandardFontDataFactory {\n  constructor({\n    baseUrl = null\n  }) {\n    this.baseUrl = baseUrl;\n  }\n  async fetch({\n    filename\n  }) {\n    if (!this.baseUrl) {\n      throw new Error(\"Ensure that the `standardFontDataUrl` API parameter is provided.\");\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n    return this._fetch(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n  async _fetch(url) {\n    unreachable(\"Abstract method `_fetch` called.\");\n  }\n}\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  async _fetch(url) {\n    const data = await fetchData(url, \"arraybuffer\");\n    return new Uint8Array(data);\n  }\n}\n\n;// ./src/display/wasm_factory.js\n\n\n\n\n\n\n\n\n\n\nclass BaseWasmFactory {\n  constructor({\n    baseUrl = null\n  }) {\n    this.baseUrl = baseUrl;\n  }\n  async fetch({\n    filename\n  }) {\n    if (!this.baseUrl) {\n      throw new Error(\"Ensure that the `wasmUrl` API parameter is provided.\");\n    }\n    if (!filename) {\n      throw new Error(\"Wasm filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n    return this._fetch(url).catch(reason => {\n      throw new Error(`Unable to load wasm data at: ${url}`);\n    });\n  }\n  async _fetch(url) {\n    unreachable(\"Abstract method `_fetch` called.\");\n  }\n}\nclass DOMWasmFactory extends BaseWasmFactory {\n  async _fetch(url) {\n    const data = await fetchData(url, \"arraybuffer\");\n    return new Uint8Array(data);\n  }\n}\n\n;// ./src/display/node_utils.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif (isNodeJS) {\n  let canvas;\n  try {\n    const require = process.getBuiltinModule(\"module\").createRequire(import.meta.url);\n    try {\n      canvas = require(\"@napi-rs/canvas\");\n    } catch (ex) {\n      warn(`Cannot load \"@napi-rs/canvas\" package: \"${ex}\".`);\n    }\n  } catch (ex) {\n    warn(`Cannot access the \\`require\\` function: \"${ex}\".`);\n  }\n  if (!globalThis.DOMMatrix) {\n    if (canvas?.DOMMatrix) {\n      globalThis.DOMMatrix = canvas.DOMMatrix;\n    } else {\n      warn(\"Cannot polyfill `DOMMatrix`, rendering may be broken.\");\n    }\n  }\n  if (!globalThis.ImageData) {\n    if (canvas?.ImageData) {\n      globalThis.ImageData = canvas.ImageData;\n    } else {\n      warn(\"Cannot polyfill `ImageData`, rendering may be broken.\");\n    }\n  }\n  if (!globalThis.Path2D) {\n    if (canvas?.Path2D) {\n      globalThis.Path2D = canvas.Path2D;\n    } else {\n      warn(\"Cannot polyfill `Path2D`, rendering may be broken.\");\n    }\n  }\n  if (!globalThis.navigator?.language) {\n    globalThis.navigator = {\n      language: \"en-US\",\n      platform: \"\",\n      userAgent: \"\"\n    };\n  }\n}\nasync function node_utils_fetchData(url) {\n  const fs = process.getBuiltinModule(\"fs\");\n  const data = await fs.promises.readFile(url);\n  return new Uint8Array(data);\n}\nclass NodeFilterFactory extends BaseFilterFactory {}\nclass NodeCanvasFactory extends BaseCanvasFactory {\n  _createCanvas(width, height) {\n    const require = process.getBuiltinModule(\"module\").createRequire(import.meta.url);\n    const canvas = require(\"@napi-rs/canvas\");\n    return canvas.createCanvas(width, height);\n  }\n}\nclass NodeCMapReaderFactory extends BaseCMapReaderFactory {\n  async _fetch(url) {\n    return node_utils_fetchData(url);\n  }\n}\nclass NodeStandardFontDataFactory extends BaseStandardFontDataFactory {\n  async _fetch(url) {\n    return node_utils_fetchData(url);\n  }\n}\nclass NodeWasmFactory extends BaseWasmFactory {\n  async _fetch(url) {\n    return node_utils_fetchData(url);\n  }\n}\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.iterator.for-each.js\nvar es_iterator_for_each = __webpack_require__(7588);\n;// ./src/display/canvas_dependency_tracker.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst FORCED_DEPENDENCY_LABEL = \"__forcedDependency\";\nconst {\n  floor,\n  ceil\n} = Math;\nfunction expandBBox(array, index, minX, minY, maxX, maxY) {\n  array[index * 4 + 0] = Math.min(array[index * 4 + 0], minX);\n  array[index * 4 + 1] = Math.min(array[index * 4 + 1], minY);\n  array[index * 4 + 2] = Math.max(array[index * 4 + 2], maxX);\n  array[index * 4 + 3] = Math.max(array[index * 4 + 3], maxY);\n}\nconst EMPTY_BBOX = new Uint32Array(new Uint8Array([255, 255, 0, 0]).buffer)[0];\nclass BBoxReader {\n  #bboxes;\n  #coords;\n  constructor(bboxes, coords) {\n    this.#bboxes = bboxes;\n    this.#coords = coords;\n  }\n  get length() {\n    return this.#bboxes.length;\n  }\n  isEmpty(i) {\n    return this.#bboxes[i] === EMPTY_BBOX;\n  }\n  minX(i) {\n    return this.#coords[i * 4 + 0] / 256;\n  }\n  minY(i) {\n    return this.#coords[i * 4 + 1] / 256;\n  }\n  maxX(i) {\n    return (this.#coords[i * 4 + 2] + 1) / 256;\n  }\n  maxY(i) {\n    return (this.#coords[i * 4 + 3] + 1) / 256;\n  }\n}\nconst ensureDebugMetadata = (map, key) => {\n  if (!map) {\n    return undefined;\n  }\n  let value = map.get(key);\n  if (!value) {\n    value = {\n      dependencies: new Set(),\n      isRenderingOperation: false\n    };\n    map.set(key, value);\n  }\n  return value;\n};\nclass CanvasDependencyTracker {\n  #simple = {\n    __proto__: null\n  };\n  #incremental = {\n    __proto__: null,\n    transform: [],\n    moveText: [],\n    sameLineText: [],\n    [FORCED_DEPENDENCY_LABEL]: []\n  };\n  #namedDependencies = new Map();\n  #savesStack = [];\n  #markedContentStack = [];\n  #baseTransformStack = [[1, 0, 0, 1, 0, 0]];\n  #clipBox = [-Infinity, -Infinity, Infinity, Infinity];\n  #pendingBBox = new Float64Array([Infinity, Infinity, -Infinity, -Infinity]);\n  #pendingBBoxIdx = -1;\n  #pendingDependencies = new Set();\n  #operations = new Map();\n  #fontBBoxTrustworthy = new Map();\n  #canvasWidth;\n  #canvasHeight;\n  #bboxesCoords;\n  #bboxes;\n  #debugMetadata;\n  constructor(canvas, operationsCount, recordDebugMetadata = false) {\n    this.#canvasWidth = canvas.width;\n    this.#canvasHeight = canvas.height;\n    this.#initializeBBoxes(operationsCount);\n    if (recordDebugMetadata) {\n      this.#debugMetadata = new Map();\n    }\n  }\n  growOperationsCount(operationsCount) {\n    if (operationsCount >= this.#bboxes.length) {\n      this.#initializeBBoxes(operationsCount, this.#bboxes);\n    }\n  }\n  #initializeBBoxes(operationsCount, oldBBoxes) {\n    const buffer = new ArrayBuffer(operationsCount * 4);\n    this.#bboxesCoords = new Uint8ClampedArray(buffer);\n    this.#bboxes = new Uint32Array(buffer);\n    if (oldBBoxes && oldBBoxes.length > 0) {\n      this.#bboxes.set(oldBBoxes);\n      this.#bboxes.fill(EMPTY_BBOX, oldBBoxes.length);\n    } else {\n      this.#bboxes.fill(EMPTY_BBOX);\n    }\n  }\n  save(opIdx) {\n    this.#simple = {\n      __proto__: this.#simple\n    };\n    this.#incremental = {\n      __proto__: this.#incremental,\n      transform: {\n        __proto__: this.#incremental.transform\n      },\n      moveText: {\n        __proto__: this.#incremental.moveText\n      },\n      sameLineText: {\n        __proto__: this.#incremental.sameLineText\n      },\n      [FORCED_DEPENDENCY_LABEL]: {\n        __proto__: this.#incremental[FORCED_DEPENDENCY_LABEL]\n      }\n    };\n    this.#clipBox = {\n      __proto__: this.#clipBox\n    };\n    this.#savesStack.push(opIdx);\n    return this;\n  }\n  restore(opIdx) {\n    const previous = Object.getPrototypeOf(this.#simple);\n    if (previous === null) {\n      return this;\n    }\n    this.#simple = previous;\n    this.#incremental = Object.getPrototypeOf(this.#incremental);\n    this.#clipBox = Object.getPrototypeOf(this.#clipBox);\n    const lastSave = this.#savesStack.pop();\n    if (lastSave !== undefined) {\n      ensureDebugMetadata(this.#debugMetadata, opIdx)?.dependencies.add(lastSave);\n      this.#bboxes[opIdx] = this.#bboxes[lastSave];\n    }\n    return this;\n  }\n  recordOpenMarker(idx) {\n    this.#savesStack.push(idx);\n    return this;\n  }\n  getOpenMarker() {\n    if (this.#savesStack.length === 0) {\n      return null;\n    }\n    return this.#savesStack.at(-1);\n  }\n  recordCloseMarker(opIdx) {\n    const lastSave = this.#savesStack.pop();\n    if (lastSave !== undefined) {\n      ensureDebugMetadata(this.#debugMetadata, opIdx)?.dependencies.add(lastSave);\n      this.#bboxes[opIdx] = this.#bboxes[lastSave];\n    }\n    return this;\n  }\n  beginMarkedContent(opIdx) {\n    this.#markedContentStack.push(opIdx);\n    return this;\n  }\n  endMarkedContent(opIdx) {\n    const lastSave = this.#markedContentStack.pop();\n    if (lastSave !== undefined) {\n      ensureDebugMetadata(this.#debugMetadata, opIdx)?.dependencies.add(lastSave);\n      this.#bboxes[opIdx] = this.#bboxes[lastSave];\n    }\n    return this;\n  }\n  pushBaseTransform(ctx) {\n    this.#baseTransformStack.push(Util.multiplyByDOMMatrix(this.#baseTransformStack.at(-1), ctx.getTransform()));\n    return this;\n  }\n  popBaseTransform() {\n    if (this.#baseTransformStack.length > 1) {\n      this.#baseTransformStack.pop();\n    }\n    return this;\n  }\n  recordSimpleData(name, idx) {\n    this.#simple[name] = idx;\n    return this;\n  }\n  recordIncrementalData(name, idx) {\n    this.#incremental[name].push(idx);\n    return this;\n  }\n  resetIncrementalData(name, idx) {\n    this.#incremental[name].length = 0;\n    return this;\n  }\n  recordNamedData(name, idx) {\n    this.#namedDependencies.set(name, idx);\n    return this;\n  }\n  recordSimpleDataFromNamed(name, depName, fallbackIdx) {\n    this.#simple[name] = this.#namedDependencies.get(depName) ?? fallbackIdx;\n  }\n  recordFutureForcedDependency(name, idx) {\n    this.recordIncrementalData(FORCED_DEPENDENCY_LABEL, idx);\n    return this;\n  }\n  inheritSimpleDataAsFutureForcedDependencies(names) {\n    for (const name of names) {\n      if (name in this.#simple) {\n        this.recordFutureForcedDependency(name, this.#simple[name]);\n      }\n    }\n    return this;\n  }\n  inheritPendingDependenciesAsFutureForcedDependencies() {\n    for (const dep of this.#pendingDependencies) {\n      this.recordFutureForcedDependency(FORCED_DEPENDENCY_LABEL, dep);\n    }\n    return this;\n  }\n  resetBBox(idx) {\n    if (this.#pendingBBoxIdx !== idx) {\n      this.#pendingBBoxIdx = idx;\n      this.#pendingBBox[0] = Infinity;\n      this.#pendingBBox[1] = Infinity;\n      this.#pendingBBox[2] = -Infinity;\n      this.#pendingBBox[3] = -Infinity;\n    }\n    return this;\n  }\n  recordClipBox(idx, ctx, minX, maxX, minY, maxY) {\n    const transform = Util.multiplyByDOMMatrix(this.#baseTransformStack.at(-1), ctx.getTransform());\n    const clipBox = [Infinity, Infinity, -Infinity, -Infinity];\n    Util.axialAlignedBoundingBox([minX, minY, maxX, maxY], transform, clipBox);\n    const intersection = Util.intersect(this.#clipBox, clipBox);\n    if (intersection) {\n      this.#clipBox[0] = intersection[0];\n      this.#clipBox[1] = intersection[1];\n      this.#clipBox[2] = intersection[2];\n      this.#clipBox[3] = intersection[3];\n    } else {\n      this.#clipBox[0] = this.#clipBox[1] = Infinity;\n      this.#clipBox[2] = this.#clipBox[3] = -Infinity;\n    }\n    return this;\n  }\n  recordBBox(idx, ctx, minX, maxX, minY, maxY) {\n    const clipBox = this.#clipBox;\n    if (clipBox[0] === Infinity) {\n      return this;\n    }\n    const transform = Util.multiplyByDOMMatrix(this.#baseTransformStack.at(-1), ctx.getTransform());\n    if (clipBox[0] === -Infinity) {\n      Util.axialAlignedBoundingBox([minX, minY, maxX, maxY], transform, this.#pendingBBox);\n      return this;\n    }\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    Util.axialAlignedBoundingBox([minX, minY, maxX, maxY], transform, bbox);\n    this.#pendingBBox[0] = Math.min(this.#pendingBBox[0], Math.max(bbox[0], clipBox[0]));\n    this.#pendingBBox[1] = Math.min(this.#pendingBBox[1], Math.max(bbox[1], clipBox[1]));\n    this.#pendingBBox[2] = Math.max(this.#pendingBBox[2], Math.min(bbox[2], clipBox[2]));\n    this.#pendingBBox[3] = Math.max(this.#pendingBBox[3], Math.min(bbox[3], clipBox[3]));\n    return this;\n  }\n  recordCharacterBBox(idx, ctx, font, scale = 1, x = 0, y = 0, getMeasure) {\n    const fontBBox = font.bbox;\n    let isBBoxTrustworthy;\n    let computedBBox;\n    if (fontBBox) {\n      isBBoxTrustworthy = fontBBox[2] !== fontBBox[0] && fontBBox[3] !== fontBBox[1] && this.#fontBBoxTrustworthy.get(font);\n      if (isBBoxTrustworthy !== false) {\n        computedBBox = [0, 0, 0, 0];\n        Util.axialAlignedBoundingBox(fontBBox, font.fontMatrix, computedBBox);\n        if (scale !== 1 || x !== 0 || y !== 0) {\n          Util.scaleMinMax([scale, 0, 0, -scale, x, y], computedBBox);\n        }\n        if (isBBoxTrustworthy) {\n          return this.recordBBox(idx, ctx, computedBBox[0], computedBBox[2], computedBBox[1], computedBBox[3]);\n        }\n      }\n    }\n    if (!getMeasure) {\n      return this.recordFullPageBBox(idx);\n    }\n    const measure = getMeasure();\n    if (fontBBox && computedBBox && isBBoxTrustworthy === undefined) {\n      isBBoxTrustworthy = computedBBox[0] <= x - measure.actualBoundingBoxLeft && computedBBox[2] >= x + measure.actualBoundingBoxRight && computedBBox[1] <= y - measure.actualBoundingBoxAscent && computedBBox[3] >= y + measure.actualBoundingBoxDescent;\n      this.#fontBBoxTrustworthy.set(font, isBBoxTrustworthy);\n      if (isBBoxTrustworthy) {\n        return this.recordBBox(idx, ctx, computedBBox[0], computedBBox[2], computedBBox[1], computedBBox[3]);\n      }\n    }\n    return this.recordBBox(idx, ctx, x - measure.actualBoundingBoxLeft, x + measure.actualBoundingBoxRight, y - measure.actualBoundingBoxAscent, y + measure.actualBoundingBoxDescent);\n  }\n  recordFullPageBBox(idx) {\n    this.#pendingBBox[0] = Math.max(0, this.#clipBox[0]);\n    this.#pendingBBox[1] = Math.max(0, this.#clipBox[1]);\n    this.#pendingBBox[2] = Math.min(this.#canvasWidth, this.#clipBox[2]);\n    this.#pendingBBox[3] = Math.min(this.#canvasHeight, this.#clipBox[3]);\n    return this;\n  }\n  getSimpleIndex(dependencyName) {\n    return this.#simple[dependencyName];\n  }\n  recordDependencies(idx, dependencyNames) {\n    const pendingDependencies = this.#pendingDependencies;\n    const simple = this.#simple;\n    const incremental = this.#incremental;\n    for (const name of dependencyNames) {\n      if (name in this.#simple) {\n        pendingDependencies.add(simple[name]);\n      } else if (name in incremental) {\n        incremental[name].forEach(pendingDependencies.add, pendingDependencies);\n      }\n    }\n    return this;\n  }\n  recordNamedDependency(idx, name) {\n    if (this.#namedDependencies.has(name)) {\n      this.#pendingDependencies.add(this.#namedDependencies.get(name));\n    }\n    return this;\n  }\n  recordOperation(idx, preserve = false) {\n    this.recordDependencies(idx, [FORCED_DEPENDENCY_LABEL]);\n    if (this.#debugMetadata) {\n      const metadata = ensureDebugMetadata(this.#debugMetadata, idx);\n      const {\n        dependencies\n      } = metadata;\n      this.#pendingDependencies.forEach(dependencies.add, dependencies);\n      this.#savesStack.forEach(dependencies.add, dependencies);\n      this.#markedContentStack.forEach(dependencies.add, dependencies);\n      dependencies.delete(idx);\n      metadata.isRenderingOperation = true;\n    }\n    if (this.#pendingBBoxIdx === idx) {\n      const minX = floor(this.#pendingBBox[0] * 256 / this.#canvasWidth);\n      const minY = floor(this.#pendingBBox[1] * 256 / this.#canvasHeight);\n      const maxX = ceil(this.#pendingBBox[2] * 256 / this.#canvasWidth);\n      const maxY = ceil(this.#pendingBBox[3] * 256 / this.#canvasHeight);\n      expandBBox(this.#bboxesCoords, idx, minX, minY, maxX, maxY);\n      for (const depIdx of this.#pendingDependencies) {\n        if (depIdx !== idx) {\n          expandBBox(this.#bboxesCoords, depIdx, minX, minY, maxX, maxY);\n        }\n      }\n      for (const saveIdx of this.#savesStack) {\n        if (saveIdx !== idx) {\n          expandBBox(this.#bboxesCoords, saveIdx, minX, minY, maxX, maxY);\n        }\n      }\n      for (const saveIdx of this.#markedContentStack) {\n        if (saveIdx !== idx) {\n          expandBBox(this.#bboxesCoords, saveIdx, minX, minY, maxX, maxY);\n        }\n      }\n      if (!preserve) {\n        this.#pendingDependencies.clear();\n        this.#pendingBBoxIdx = -1;\n      }\n    }\n    return this;\n  }\n  recordShowTextOperation(idx, preserve = false) {\n    const deps = Array.from(this.#pendingDependencies);\n    this.recordOperation(idx, preserve);\n    this.recordIncrementalData(\"sameLineText\", idx);\n    for (const dep of deps) {\n      this.recordIncrementalData(\"sameLineText\", dep);\n    }\n    return this;\n  }\n  bboxToClipBoxDropOperation(idx, preserve = false) {\n    if (this.#pendingBBoxIdx === idx) {\n      this.#pendingBBoxIdx = -1;\n      this.#clipBox[0] = Math.max(this.#clipBox[0], this.#pendingBBox[0]);\n      this.#clipBox[1] = Math.max(this.#clipBox[1], this.#pendingBBox[1]);\n      this.#clipBox[2] = Math.min(this.#clipBox[2], this.#pendingBBox[2]);\n      this.#clipBox[3] = Math.min(this.#clipBox[3], this.#pendingBBox[3]);\n      if (!preserve) {\n        this.#pendingDependencies.clear();\n      }\n    }\n    return this;\n  }\n  _takePendingDependencies() {\n    const pendingDependencies = this.#pendingDependencies;\n    this.#pendingDependencies = new Set();\n    return pendingDependencies;\n  }\n  _extractOperation(idx) {\n    const operation = this.#operations.get(idx);\n    this.#operations.delete(idx);\n    return operation;\n  }\n  _pushPendingDependencies(dependencies) {\n    for (const dep of dependencies) {\n      this.#pendingDependencies.add(dep);\n    }\n  }\n  take() {\n    this.#fontBBoxTrustworthy.clear();\n    return new BBoxReader(this.#bboxes, this.#bboxesCoords);\n  }\n  takeDebugMetadata() {\n    return this.#debugMetadata;\n  }\n}\nclass CanvasNestedDependencyTracker {\n  #dependencyTracker;\n  #opIdx;\n  #ignoreBBoxes;\n  #nestingLevel = 0;\n  #savesLevel = 0;\n  constructor(dependencyTracker, opIdx, ignoreBBoxes) {\n    if (dependencyTracker instanceof CanvasNestedDependencyTracker && dependencyTracker.#ignoreBBoxes === !!ignoreBBoxes) {\n      return dependencyTracker;\n    }\n    this.#dependencyTracker = dependencyTracker;\n    this.#opIdx = opIdx;\n    this.#ignoreBBoxes = !!ignoreBBoxes;\n  }\n  growOperationsCount() {\n    throw new Error(\"Unreachable\");\n  }\n  save(opIdx) {\n    this.#savesLevel++;\n    this.#dependencyTracker.save(this.#opIdx);\n    return this;\n  }\n  restore(opIdx) {\n    if (this.#savesLevel > 0) {\n      this.#dependencyTracker.restore(this.#opIdx);\n      this.#savesLevel--;\n    }\n    return this;\n  }\n  recordOpenMarker(idx) {\n    this.#nestingLevel++;\n    return this;\n  }\n  getOpenMarker() {\n    return this.#nestingLevel > 0 ? this.#opIdx : this.#dependencyTracker.getOpenMarker();\n  }\n  recordCloseMarker(idx) {\n    this.#nestingLevel--;\n    return this;\n  }\n  beginMarkedContent(opIdx) {\n    return this;\n  }\n  endMarkedContent(opIdx) {\n    return this;\n  }\n  pushBaseTransform(ctx) {\n    this.#dependencyTracker.pushBaseTransform(ctx);\n    return this;\n  }\n  popBaseTransform() {\n    this.#dependencyTracker.popBaseTransform();\n    return this;\n  }\n  recordSimpleData(name, idx) {\n    this.#dependencyTracker.recordSimpleData(name, this.#opIdx);\n    return this;\n  }\n  recordIncrementalData(name, idx) {\n    this.#dependencyTracker.recordIncrementalData(name, this.#opIdx);\n    return this;\n  }\n  resetIncrementalData(name, idx) {\n    this.#dependencyTracker.resetIncrementalData(name, this.#opIdx);\n    return this;\n  }\n  recordNamedData(name, idx) {\n    return this;\n  }\n  recordSimpleDataFromNamed(name, depName, fallbackIdx) {\n    this.#dependencyTracker.recordSimpleDataFromNamed(name, depName, this.#opIdx);\n    return this;\n  }\n  recordFutureForcedDependency(name, idx) {\n    this.#dependencyTracker.recordFutureForcedDependency(name, this.#opIdx);\n    return this;\n  }\n  inheritSimpleDataAsFutureForcedDependencies(names) {\n    this.#dependencyTracker.inheritSimpleDataAsFutureForcedDependencies(names);\n    return this;\n  }\n  inheritPendingDependenciesAsFutureForcedDependencies() {\n    this.#dependencyTracker.inheritPendingDependenciesAsFutureForcedDependencies();\n    return this;\n  }\n  resetBBox(idx) {\n    if (!this.#ignoreBBoxes) {\n      this.#dependencyTracker.resetBBox(this.#opIdx);\n    }\n    return this;\n  }\n  recordClipBox(idx, ctx, minX, maxX, minY, maxY) {\n    if (!this.#ignoreBBoxes) {\n      this.#dependencyTracker.recordClipBox(this.#opIdx, ctx, minX, maxX, minY, maxY);\n    }\n    return this;\n  }\n  recordBBox(idx, ctx, minX, maxX, minY, maxY) {\n    if (!this.#ignoreBBoxes) {\n      this.#dependencyTracker.recordBBox(this.#opIdx, ctx, minX, maxX, minY, maxY);\n    }\n    return this;\n  }\n  recordCharacterBBox(idx, ctx, font, scale, x, y, getMeasure) {\n    if (!this.#ignoreBBoxes) {\n      this.#dependencyTracker.recordCharacterBBox(this.#opIdx, ctx, font, scale, x, y, getMeasure);\n    }\n    return this;\n  }\n  recordFullPageBBox(idx) {\n    if (!this.#ignoreBBoxes) {\n      this.#dependencyTracker.recordFullPageBBox(this.#opIdx);\n    }\n    return this;\n  }\n  getSimpleIndex(dependencyName) {\n    return this.#dependencyTracker.getSimpleIndex(dependencyName);\n  }\n  recordDependencies(idx, dependencyNames) {\n    this.#dependencyTracker.recordDependencies(this.#opIdx, dependencyNames);\n    return this;\n  }\n  recordNamedDependency(idx, name) {\n    this.#dependencyTracker.recordNamedDependency(this.#opIdx, name);\n    return this;\n  }\n  recordOperation(idx) {\n    this.#dependencyTracker.recordOperation(this.#opIdx, true);\n    return this;\n  }\n  recordShowTextOperation(idx) {\n    this.#dependencyTracker.recordShowTextOperation(this.#opIdx, true);\n    return this;\n  }\n  bboxToClipBoxDropOperation(idx) {\n    if (!this.#ignoreBBoxes) {\n      this.#dependencyTracker.bboxToClipBoxDropOperation(this.#opIdx, true);\n    }\n    return this;\n  }\n  take() {\n    throw new Error(\"Unreachable\");\n  }\n  takeDebugMetadata() {\n    throw new Error(\"Unreachable\");\n  }\n}\nconst Dependencies = {\n  stroke: [\"path\", \"transform\", \"filter\", \"strokeColor\", \"strokeAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"dash\"],\n  fill: [\"path\", \"transform\", \"filter\", \"fillColor\", \"fillAlpha\", \"globalCompositeOperation\", \"SMask\"],\n  imageXObject: [\"transform\", \"SMask\", \"filter\", \"fillAlpha\", \"strokeAlpha\", \"globalCompositeOperation\"],\n  rawFillPath: [\"filter\", \"fillColor\", \"fillAlpha\"],\n  showText: [\"transform\", \"leading\", \"charSpacing\", \"wordSpacing\", \"hScale\", \"textRise\", \"moveText\", \"textMatrix\", \"font\", \"fontObj\", \"filter\", \"fillColor\", \"textRenderingMode\", \"SMask\", \"fillAlpha\", \"strokeAlpha\", \"globalCompositeOperation\", \"sameLineText\"],\n  transform: [\"transform\"],\n  transformAndFill: [\"transform\", \"fillColor\"]\n};\n\n;// ./src/display/pattern_helper.js\n\n\n\n\n\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\"\n};\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox) {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\nclass BaseShadingPattern {\n  isModifyingCurrentTransform() {\n    return false;\n  }\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n    }\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, getCurrentTransform(ctx)) || [0, 0, 0, 0];\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height);\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [1, 0, 0, 1, ownerBBox[0], ownerBBox[1]]);\n      tmpCtx.transform(...owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform(...this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      pattern.setTransform(domMatrix);\n    } else {\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = car - (car - cbr) * k | 0;\n      bytes[j++] = cag - (cag - cbg) * k | 0;\n      bytes[j++] = cab - (cab - cbb) * k | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n          drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[6];\n    this._background = IR[7];\n    this.matrix = null;\n  }\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    const EXPECTED_SCALE = 1.1;\n    const MAX_PATTERN_SIZE = 3000;\n    const BORDER_SIZE = 2;\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n    const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY\n    };\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n    const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight);\n    const tmpCtx = tmpCanvas.context;\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY\n    };\n  }\n  isModifyingCurrentTransform() {\n    return true;\n  }\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    const scale = new Float32Array(2);\n    if (pathType === PathType.SHADING) {\n      Util.singularValueDecompose2dScale(getCurrentTransform(ctx), scale);\n    } else if (this.matrix) {\n      Util.singularValueDecompose2dScale(this.matrix, scale);\n      const [matrixScaleX, matrixScaleY] = scale;\n      Util.singularValueDecompose2dScale(owner.baseTransform, scale);\n      scale[0] *= matrixScaleX;\n      scale[1] *= matrixScaleY;\n    } else {\n      Util.singularValueDecompose2dScale(owner.baseTransform, scale);\n    }\n    const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform(...owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform(...this.matrix);\n      }\n    }\n    ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2\n};\nclass TilingPattern {\n  static MAX_PATTERN_SIZE = 3000;\n  constructor(IR, ctx, canvasGraphicsFactory, baseTransform) {\n    this.color = IR[1];\n    this.operatorList = IR[2];\n    this.matrix = IR[3];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n  createPatternCanvas(owner, opIdx) {\n    const {\n      bbox,\n      operatorList,\n      paintType,\n      tilingType,\n      color,\n      canvasGraphicsFactory\n    } = this;\n    let {\n      xstep,\n      ystep\n    } = this;\n    xstep = Math.abs(xstep);\n    ystep = Math.abs(ystep);\n    info(\"TilingType: \" + tilingType);\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n    const width = x1 - x0;\n    const height = y1 - y0;\n    const scale = new Float32Array(2);\n    Util.singularValueDecompose2dScale(this.matrix, scale);\n    const [matrixScaleX, matrixScaleY] = scale;\n    Util.singularValueDecompose2dScale(this.baseTransform, scale);\n    const combinedScaleX = matrixScaleX * scale[0];\n    const combinedScaleY = matrixScaleY * scale[1];\n    let canvasWidth = width,\n      canvasHeight = height,\n      redrawHorizontally = false,\n      redrawVertically = false;\n    const xScaledStep = Math.ceil(xstep * combinedScaleX);\n    const yScaledStep = Math.ceil(ystep * combinedScaleY);\n    const xScaledWidth = Math.ceil(width * combinedScaleX);\n    const yScaledHeight = Math.ceil(height * combinedScaleY);\n    if (xScaledStep >= xScaledWidth) {\n      canvasWidth = xstep;\n    } else {\n      redrawHorizontally = true;\n    }\n    if (yScaledStep >= yScaledHeight) {\n      canvasHeight = ystep;\n    } else {\n      redrawVertically = true;\n    }\n    const dimx = this.getSizeAndScale(canvasWidth, this.ctx.canvas.width, combinedScaleX);\n    const dimy = this.getSizeAndScale(canvasHeight, this.ctx.canvas.height, combinedScaleY);\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size);\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx, opIdx);\n    graphics.groupLevel = owner.groupLevel;\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n    tmpCtx.translate(-dimx.scale * x0, -dimy.scale * y0);\n    graphics.transform(0, dimx.scale, 0, 0, dimy.scale, 0, 0);\n    tmpCtx.save();\n    graphics.dependencyTracker?.save();\n    this.clipBbox(graphics, x0, y0, x1, y1);\n    graphics.baseTransform = getCurrentTransform(graphics.ctx);\n    graphics.executeOperatorList(operatorList);\n    graphics.endDrawing();\n    graphics.dependencyTracker?.restore();\n    tmpCtx.restore();\n    if (redrawHorizontally || redrawVertically) {\n      const image = tmpCanvas.canvas;\n      if (redrawHorizontally) {\n        canvasWidth = xstep;\n      }\n      if (redrawVertically) {\n        canvasHeight = ystep;\n      }\n      const dimx2 = this.getSizeAndScale(canvasWidth, this.ctx.canvas.width, combinedScaleX);\n      const dimy2 = this.getSizeAndScale(canvasHeight, this.ctx.canvas.height, combinedScaleY);\n      const xSize = dimx2.size;\n      const ySize = dimy2.size;\n      const tmpCanvas2 = owner.cachedCanvases.getCanvas(\"pattern-workaround\", xSize, ySize);\n      const tmpCtx2 = tmpCanvas2.context;\n      const ii = redrawHorizontally ? Math.floor(width / xstep) : 0;\n      const jj = redrawVertically ? Math.floor(height / ystep) : 0;\n      for (let i = 0; i <= ii; i++) {\n        for (let j = 0; j <= jj; j++) {\n          tmpCtx2.drawImage(image, xSize * i, ySize * j, xSize, ySize, 0, 0, xSize, ySize);\n        }\n      }\n      return {\n        canvas: tmpCanvas2.canvas,\n        scaleX: dimx2.scale,\n        scaleY: dimy2.scale,\n        offsetX: x0,\n        offsetY: y0\n      };\n    }\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: x0,\n      offsetY: y0\n    };\n  }\n  getSizeAndScale(step, realOutputSize, scale) {\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return {\n      scale,\n      size\n    };\n  }\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    Util.axialAlignedBoundingBox([x0, y0, x1, y1], getCurrentTransform(graphics.ctx), graphics.current.minMax);\n    graphics.clip();\n    graphics.endPath();\n  }\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const {\n          fillStyle,\n          strokeStyle\n        } = this.ctx;\n        context.fillStyle = current.fillColor = fillStyle;\n        context.strokeStyle = current.strokeColor = strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        context.fillStyle = context.strokeStyle = color;\n        current.fillColor = current.strokeColor = color;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n  isModifyingCurrentTransform() {\n    return false;\n  }\n  getPattern(ctx, owner, inverse, pathType, opIdx) {\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n    const temporaryPatternCanvas = this.createPatternCanvas(owner, opIdx);\n    let domMatrix = new DOMMatrix(matrix);\n    domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n    domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    pattern.setTransform(domMatrix);\n    return pattern;\n  }\n}\n\n;// ./src/shared/image_utils.js\n\n\n\n\n\nfunction convertToRGBA(params) {\n  switch (params.kind) {\n    case ImageKind.GRAYSCALE_1BPP:\n      return convertBlackAndWhiteToRGBA(params);\n    case ImageKind.RGB_24BPP:\n      return convertRGBToRGBA(params);\n  }\n  return null;\n}\nfunction convertBlackAndWhiteToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  width,\n  height,\n  nonBlackColor = 0xffffffff,\n  inverseDecode = false\n}) {\n  const black = util_FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = inverseDecode ? [nonBlackColor, black] : [black, nonBlackColor];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n  let destPos = 0;\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n    if (widthRemainder === 0) {\n      continue;\n    }\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & 1 << 7 - j ? oneMapping : zeroMapping;\n    }\n  }\n  return {\n    srcPos,\n    destPos\n  };\n}\nfunction convertRGBToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height\n}) {\n  let i = 0;\n  const len = width * height * 3;\n  const len32 = len >> 2;\n  const src32 = new Uint32Array(src.buffer, srcPos, len32);\n  if (FeatureTest.isLittleEndian) {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i];\n      const s2 = src32[i + 1];\n      const s3 = src32[i + 2];\n      dest[destPos] = s1 | 0xff000000;\n      dest[destPos + 1] = s1 >>> 24 | s2 << 8 | 0xff000000;\n      dest[destPos + 2] = s2 >>> 16 | s3 << 16 | 0xff000000;\n      dest[destPos + 3] = s3 >>> 8 | 0xff000000;\n    }\n    for (let j = i * 4, jj = srcPos + len; j < jj; j += 3) {\n      dest[destPos++] = src[j] | src[j + 1] << 8 | src[j + 2] << 16 | 0xff000000;\n    }\n  } else {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i];\n      const s2 = src32[i + 1];\n      const s3 = src32[i + 2];\n      dest[destPos] = s1 | 0xff;\n      dest[destPos + 1] = s1 << 24 | s2 >>> 8 | 0xff;\n      dest[destPos + 2] = s2 << 16 | s3 >>> 16 | 0xff;\n      dest[destPos + 3] = s3 << 8 | 0xff;\n    }\n    for (let j = i * 4, jj = srcPos + len; j < jj; j += 3) {\n      dest[destPos++] = src[j] << 24 | src[j + 1] << 16 | src[j + 2] << 8 | 0xff;\n    }\n  }\n  return {\n    srcPos: srcPos + len,\n    destPos\n  };\n}\nfunction grayToRGBA(src, dest) {\n  if (FeatureTest.isLittleEndian) {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = src[i] * 0x10101 | 0xff000000;\n    }\n  } else {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = src[i] * 0x1010100 | 0x000000ff;\n    }\n  }\n}\n\n;// ./src/display/canvas.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst MIN_FONT_SIZE = 16;\nconst MAX_FONT_SIZE = 100;\nconst EXECUTION_TIME = 15;\nconst EXECUTION_STEPS = 10;\nconst FULL_CHUNK_HEIGHT = 16;\nconst SCALE_MATRIX = new DOMMatrix();\nconst XY = new Float32Array(2);\nconst MIN_MAX_INIT = new Float32Array([Infinity, Infinity, -Infinity, -Infinity]);\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n  ctx.save = function () {\n    destCtx.save();\n    this.__originalSave();\n  };\n  ctx.restore = function () {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n  ctx.translate = function (x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n  ctx.scale = function (x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n  ctx.transform = function (a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n  ctx.setTransform = function (a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n  ctx.resetTransform = function () {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n  ctx.rotate = function (angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n  ctx.clip = function (rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  getCanvas(id, width, height) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    return canvasEntry;\n  }\n  delete(id) {\n    delete this.cache[id];\n  }\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\nfunction drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) {\n  const [a, b, c, d, tx, ty] = getCurrentTransform(ctx);\n  if (b === 0 && c === 0) {\n    const tlX = destX * a + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destY * d + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destX + destW) * a + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destY + destH) * d + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n    ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n    ctx.setTransform(a, b, c, d, tx, ty);\n    return [rWidth, rHeight];\n  }\n  if (a === 0 && d === 0) {\n    const tlX = destY * c + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destX * b + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destY + destH) * c + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destX + destW) * b + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n    ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n    ctx.setTransform(a, b, c, d, tx, ty);\n    return [rHeight, rWidth];\n  }\n  ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n  const scaleX = Math.hypot(a, b);\n  const scaleY = Math.hypot(c, d);\n  return [scaleX * destW, scaleY * destH];\n}\nclass CanvasExtraState {\n  alphaIsShape = false;\n  fontSize = 0;\n  fontSizeScale = 1;\n  textMatrix = null;\n  textMatrixScale = 1;\n  fontMatrix = FONT_IDENTITY_MATRIX;\n  leading = 0;\n  x = 0;\n  y = 0;\n  lineX = 0;\n  lineY = 0;\n  charSpacing = 0;\n  wordSpacing = 0;\n  textHScale = 1;\n  textRenderingMode = TextRenderingMode.FILL;\n  textRise = 0;\n  fillColor = \"#000000\";\n  strokeColor = \"#000000\";\n  patternFill = false;\n  patternStroke = false;\n  fillAlpha = 1;\n  strokeAlpha = 1;\n  lineWidth = 1;\n  activeSMask = null;\n  transferMaps = \"none\";\n  constructor(width, height, preInit) {\n    preInit?.(this);\n    this.clipBox = new Float32Array([0, 0, width, height]);\n    this.minMax = MIN_MAX_INIT.slice();\n  }\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    clone.minMax = this.minMax.slice();\n    return clone;\n  }\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = this.minMax.slice();\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      Util.singularValueDecompose2dScale(transform, XY);\n      const xStrokePad = XY[0] * this.lineWidth / 2;\n      const yStrokePad = XY[1] * this.lineWidth / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n  isEmptyClip() {\n    return this.minMax[0] === Infinity;\n  }\n  startNewPathAndClipBox(box) {\n    this.clipBox.set(box, 0);\n    this.minMax.set(MIN_MAX_INIT, 0);\n  }\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n  }\n}\nfunction putBinaryImageData(ctx, imgData) {\n  if (imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n  if (imgData.kind === util_ImageKind.GRAYSCALE_1BPP) {\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = width + 7 >> 3;\n    const white = 0xffffffff;\n    const black = util_FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === util_ImageKind.RGBA_32BPP) {\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === util_ImageKind.RGB_24BPP) {\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n      destPos = 0;\n      for (j = elemsInThisChunk; j--;) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\nfunction putBinaryImageMask(ctx, imgData) {\n  if (imgData.bitmap) {\n    ctx.drawImage(imgData.bitmap, 0, 0);\n    return;\n  }\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n    ({\n      srcPos\n    } = convertBlackAndWhiteToRGBA({\n      src,\n      srcPos,\n      dest,\n      width,\n      height: thisChunkHeight,\n      nonBlackColor: 0\n    }));\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\", \"filter\"];\n  for (const property of properties) {\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n  const {\n    filter\n  } = ctx;\n  if (filter !== \"none\" && filter !== \"\") {\n    ctx.filter = \"none\";\n  }\n}\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  if (interpolate) {\n    return true;\n  }\n  Util.singularValueDecompose2dScale(transform, XY);\n  const actualScale = Math.fround(OutputScale.pixelRatio * PixelsPerInch.PDF_TO_CSS_UNITS);\n  return XY[0] <= actualScale && XY[1] <= actualScale;\n}\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\nclass CanvasGraphics {\n  constructor(canvasCtx, commonObjs, objs, canvasFactory, filterFactory, {\n    optionalContentConfig,\n    markedContentStack = null\n  }, annotationCanvasMap, pageColors, dependencyTracker) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this.groupStack = [];\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = markedContentStack || [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    this.pageColors = pageColors;\n    this._cachedScaleForStroking = [-1, 0];\n    this._cachedGetSinglePixelWidth = null;\n    this._cachedBitmapsMap = new Map();\n    this.dependencyTracker = dependencyTracker ?? null;\n  }\n  getObject(opIdx, data, fallback = null) {\n    if (typeof data === \"string\") {\n      this.dependencyTracker?.recordNamedDependency(opIdx, data);\n      return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n    }\n    return fallback;\n  }\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null\n  }) {\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n    const savedFillStyle = this.ctx.fillStyle;\n    this.ctx.fillStyle = background || \"#ffffff\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.fillStyle = savedFillStyle;\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height);\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      this.ctx.transform(...getCurrentTransform(this.compositeCtx));\n    }\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform(...transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform(...viewport.transform);\n    this.viewportScale = viewport.scale;\n    this.baseTransform = getCurrentTransform(this.ctx);\n  }\n  executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper, operationsFilter) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n    if (argsArrayLen === i) {\n      return i;\n    }\n    const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId, fnArgs;\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n      if (!operationsFilter || operationsFilter(i)) {\n        fnId = fnArray[i];\n        fnArgs = argsArray[i] ?? null;\n        if (fnId !== OPS.dependency) {\n          if (fnArgs === null) {\n            this[fnId](i);\n          } else {\n            this[fnId](i, ...fnArgs);\n          }\n        } else {\n          for (const depObjId of fnArgs) {\n            this.dependencyTracker?.recordNamedData(depObjId, i);\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n      }\n      i++;\n      if (i === argsArrayLen) {\n        return i;\n      }\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n    }\n  }\n  #restoreInitialState() {\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n    this.current.activeSMask = null;\n    this.ctx.restore();\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n  }\n  endDrawing() {\n    this.#restoreInitialState();\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n    for (const cache of this._cachedBitmapsMap.values()) {\n      for (const canvas of cache.values()) {\n        if (typeof HTMLCanvasElement !== \"undefined\" && canvas instanceof HTMLCanvasElement) {\n          canvas.width = canvas.height = 0;\n        }\n      }\n      cache.clear();\n    }\n    this._cachedBitmapsMap.clear();\n    this.#drawFilter();\n  }\n  #drawFilter() {\n    if (this.pageColors) {\n      const hcmFilterId = this.filterFactory.addHCMFilter(this.pageColors.foreground, this.pageColors.background);\n      if (hcmFilterId !== \"none\") {\n        const savedFilter = this.ctx.filter;\n        this.ctx.filter = hcmFilterId;\n        this.ctx.drawImage(this.ctx.canvas, 0, 0);\n        this.ctx.filter = savedFilter;\n      }\n    }\n  }\n  _scaleImage(img, inverseTransform) {\n    const width = img.width ?? img.displayWidth;\n    const height = img.height ?? img.displayHeight;\n    let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n    let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = paintWidth >= 16384 ? Math.floor(paintWidth / 2) - 1 || 1 : Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = paintHeight >= 16384 ? Math.floor(paintHeight / 2) - 1 || 1 : Math.ceil(paintHeight) / 2;\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight\n    };\n  }\n  _createMaskCanvas(opIdx, img) {\n    const ctx = this.ctx;\n    const {\n      width,\n      height\n    } = img;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const currentTransform = getCurrentTransform(ctx);\n    let cache, cacheKey, scaled, maskCanvas;\n    if ((img.bitmap || img.data) && img.count > 1) {\n      const mainKey = img.bitmap || img.data.buffer;\n      cacheKey = JSON.stringify(isPatternFill ? currentTransform : [currentTransform.slice(0, 4), fillColor]);\n      cache = this._cachedBitmapsMap.get(mainKey);\n      if (!cache) {\n        cache = new Map();\n        this._cachedBitmapsMap.set(mainKey, cache);\n      }\n      const cachedImage = cache.get(cacheKey);\n      if (cachedImage && !isPatternFill) {\n        const offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]);\n        const offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]);\n        this.dependencyTracker?.recordDependencies(opIdx, Dependencies.transformAndFill);\n        return {\n          canvas: cachedImage,\n          offsetX,\n          offsetY\n        };\n      }\n      scaled = cachedImage;\n    }\n    if (!scaled) {\n      maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      putBinaryImageMask(maskCanvas.context, img);\n    }\n    let maskToCanvas = Util.transform(currentTransform, [1 / width, 0, 0, -1 / height, 0, 0]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const minMax = MIN_MAX_INIT.slice();\n    Util.axialAlignedBoundingBox([0, 0, width, height], maskToCanvas, minMax);\n    const [minX, minY, maxX, maxY] = minMax;\n    const drawnWidth = Math.round(maxX - minX) || 1;\n    const drawnHeight = Math.round(maxY - minY) || 1;\n    const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight);\n    const fillCtx = fillCanvas.context;\n    const offsetX = minX;\n    const offsetY = minY;\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform(...maskToCanvas);\n    if (!scaled) {\n      scaled = this._scaleImage(maskCanvas.canvas, getCurrentTransformInverse(fillCtx));\n      scaled = scaled.img;\n      if (cache && isPatternFill) {\n        cache.set(cacheKey, scaled);\n      }\n    }\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(getCurrentTransform(fillCtx), img.interpolate);\n    drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height);\n    fillCtx.globalCompositeOperation = \"source-in\";\n    const inverse = Util.transform(getCurrentTransformInverse(fillCtx), [1, 0, 0, 1, -offsetX, -offsetY]);\n    fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, PathType.FILL, opIdx) : fillColor;\n    fillCtx.fillRect(0, 0, width, height);\n    if (cache && !isPatternFill) {\n      this.cachedCanvases.delete(\"fillCanvas\");\n      cache.set(cacheKey, fillCanvas.canvas);\n    }\n    this.dependencyTracker?.recordDependencies(opIdx, Dependencies.transformAndFill);\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY)\n    };\n  }\n  setLineWidth(opIdx, width) {\n    this.dependencyTracker?.recordSimpleData(\"lineWidth\", opIdx);\n    if (width !== this.current.lineWidth) {\n      this._cachedScaleForStroking[0] = -1;\n    }\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n  setLineCap(opIdx, style) {\n    this.dependencyTracker?.recordSimpleData(\"lineCap\", opIdx);\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n  setLineJoin(opIdx, style) {\n    this.dependencyTracker?.recordSimpleData(\"lineJoin\", opIdx);\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n  setMiterLimit(opIdx, limit) {\n    this.dependencyTracker?.recordSimpleData(\"miterLimit\", opIdx);\n    this.ctx.miterLimit = limit;\n  }\n  setDash(opIdx, dashArray, dashPhase) {\n    this.dependencyTracker?.recordSimpleData(\"dash\", opIdx);\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n  setRenderingIntent(opIdx, intent) {}\n  setFlatness(opIdx, flatness) {}\n  setGState(opIdx, states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(opIdx, value);\n          break;\n        case \"LC\":\n          this.setLineCap(opIdx, value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(opIdx, value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(opIdx, value);\n          break;\n        case \"D\":\n          this.setDash(opIdx, value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(opIdx, value);\n          break;\n        case \"FL\":\n          this.setFlatness(opIdx, value);\n          break;\n        case \"Font\":\n          this.setFont(opIdx, value[0], value[1]);\n          break;\n        case \"CA\":\n          this.dependencyTracker?.recordSimpleData(\"strokeAlpha\", opIdx);\n          this.current.strokeAlpha = value;\n          break;\n        case \"ca\":\n          this.dependencyTracker?.recordSimpleData(\"fillAlpha\", opIdx);\n          this.ctx.globalAlpha = this.current.fillAlpha = value;\n          break;\n        case \"BM\":\n          this.dependencyTracker?.recordSimpleData(\"globalCompositeOperation\", opIdx);\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.dependencyTracker?.recordSimpleData(\"SMask\", opIdx);\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.dependencyTracker?.recordSimpleData(\"filter\", opIdx);\n          this.ctx.filter = this.current.transferMaps = this.filterFactory.addFilter(value);\n          break;\n      }\n    }\n  }\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n  }\n  beginSMaskMode(opIdx) {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n    this.suspendedCtx = this.ctx;\n    const ctx = this.ctx = scratchCanvas.context;\n    ctx.setTransform(this.suspendedCtx.getTransform());\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n    this.setGState(opIdx, [[\"BM\", \"source-over\"]]);\n  }\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n    this.suspendedCtx = null;\n  }\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n    this.composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n  composeSMask(ctx, smask, layerCtx, layerBox) {\n    const layerOffsetX = layerBox[0];\n    const layerOffsetY = layerBox[1];\n    const layerWidth = layerBox[2] - layerOffsetX;\n    const layerHeight = layerBox[3] - layerOffsetY;\n    if (layerWidth === 0 || layerHeight === 0) {\n      return;\n    }\n    this.genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n    ctx.save();\n    ctx.globalAlpha = 1;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(layerCtx.canvas, 0, 0);\n    ctx.restore();\n  }\n  genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n    let maskCanvas = maskCtx.canvas;\n    let maskX = layerOffsetX - maskOffsetX;\n    let maskY = layerOffsetY - maskOffsetY;\n    if (backdrop) {\n      if (maskX < 0 || maskY < 0 || maskX + width > maskCanvas.width || maskY + height > maskCanvas.height) {\n        const canvas = this.cachedCanvases.getCanvas(\"maskExtension\", width, height);\n        const ctx = canvas.context;\n        ctx.drawImage(maskCanvas, -maskX, -maskY);\n        ctx.globalCompositeOperation = \"destination-atop\";\n        ctx.fillStyle = backdrop;\n        ctx.fillRect(0, 0, width, height);\n        ctx.globalCompositeOperation = \"source-over\";\n        maskCanvas = canvas.canvas;\n        maskX = maskY = 0;\n      } else {\n        maskCtx.save();\n        maskCtx.globalAlpha = 1;\n        maskCtx.setTransform(1, 0, 0, 1, 0, 0);\n        const clip = new Path2D();\n        clip.rect(maskX, maskY, width, height);\n        maskCtx.clip(clip);\n        maskCtx.globalCompositeOperation = \"destination-atop\";\n        maskCtx.fillStyle = backdrop;\n        maskCtx.fillRect(maskX, maskY, width, height);\n        maskCtx.restore();\n      }\n    }\n    layerCtx.save();\n    layerCtx.globalAlpha = 1;\n    layerCtx.setTransform(1, 0, 0, 1, 0, 0);\n    if (subtype === \"Alpha\" && transferMap) {\n      layerCtx.filter = this.filterFactory.addAlphaFilter(transferMap);\n    } else if (subtype === \"Luminosity\") {\n      layerCtx.filter = this.filterFactory.addLuminosityFilter(transferMap);\n    }\n    const clip = new Path2D();\n    clip.rect(layerOffsetX, layerOffsetY, width, height);\n    layerCtx.clip(clip);\n    layerCtx.globalCompositeOperation = \"destination-in\";\n    layerCtx.drawImage(maskCanvas, maskX, maskY, width, height, layerOffsetX, layerOffsetY, width, height);\n    layerCtx.restore();\n  }\n  save(opIdx) {\n    if (this.inSMaskMode) {\n      copyCtxState(this.ctx, this.suspendedCtx);\n    }\n    this.ctx.save();\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n    this.dependencyTracker?.save(opIdx);\n  }\n  restore(opIdx) {\n    this.dependencyTracker?.restore(opIdx);\n    if (this.stateStack.length === 0) {\n      if (this.inSMaskMode) {\n        this.endSMaskMode();\n      }\n      return;\n    }\n    this.current = this.stateStack.pop();\n    this.ctx.restore();\n    if (this.inSMaskMode) {\n      copyCtxState(this.suspendedCtx, this.ctx);\n    }\n    this.checkSMaskState();\n    this.pendingClip = null;\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n  }\n  transform(opIdx, a, b, c, d, e, f) {\n    this.dependencyTracker?.recordIncrementalData(\"transform\", opIdx);\n    this.ctx.transform(a, b, c, d, e, f);\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n  }\n  constructPath(opIdx, op, data, minMax) {\n    let [path] = data;\n    if (!minMax) {\n      path ||= data[0] = new Path2D();\n      this[op](opIdx, path);\n      return;\n    }\n    if (this.dependencyTracker !== null) {\n      const outerExtraSize = op === OPS.stroke ? this.current.lineWidth / 2 : 0;\n      this.dependencyTracker.resetBBox(opIdx).recordBBox(opIdx, this.ctx, minMax[0] - outerExtraSize, minMax[2] + outerExtraSize, minMax[1] - outerExtraSize, minMax[3] + outerExtraSize).recordDependencies(opIdx, [\"transform\"]);\n    }\n    if (!(path instanceof Path2D)) {\n      const path2d = data[0] = new Path2D();\n      for (let i = 0, ii = path.length; i < ii;) {\n        switch (path[i++]) {\n          case DrawOPS.moveTo:\n            path2d.moveTo(path[i++], path[i++]);\n            break;\n          case DrawOPS.lineTo:\n            path2d.lineTo(path[i++], path[i++]);\n            break;\n          case DrawOPS.curveTo:\n            path2d.bezierCurveTo(path[i++], path[i++], path[i++], path[i++], path[i++], path[i++]);\n            break;\n          case DrawOPS.closePath:\n            path2d.closePath();\n            break;\n          default:\n            warn(`Unrecognized drawing path operator: ${path[i - 1]}`);\n            break;\n        }\n      }\n      path = path2d;\n    }\n    Util.axialAlignedBoundingBox(minMax, getCurrentTransform(this.ctx), this.current.minMax);\n    this[op](opIdx, path);\n    this._pathStartIdx = opIdx;\n  }\n  closePath(opIdx) {\n    this.ctx.closePath();\n  }\n  stroke(opIdx, path, consumePath = true) {\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        const baseTransform = strokeColor.isModifyingCurrentTransform() ? ctx.getTransform() : null;\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this, getCurrentTransformInverse(ctx), PathType.STROKE, opIdx);\n        if (baseTransform) {\n          const newPath = new Path2D();\n          newPath.addPath(path, ctx.getTransform().invertSelf().multiplySelf(baseTransform));\n          path = newPath;\n        }\n        this.rescaleAndStroke(path, false);\n        ctx.restore();\n      } else {\n        this.rescaleAndStroke(path, true);\n      }\n    }\n    this.dependencyTracker?.recordDependencies(opIdx, Dependencies.stroke);\n    if (consumePath) {\n      this.consumePath(opIdx, path, this.current.getClippedPathBoundingBox(PathType.STROKE, getCurrentTransform(this.ctx)));\n    }\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n  closeStroke(opIdx, path) {\n    this.stroke(opIdx, path);\n  }\n  fill(opIdx, path, consumePath = true) {\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n    if (isPatternFill) {\n      const baseTransform = fillColor.isModifyingCurrentTransform() ? ctx.getTransform() : null;\n      this.dependencyTracker?.save(opIdx);\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(ctx, this, getCurrentTransformInverse(ctx), PathType.FILL, opIdx);\n      if (baseTransform) {\n        const newPath = new Path2D();\n        newPath.addPath(path, ctx.getTransform().invertSelf().multiplySelf(baseTransform));\n        path = newPath;\n      }\n      needRestore = true;\n    }\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(path, \"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill(path);\n      }\n    }\n    this.dependencyTracker?.recordDependencies(opIdx, Dependencies.fill);\n    if (needRestore) {\n      ctx.restore();\n      this.dependencyTracker?.restore(opIdx);\n    }\n    if (consumePath) {\n      this.consumePath(opIdx, path, intersect);\n    }\n  }\n  eoFill(opIdx, path) {\n    this.pendingEOFill = true;\n    this.fill(opIdx, path);\n  }\n  fillStroke(opIdx, path) {\n    this.fill(opIdx, path, false);\n    this.stroke(opIdx, path, false);\n    this.consumePath(opIdx, path);\n  }\n  eoFillStroke(opIdx, path) {\n    this.pendingEOFill = true;\n    this.fillStroke(opIdx, path);\n  }\n  closeFillStroke(opIdx, path) {\n    this.fillStroke(opIdx, path);\n  }\n  closeEOFillStroke(opIdx, path) {\n    this.pendingEOFill = true;\n    this.fillStroke(opIdx, path);\n  }\n  endPath(opIdx, path) {\n    this.consumePath(opIdx, path);\n  }\n  rawFillPath(opIdx, path) {\n    this.ctx.fill(path);\n    this.dependencyTracker?.recordDependencies(opIdx, Dependencies.rawFillPath).recordOperation(opIdx);\n  }\n  clip(opIdx) {\n    this.dependencyTracker?.recordFutureForcedDependency(\"clipMode\", opIdx);\n    this.pendingClip = NORMAL_CLIP;\n  }\n  eoClip(opIdx) {\n    this.dependencyTracker?.recordFutureForcedDependency(\"clipMode\", opIdx);\n    this.pendingClip = EO_CLIP;\n  }\n  beginText(opIdx) {\n    this.current.textMatrix = null;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n    this.dependencyTracker?.recordOpenMarker(opIdx).resetIncrementalData(\"sameLineText\").resetIncrementalData(\"moveText\", opIdx);\n  }\n  endText(opIdx) {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (this.dependencyTracker) {\n      const {\n        dependencyTracker\n      } = this;\n      if (paths !== undefined) {\n        dependencyTracker.recordFutureForcedDependency(\"textClip\", dependencyTracker.getOpenMarker()).recordFutureForcedDependency(\"textClip\", opIdx);\n      }\n      dependencyTracker.recordCloseMarker(opIdx);\n    }\n    if (paths !== undefined) {\n      const newPath = new Path2D();\n      const invTransf = ctx.getTransform().invertSelf();\n      for (const {\n        transform,\n        x,\n        y,\n        fontSize,\n        path\n      } of paths) {\n        if (!path) {\n          continue;\n        }\n        newPath.addPath(path, new DOMMatrix(transform).preMultiplySelf(invTransf).translate(x, y).scale(fontSize, -fontSize));\n      }\n      ctx.clip(newPath);\n    }\n    delete this.pendingTextPaths;\n  }\n  setCharSpacing(opIdx, spacing) {\n    this.dependencyTracker?.recordSimpleData(\"charSpacing\", opIdx);\n    this.current.charSpacing = spacing;\n  }\n  setWordSpacing(opIdx, spacing) {\n    this.dependencyTracker?.recordSimpleData(\"wordSpacing\", opIdx);\n    this.current.wordSpacing = spacing;\n  }\n  setHScale(opIdx, scale) {\n    this.dependencyTracker?.recordSimpleData(\"hScale\", opIdx);\n    this.current.textHScale = scale / 100;\n  }\n  setLeading(opIdx, leading) {\n    this.dependencyTracker?.recordSimpleData(\"leading\", opIdx);\n    this.current.leading = -leading;\n  }\n  setFont(opIdx, fontRefName, size) {\n    this.dependencyTracker?.recordSimpleData(\"font\", opIdx).recordSimpleDataFromNamed(\"fontObj\", fontRefName, opIdx);\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n    if (fontObj.isType3Font) {\n      return;\n    }\n    const name = fontObj.loadedName || \"sans-serif\";\n    const typeface = fontObj.systemFontInfo?.css || `\"${name}\", ${fontObj.fallbackName}`;\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n  setTextRenderingMode(opIdx, mode) {\n    this.dependencyTracker?.recordSimpleData(\"textRenderingMode\", opIdx);\n    this.current.textRenderingMode = mode;\n  }\n  setTextRise(opIdx, rise) {\n    this.dependencyTracker?.recordSimpleData(\"textRise\", opIdx);\n    this.current.textRise = rise;\n  }\n  moveText(opIdx, x, y) {\n    this.dependencyTracker?.resetIncrementalData(\"sameLineText\").recordIncrementalData(\"moveText\", opIdx);\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n  setLeadingMoveText(opIdx, x, y) {\n    this.setLeading(opIdx, -y);\n    this.moveText(opIdx, x, y);\n  }\n  setTextMatrix(opIdx, matrix) {\n    this.dependencyTracker?.recordSimpleData(\"textMatrix\", opIdx);\n    const {\n      current\n    } = this;\n    current.textMatrix = matrix;\n    current.textMatrixScale = Math.hypot(matrix[0], matrix[1]);\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n  }\n  nextLine(opIdx) {\n    this.moveText(opIdx, 0, this.current.leading);\n    this.dependencyTracker?.recordIncrementalData(\"moveText\", this.dependencyTracker.getSimpleIndex(\"leading\") ?? opIdx);\n  }\n  #getScaledPath(path, currentTransform, transform) {\n    const newPath = new Path2D();\n    newPath.addPath(path, new DOMMatrix(transform).invertSelf().multiplySelf(currentTransform));\n    return newPath;\n  }\n  paintChar(opIdx, character, x, y, patternFillTransform, patternStrokeTransform) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode = textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG);\n    const patternFill = current.patternFill && !font.missingFile;\n    const patternStroke = current.patternStroke && !font.missingFile;\n    let path;\n    if ((font.disableFontFace || isAddToPathSet || patternFill || patternStroke) && !font.missingFile) {\n      path = font.getPathGenerator(this.commonObjs, character);\n    }\n    if (path && (font.disableFontFace || patternFill || patternStroke)) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.scale(fontSize, -fontSize);\n      this.dependencyTracker?.recordCharacterBBox(opIdx, ctx, font);\n      let currentTransform;\n      if (fillStrokeMode === TextRenderingMode.FILL || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n        if (patternFillTransform) {\n          currentTransform = ctx.getTransform();\n          ctx.setTransform(...patternFillTransform);\n          const scaledPath = this.#getScaledPath(path, currentTransform, patternFillTransform);\n          ctx.fill(scaledPath);\n        } else {\n          ctx.fill(path);\n        }\n      }\n      if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n        if (patternStrokeTransform) {\n          currentTransform ||= ctx.getTransform();\n          ctx.setTransform(...patternStrokeTransform);\n          const {\n            a,\n            b,\n            c,\n            d\n          } = currentTransform;\n          const invPatternTransform = Util.inverseTransform(patternStrokeTransform);\n          const transf = Util.transform([a, b, c, d, 0, 0], invPatternTransform);\n          Util.singularValueDecompose2dScale(transf, XY);\n          ctx.lineWidth *= Math.max(XY[0], XY[1]) / fontSize;\n          ctx.stroke(this.#getScaledPath(path, currentTransform, patternStrokeTransform));\n        } else {\n          ctx.lineWidth /= fontSize;\n          ctx.stroke(path);\n        }\n      }\n      ctx.restore();\n    } else {\n      if (fillStrokeMode === TextRenderingMode.FILL || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n        ctx.fillText(character, x, y);\n        this.dependencyTracker?.recordCharacterBBox(opIdx, ctx, font, fontSize, x, y, () => ctx.measureText(character));\n      }\n      if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n        if (this.dependencyTracker) {\n          this.dependencyTracker?.recordCharacterBBox(opIdx, ctx, font, fontSize, x, y, () => ctx.measureText(character)).recordDependencies(opIdx, Dependencies.stroke);\n        }\n        ctx.strokeText(character, x, y);\n      }\n    }\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths ||= [];\n      paths.push({\n        transform: getCurrentTransform(ctx),\n        x,\n        y,\n        fontSize,\n        path\n      });\n      this.dependencyTracker?.recordCharacterBBox(opIdx, ctx, font, fontSize, x, y);\n    }\n  }\n  get isFontSubpixelAAEnabled() {\n    const {\n      context: ctx\n    } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n  showText(opIdx, glyphs) {\n    if (this.dependencyTracker) {\n      this.dependencyTracker.recordDependencies(opIdx, Dependencies.showText).resetBBox(opIdx);\n      if (this.current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG) {\n        this.dependencyTracker.recordFutureForcedDependency(\"textClip\", opIdx).inheritPendingDependenciesAsFutureForcedDependencies();\n      }\n    }\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      this.showType3Text(opIdx, glyphs);\n      this.dependencyTracker?.recordShowTextOperation(opIdx);\n      return undefined;\n    }\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      this.dependencyTracker?.recordOperation(opIdx);\n      return undefined;\n    }\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n    const simpleFillText = current.textRenderingMode === TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n    ctx.save();\n    if (current.textMatrix) {\n      ctx.transform(...current.textMatrix);\n    }\n    ctx.translate(current.x, current.y + current.textRise);\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n    let patternFillTransform, patternStrokeTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(ctx, this, getCurrentTransformInverse(ctx), PathType.FILL, opIdx);\n      patternFillTransform = getCurrentTransform(ctx);\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n    if (current.patternStroke) {\n      ctx.save();\n      const pattern = current.strokeColor.getPattern(ctx, this, getCurrentTransformInverse(ctx), PathType.STROKE, opIdx);\n      patternStrokeTransform = getCurrentTransform(ctx);\n      ctx.restore();\n      ctx.strokeStyle = pattern;\n    }\n    let lineWidth = current.lineWidth;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode = current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n        lineWidth = this.getSinglePixelWidth();\n      }\n    } else {\n      lineWidth /= scale;\n    }\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n    ctx.lineWidth = lineWidth;\n    if (font.isInvalidPDFjsFont) {\n      const chars = [];\n      let width = 0;\n      for (const glyph of glyphs) {\n        chars.push(glyph.unicode);\n        width += glyph.width;\n      }\n      const joinedChars = chars.join(\"\");\n      ctx.fillText(joinedChars, 0, 0);\n      if (this.dependencyTracker !== null) {\n        const measure = ctx.measureText(joinedChars);\n        this.dependencyTracker.recordBBox(opIdx, this.ctx, -measure.actualBoundingBoxLeft, measure.actualBoundingBoxRight, -measure.actualBoundingBoxAscent, measure.actualBoundingBoxDescent).recordShowTextOperation(opIdx);\n      }\n      current.x += width * widthAdvanceScale * textHScale;\n      ctx.restore();\n      this.compose();\n      return undefined;\n    }\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        x += spacingDir * glyph * fontSize / 1000;\n        continue;\n      }\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n      let measure;\n      if (font.remeasure && width > 0) {\n        measure = ctx.measureText(character);\n        const measuredWidth = measure.width * 1000 / fontSize * fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n        }\n      }\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          ctx.fillText(character, scaledX, scaledY);\n          this.dependencyTracker?.recordCharacterBBox(opIdx, ctx, measure ? {\n            bbox: null\n          } : font, fontSize / fontSizeScale, scaledX, scaledY, () => measure ?? ctx.measureText(character));\n        } else {\n          this.paintChar(opIdx, character, scaledX, scaledY, patternFillTransform, patternStrokeTransform);\n          if (accent) {\n            const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n            const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n            this.paintChar(opIdx, accent.fontChar, scaledAccentX, scaledAccentY, patternFillTransform, patternStrokeTransform);\n          }\n        }\n      }\n      const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n      x += charWidth;\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n    this.dependencyTracker?.recordShowTextOperation(opIdx);\n    return undefined;\n  }\n  showType3Text(opIdx, glyphs) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible = current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n    ctx.save();\n    if (current.textMatrix) {\n      ctx.transform(...current.textMatrix);\n    }\n    ctx.translate(current.x, current.y + current.textRise);\n    ctx.scale(textHScale, fontDirection);\n    const dependencyTracker = this.dependencyTracker;\n    this.dependencyTracker = dependencyTracker ? new CanvasNestedDependencyTracker(dependencyTracker, opIdx) : null;\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        spacingLength = spacingDir * glyph * fontSize / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n      } else if (this.contentVisible) {\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform(...fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n      const p = [glyph.width, 0];\n      Util.applyTransform(p, fontMatrix);\n      width = p[0] * fontSize + spacing;\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    if (dependencyTracker) {\n      this.dependencyTracker = dependencyTracker;\n    }\n  }\n  setCharWidth(opIdx, xWidth, yWidth) {}\n  setCharWidthAndBounds(opIdx, xWidth, yWidth, llx, lly, urx, ury) {\n    const clip = new Path2D();\n    clip.rect(llx, lly, urx - llx, ury - lly);\n    this.ctx.clip(clip);\n    this.dependencyTracker?.recordBBox(opIdx, this.ctx, llx, urx, lly, ury).recordClipBox(opIdx, this.ctx, llx, urx, lly, ury);\n    this.endPath(opIdx);\n  }\n  getColorN_Pattern(opIdx, IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const baseTransform = this.baseTransform || getCurrentTransform(this.ctx);\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: (ctx, renderingOpIdx) => new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n          optionalContentConfig: this.optionalContentConfig,\n          markedContentStack: this.markedContentStack\n        }, undefined, undefined, this.dependencyTracker ? new CanvasNestedDependencyTracker(this.dependencyTracker, renderingOpIdx, true) : null)\n      };\n      pattern = new TilingPattern(IR, this.ctx, canvasGraphicsFactory, baseTransform);\n    } else {\n      pattern = this._getPattern(opIdx, IR[1], IR[2]);\n    }\n    return pattern;\n  }\n  setStrokeColorN(opIdx, ...args) {\n    this.dependencyTracker?.recordSimpleData(\"strokeColor\", opIdx);\n    this.current.strokeColor = this.getColorN_Pattern(opIdx, args);\n    this.current.patternStroke = true;\n  }\n  setFillColorN(opIdx, ...args) {\n    this.dependencyTracker?.recordSimpleData(\"fillColor\", opIdx);\n    this.current.fillColor = this.getColorN_Pattern(opIdx, args);\n    this.current.patternFill = true;\n  }\n  setStrokeRGBColor(opIdx, color) {\n    this.dependencyTracker?.recordSimpleData(\"strokeColor\", opIdx);\n    this.ctx.strokeStyle = this.current.strokeColor = color;\n    this.current.patternStroke = false;\n  }\n  setStrokeTransparent(opIdx) {\n    this.dependencyTracker?.recordSimpleData(\"strokeColor\", opIdx);\n    this.ctx.strokeStyle = this.current.strokeColor = \"transparent\";\n    this.current.patternStroke = false;\n  }\n  setFillRGBColor(opIdx, color) {\n    this.dependencyTracker?.recordSimpleData(\"fillColor\", opIdx);\n    this.ctx.fillStyle = this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n  setFillTransparent(opIdx) {\n    this.dependencyTracker?.recordSimpleData(\"fillColor\", opIdx);\n    this.ctx.fillStyle = this.current.fillColor = \"transparent\";\n    this.current.patternFill = false;\n  }\n  _getPattern(opIdx, objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.getObject(opIdx, objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n  shadingFill(opIdx, objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    this.save(opIdx);\n    const pattern = this._getPattern(opIdx, objId);\n    ctx.fillStyle = pattern.getPattern(ctx, this, getCurrentTransformInverse(ctx), PathType.SHADING, opIdx);\n    const inv = getCurrentTransformInverse(ctx);\n    if (inv) {\n      const {\n        width,\n        height\n      } = ctx.canvas;\n      const minMax = MIN_MAX_INIT.slice();\n      Util.axialAlignedBoundingBox([0, 0, width, height], inv, minMax);\n      const [x0, y0, x1, y1] = minMax;\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n    this.dependencyTracker?.resetBBox(opIdx).recordFullPageBBox(opIdx).recordDependencies(opIdx, Dependencies.transform).recordDependencies(opIdx, Dependencies.fill).recordOperation(opIdx);\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore(opIdx);\n  }\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n  paintFormXObjectBegin(opIdx, matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save(opIdx);\n    this.baseTransformStack.push(this.baseTransform);\n    if (matrix) {\n      this.transform(opIdx, ...matrix);\n    }\n    this.baseTransform = getCurrentTransform(this.ctx);\n    if (bbox) {\n      Util.axialAlignedBoundingBox(bbox, this.baseTransform, this.current.minMax);\n      const [x0, y0, x1, y1] = bbox;\n      const clip = new Path2D();\n      clip.rect(x0, y0, x1 - x0, y1 - y0);\n      this.ctx.clip(clip);\n      this.dependencyTracker?.recordClipBox(opIdx, this.ctx, x0, x1, y0, y1);\n      this.endPath(opIdx);\n    }\n  }\n  paintFormXObjectEnd(opIdx) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore(opIdx);\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n  beginGroup(opIdx, group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save(opIdx);\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n    const currentCtx = this.ctx;\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n    const currentTransform = getCurrentTransform(currentCtx);\n    if (group.matrix) {\n      currentCtx.transform(...group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n    let bounds = MIN_MAX_INIT.slice();\n    Util.axialAlignedBoundingBox(group.bbox, getCurrentTransform(currentCtx), bounds);\n    const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    const drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    const drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n    const groupCtx = scratchCanvas.context;\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform(...currentTransform);\n    let clip = new Path2D();\n    const [x0, y0, x1, y1] = group.bbox;\n    clip.rect(x0, y0, x1 - x0, y1 - y0);\n    if (group.matrix) {\n      const path = new Path2D();\n      path.addPath(clip, new DOMMatrix(group.matrix));\n      clip = path;\n    }\n    groupCtx.clip(clip);\n    if (group.smask) {\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null\n      });\n    }\n    if (!group.smask || this.dependencyTracker) {\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.save();\n    }\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.dependencyTracker?.inheritSimpleDataAsFutureForcedDependencies([\"fillAlpha\", \"strokeAlpha\", \"globalCompositeOperation\"]).pushBaseTransform(currentCtx);\n    this.setGState(opIdx, [[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n  endGroup(opIdx, group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    this.ctx.imageSmoothingEnabled = false;\n    this.dependencyTracker?.popBaseTransform();\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore(opIdx);\n      if (this.dependencyTracker) {\n        this.ctx.restore();\n      }\n    } else {\n      this.ctx.restore();\n      const currentMtx = getCurrentTransform(this.ctx);\n      this.restore(opIdx);\n      this.ctx.save();\n      this.ctx.setTransform(...currentMtx);\n      const dirtyBox = MIN_MAX_INIT.slice();\n      Util.axialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx, dirtyBox);\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n  beginAnnotation(opIdx, id, rect, transform, matrix, hasOwnCanvas) {\n    this.#restoreInitialState();\n    resetCtxToDefault(this.ctx);\n    this.ctx.save();\n    this.save(opIdx);\n    if (this.baseTransform) {\n      this.ctx.setTransform(...this.baseTransform);\n    }\n    if (rect) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n        Util.singularValueDecompose2dScale(getCurrentTransform(this.ctx), XY);\n        const {\n          viewportScale\n        } = this;\n        const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n        const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n        this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n        const {\n          canvas,\n          context\n        } = this.annotationCanvas;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.save();\n        this.ctx.setTransform(XY[0], 0, 0, -XY[1], 0, height * XY[1]);\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n        this.endPath(opIdx);\n        const clip = new Path2D();\n        clip.rect(rect[0], rect[1], width, height);\n        this.ctx.clip(clip);\n      }\n    }\n    this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n    this.transform(opIdx, ...transform);\n    this.transform(opIdx, ...matrix);\n  }\n  endAnnotation(opIdx) {\n    if (this.annotationCanvas) {\n      this.ctx.restore();\n      this.#drawFilter();\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n  }\n  paintImageMaskXObject(opIdx, img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const count = img.count;\n    img = this.getObject(opIdx, img.data, img);\n    img.count = count;\n    const ctx = this.ctx;\n    const mask = this._createMaskCanvas(opIdx, img);\n    const maskCanvas = mask.canvas;\n    ctx.save();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    this.dependencyTracker?.resetBBox(opIdx).recordBBox(opIdx, this.ctx, mask.offsetX, mask.offsetX + maskCanvas.width, mask.offsetY, mask.offsetY + maskCanvas.height).recordOperation(opIdx);\n    ctx.restore();\n    this.compose();\n  }\n  paintImageMaskXObjectRepeat(opIdx, img, scaleX, skewX = 0, skewY = 0, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    img = this.getObject(opIdx, img.data, img);\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = getCurrentTransform(ctx);\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(opIdx, img);\n    ctx.setTransform(1, 0, 0, 1, mask.offsetX - currentTransform[4], mask.offsetY - currentTransform[5]);\n    this.dependencyTracker?.resetBBox(opIdx);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\n      ctx.drawImage(mask.canvas, trans[4], trans[5]);\n      this.dependencyTracker?.recordBBox(opIdx, this.ctx, trans[4], trans[4] + mask.canvas.width, trans[5], trans[5] + mask.canvas.height);\n    }\n    ctx.restore();\n    this.compose();\n    this.dependencyTracker?.recordOperation(opIdx);\n  }\n  paintImageMaskXObjectGroup(opIdx, images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    this.dependencyTracker?.resetBBox(opIdx).recordDependencies(opIdx, Dependencies.transformAndFill);\n    for (const image of images) {\n      const {\n        data,\n        width,\n        height,\n        transform\n      } = image;\n      const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n      const img = this.getObject(opIdx, data, image);\n      putBinaryImageMask(maskCtx, img);\n      maskCtx.globalCompositeOperation = \"source-in\";\n      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, getCurrentTransformInverse(ctx), PathType.FILL, opIdx) : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n      maskCtx.restore();\n      ctx.save();\n      ctx.transform(...transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(ctx, maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      this.dependencyTracker?.recordBBox(opIdx, ctx, 0, width, 0, height);\n      ctx.restore();\n    }\n    this.compose();\n    this.dependencyTracker?.recordOperation(opIdx);\n  }\n  paintImageXObject(opIdx, objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(opIdx, objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n    this.paintInlineImageXObject(opIdx, imgData);\n  }\n  paintImageXObjectRepeat(opIdx, objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(opIdx, objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height\n      });\n    }\n    this.paintInlineImageXObjectGroup(opIdx, imgData, map);\n  }\n  applyTransferMapsToCanvas(ctx) {\n    if (this.current.transferMaps !== \"none\") {\n      ctx.filter = this.current.transferMaps;\n      ctx.drawImage(ctx.canvas, 0, 0);\n      ctx.filter = \"none\";\n    }\n    return ctx.canvas;\n  }\n  applyTransferMapsToBitmap(imgData) {\n    if (this.current.transferMaps === \"none\") {\n      return imgData.bitmap;\n    }\n    const {\n      bitmap,\n      width,\n      height\n    } = imgData;\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n    const tmpCtx = tmpCanvas.context;\n    tmpCtx.filter = this.current.transferMaps;\n    tmpCtx.drawImage(bitmap, 0, 0);\n    tmpCtx.filter = \"none\";\n    return tmpCanvas.canvas;\n  }\n  paintInlineImageXObject(opIdx, imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n    this.save(opIdx);\n    const {\n      filter\n    } = ctx;\n    if (filter !== \"none\" && filter !== \"\") {\n      ctx.filter = \"none\";\n    }\n    ctx.scale(1 / width, -1 / height);\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = this.applyTransferMapsToBitmap(imgData);\n    } else if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n    const scaled = this._scaleImage(imgToPaint, getCurrentTransformInverse(ctx));\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(getCurrentTransform(ctx), imgData.interpolate);\n    this.dependencyTracker?.resetBBox(opIdx).recordBBox(opIdx, ctx, 0, width, -height, 0).recordDependencies(opIdx, Dependencies.imageXObject).recordOperation(opIdx);\n    drawImageAtIntegerCoords(ctx, scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\n    this.compose();\n    this.restore(opIdx);\n  }\n  paintInlineImageXObjectGroup(opIdx, imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = imgData.bitmap;\n    } else {\n      const w = imgData.width;\n      const h = imgData.height;\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n    this.dependencyTracker?.resetBBox(opIdx);\n    for (const entry of map) {\n      ctx.save();\n      ctx.transform(...entry.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(ctx, imgToPaint, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n      this.dependencyTracker?.recordBBox(opIdx, ctx, 0, 1, -1, 0);\n      ctx.restore();\n    }\n    this.dependencyTracker?.recordOperation(opIdx);\n    this.compose();\n  }\n  paintSolidColorImageMask(opIdx) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.dependencyTracker?.resetBBox(opIdx).recordBBox(opIdx, this.ctx, 0, 1, 0, 1).recordDependencies(opIdx, Dependencies.fill).recordOperation(opIdx);\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n  markPoint(opIdx, tag) {}\n  markPointProps(opIdx, tag, properties) {}\n  beginMarkedContent(opIdx, tag) {\n    this.dependencyTracker?.beginMarkedContent(opIdx);\n    this.markedContentStack.push({\n      visible: true\n    });\n  }\n  beginMarkedContentProps(opIdx, tag, properties) {\n    this.dependencyTracker?.beginMarkedContent(opIdx);\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties)\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n  endMarkedContent(opIdx) {\n    this.dependencyTracker?.endMarkedContent(opIdx);\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n  beginCompat(opIdx) {}\n  endCompat(opIdx) {}\n  consumePath(opIdx, path, clipBox) {\n    const isEmpty = this.current.isEmptyClip();\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (!isEmpty) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(path, \"evenodd\");\n        } else {\n          ctx.clip(path);\n        }\n      }\n      this.pendingClip = null;\n      this.dependencyTracker?.bboxToClipBoxDropOperation(opIdx).recordFutureForcedDependency(\"clipPath\", opIdx);\n    } else {\n      this.dependencyTracker?.recordOperation(opIdx);\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n  }\n  getSinglePixelWidth() {\n    if (!this._cachedGetSinglePixelWidth) {\n      const m = getCurrentTransform(this.ctx);\n      if (m[1] === 0 && m[2] === 0) {\n        this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n      } else {\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[2]);\n        const normY = Math.hypot(m[1], m[3]);\n        this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n      }\n    }\n    return this._cachedGetSinglePixelWidth;\n  }\n  getScaleForStroking() {\n    if (this._cachedScaleForStroking[0] === -1) {\n      const {\n        lineWidth\n      } = this.current;\n      const {\n        a,\n        b,\n        c,\n        d\n      } = this.ctx.getTransform();\n      let scaleX, scaleY;\n      if (b === 0 && c === 0) {\n        const normX = Math.abs(a);\n        const normY = Math.abs(d);\n        if (normX === normY) {\n          if (lineWidth === 0) {\n            scaleX = scaleY = 1 / normX;\n          } else {\n            const scaledLineWidth = normX * lineWidth;\n            scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;\n          }\n        } else if (lineWidth === 0) {\n          scaleX = 1 / normX;\n          scaleY = 1 / normY;\n        } else {\n          const scaledXLineWidth = normX * lineWidth;\n          const scaledYLineWidth = normY * lineWidth;\n          scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n          scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n        }\n      } else {\n        const absDet = Math.abs(a * d - b * c);\n        const normX = Math.hypot(a, b);\n        const normY = Math.hypot(c, d);\n        if (lineWidth === 0) {\n          scaleX = normY / absDet;\n          scaleY = normX / absDet;\n        } else {\n          const baseArea = lineWidth * absDet;\n          scaleX = normY > baseArea ? normY / baseArea : 1;\n          scaleY = normX > baseArea ? normX / baseArea : 1;\n        }\n      }\n      this._cachedScaleForStroking[0] = scaleX;\n      this._cachedScaleForStroking[1] = scaleY;\n    }\n    return this._cachedScaleForStroking;\n  }\n  rescaleAndStroke(path, saveRestore) {\n    const {\n      ctx,\n      current: {\n        lineWidth\n      }\n    } = this;\n    const [scaleX, scaleY] = this.getScaleForStroking();\n    if (scaleX === scaleY) {\n      ctx.lineWidth = (lineWidth || 1) * scaleX;\n      ctx.stroke(path);\n      return;\n    }\n    const dashes = ctx.getLineDash();\n    if (saveRestore) {\n      ctx.save();\n    }\n    ctx.scale(scaleX, scaleY);\n    SCALE_MATRIX.a = 1 / scaleX;\n    SCALE_MATRIX.d = 1 / scaleY;\n    const newPath = new Path2D();\n    newPath.addPath(path, SCALE_MATRIX);\n    if (dashes.length > 0) {\n      const scale = Math.max(scaleX, scaleY);\n      ctx.setLineDash(dashes.map(x => x / scale));\n      ctx.lineDashOffset /= scale;\n    }\n    ctx.lineWidth = lineWidth || 1;\n    ctx.stroke(newPath);\n    if (saveRestore) {\n      ctx.restore();\n    }\n  }\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\n;// ./src/shared/obj-bin-transform.js\n\n\n\n\n\n\n\n\n\n\nclass CssFontInfo {\n  #buffer;\n  #view;\n  #decoder;\n  static strings = [\"fontFamily\", \"fontWeight\", \"italicAngle\"];\n  static write(info) {\n    const encoder = new TextEncoder();\n    const encodedStrings = {};\n    let stringsLength = 0;\n    for (const prop of CssFontInfo.strings) {\n      const encoded = encoder.encode(info[prop]);\n      encodedStrings[prop] = encoded;\n      stringsLength += 4 + encoded.length;\n    }\n    const buffer = new ArrayBuffer(stringsLength);\n    const data = new Uint8Array(buffer);\n    const view = new DataView(buffer);\n    let offset = 0;\n    for (const prop of CssFontInfo.strings) {\n      const encoded = encodedStrings[prop];\n      const length = encoded.length;\n      view.setUint32(offset, length);\n      data.set(encoded, offset + 4);\n      offset += 4 + length;\n    }\n    assert(offset === buffer.byteLength, \"CssFontInfo.write: Buffer overflow\");\n    return buffer;\n  }\n  constructor(buffer) {\n    this.#buffer = buffer;\n    this.#view = new DataView(this.#buffer);\n    this.#decoder = new TextDecoder();\n  }\n  #readString(index) {\n    assert(index < CssFontInfo.strings.length, \"Invalid string index\");\n    let offset = 0;\n    for (let i = 0; i < index; i++) {\n      offset += this.#view.getUint32(offset) + 4;\n    }\n    const length = this.#view.getUint32(offset);\n    return this.#decoder.decode(new Uint8Array(this.#buffer, offset + 4, length));\n  }\n  get fontFamily() {\n    return this.#readString(0);\n  }\n  get fontWeight() {\n    return this.#readString(1);\n  }\n  get italicAngle() {\n    return this.#readString(2);\n  }\n}\nclass SystemFontInfo {\n  #buffer;\n  #view;\n  #decoder;\n  static strings = [\"css\", \"loadedName\", \"baseFontName\", \"src\"];\n  static write(info) {\n    const encoder = new TextEncoder();\n    const encodedStrings = {};\n    let stringsLength = 0;\n    for (const prop of SystemFontInfo.strings) {\n      const encoded = encoder.encode(info[prop]);\n      encodedStrings[prop] = encoded;\n      stringsLength += 4 + encoded.length;\n    }\n    stringsLength += 4;\n    let encodedStyleStyle,\n      encodedStyleWeight,\n      lengthEstimate = 1 + stringsLength;\n    if (info.style) {\n      encodedStyleStyle = encoder.encode(info.style.style);\n      encodedStyleWeight = encoder.encode(info.style.weight);\n      lengthEstimate += 4 + encodedStyleStyle.length + 4 + encodedStyleWeight.length;\n    }\n    const buffer = new ArrayBuffer(lengthEstimate);\n    const data = new Uint8Array(buffer);\n    const view = new DataView(buffer);\n    let offset = 0;\n    view.setUint8(offset++, info.guessFallback ? 1 : 0);\n    view.setUint32(offset, 0);\n    offset += 4;\n    stringsLength = 0;\n    for (const prop of SystemFontInfo.strings) {\n      const encoded = encodedStrings[prop];\n      const length = encoded.length;\n      stringsLength += 4 + length;\n      view.setUint32(offset, length);\n      data.set(encoded, offset + 4);\n      offset += 4 + length;\n    }\n    view.setUint32(offset - stringsLength - 4, stringsLength);\n    if (info.style) {\n      view.setUint32(offset, encodedStyleStyle.length);\n      data.set(encodedStyleStyle, offset + 4);\n      offset += 4 + encodedStyleStyle.length;\n      view.setUint32(offset, encodedStyleWeight.length);\n      data.set(encodedStyleWeight, offset + 4);\n      offset += 4 + encodedStyleWeight.length;\n    }\n    assert(offset <= buffer.byteLength, \"SubstitionInfo.write: Buffer overflow\");\n    return buffer.transferToFixedLength(offset);\n  }\n  constructor(buffer) {\n    this.#buffer = buffer;\n    this.#view = new DataView(this.#buffer);\n    this.#decoder = new TextDecoder();\n  }\n  get guessFallback() {\n    return this.#view.getUint8(0) !== 0;\n  }\n  #readString(index) {\n    assert(index < SystemFontInfo.strings.length, \"Invalid string index\");\n    let offset = 5;\n    for (let i = 0; i < index; i++) {\n      offset += this.#view.getUint32(offset) + 4;\n    }\n    const length = this.#view.getUint32(offset);\n    return this.#decoder.decode(new Uint8Array(this.#buffer, offset + 4, length));\n  }\n  get css() {\n    return this.#readString(0);\n  }\n  get loadedName() {\n    return this.#readString(1);\n  }\n  get baseFontName() {\n    return this.#readString(2);\n  }\n  get src() {\n    return this.#readString(3);\n  }\n  get style() {\n    let offset = 1;\n    offset += 4 + this.#view.getUint32(offset);\n    const styleLength = this.#view.getUint32(offset);\n    const style = this.#decoder.decode(new Uint8Array(this.#buffer, offset + 4, styleLength));\n    offset += 4 + styleLength;\n    const weightLength = this.#view.getUint32(offset);\n    const weight = this.#decoder.decode(new Uint8Array(this.#buffer, offset + 4, weightLength));\n    return {\n      style,\n      weight\n    };\n  }\n}\nclass FontInfo {\n  static bools = [\"black\", \"bold\", \"disableFontFace\", \"fontExtraProperties\", \"isInvalidPDFjsFont\", \"isType3Font\", \"italic\", \"missingFile\", \"remeasure\", \"vertical\"];\n  static numbers = [\"ascent\", \"defaultWidth\", \"descent\"];\n  static strings = [\"fallbackName\", \"loadedName\", \"mimetype\", \"name\"];\n  static #OFFSET_NUMBERS = Math.ceil(this.bools.length * 2 / 8);\n  static #OFFSET_BBOX = this.#OFFSET_NUMBERS + this.numbers.length * 8;\n  static #OFFSET_FONT_MATRIX = this.#OFFSET_BBOX + 1 + 2 * 4;\n  static #OFFSET_DEFAULT_VMETRICS = this.#OFFSET_FONT_MATRIX + 1 + 8 * 6;\n  static #OFFSET_STRINGS = this.#OFFSET_DEFAULT_VMETRICS + 1 + 2 * 3;\n  #buffer;\n  #decoder;\n  #view;\n  constructor({\n    data,\n    extra\n  }) {\n    this.#buffer = data;\n    this.#decoder = new TextDecoder();\n    this.#view = new DataView(this.#buffer);\n    if (extra) {\n      Object.assign(this, extra);\n    }\n  }\n  #readBoolean(index) {\n    assert(index < FontInfo.bools.length, \"Invalid boolean index\");\n    const byteOffset = Math.floor(index / 4);\n    const bitOffset = index * 2 % 8;\n    const value = this.#view.getUint8(byteOffset) >> bitOffset & 0x03;\n    return value === 0x00 ? undefined : value === 0x02;\n  }\n  get black() {\n    return this.#readBoolean(0);\n  }\n  get bold() {\n    return this.#readBoolean(1);\n  }\n  get disableFontFace() {\n    return this.#readBoolean(2);\n  }\n  get fontExtraProperties() {\n    return this.#readBoolean(3);\n  }\n  get isInvalidPDFjsFont() {\n    return this.#readBoolean(4);\n  }\n  get isType3Font() {\n    return this.#readBoolean(5);\n  }\n  get italic() {\n    return this.#readBoolean(6);\n  }\n  get missingFile() {\n    return this.#readBoolean(7);\n  }\n  get remeasure() {\n    return this.#readBoolean(8);\n  }\n  get vertical() {\n    return this.#readBoolean(9);\n  }\n  #readNumber(index) {\n    assert(index < FontInfo.numbers.length, \"Invalid number index\");\n    return this.#view.getFloat64(FontInfo.#OFFSET_NUMBERS + index * 8);\n  }\n  get ascent() {\n    return this.#readNumber(0);\n  }\n  get defaultWidth() {\n    return this.#readNumber(1);\n  }\n  get descent() {\n    return this.#readNumber(2);\n  }\n  get bbox() {\n    let offset = FontInfo.#OFFSET_BBOX;\n    const numCoords = this.#view.getUint8(offset);\n    if (numCoords === 0) {\n      return undefined;\n    }\n    offset += 1;\n    const bbox = [];\n    for (let i = 0; i < 4; i++) {\n      bbox.push(this.#view.getInt16(offset, true));\n      offset += 2;\n    }\n    return bbox;\n  }\n  get fontMatrix() {\n    let offset = FontInfo.#OFFSET_FONT_MATRIX;\n    const numPoints = this.#view.getUint8(offset);\n    if (numPoints === 0) {\n      return undefined;\n    }\n    offset += 1;\n    const fontMatrix = [];\n    for (let i = 0; i < 6; i++) {\n      fontMatrix.push(this.#view.getFloat64(offset, true));\n      offset += 8;\n    }\n    return fontMatrix;\n  }\n  get defaultVMetrics() {\n    let offset = FontInfo.#OFFSET_DEFAULT_VMETRICS;\n    const numMetrics = this.#view.getUint8(offset);\n    if (numMetrics === 0) {\n      return undefined;\n    }\n    offset += 1;\n    const defaultVMetrics = [];\n    for (let i = 0; i < 3; i++) {\n      defaultVMetrics.push(this.#view.getInt16(offset, true));\n      offset += 2;\n    }\n    return defaultVMetrics;\n  }\n  #readString(index) {\n    assert(index < FontInfo.strings.length, \"Invalid string index\");\n    let offset = FontInfo.#OFFSET_STRINGS + 4;\n    for (let i = 0; i < index; i++) {\n      offset += this.#view.getUint32(offset) + 4;\n    }\n    const length = this.#view.getUint32(offset);\n    const stringData = new Uint8Array(length);\n    stringData.set(new Uint8Array(this.#buffer, offset + 4, length));\n    return this.#decoder.decode(stringData);\n  }\n  get fallbackName() {\n    return this.#readString(0);\n  }\n  get loadedName() {\n    return this.#readString(1);\n  }\n  get mimetype() {\n    return this.#readString(2);\n  }\n  get name() {\n    return this.#readString(3);\n  }\n  get data() {\n    let offset = FontInfo.#OFFSET_STRINGS;\n    const stringsLength = this.#view.getUint32(offset);\n    offset += 4 + stringsLength;\n    const systemFontInfoLength = this.#view.getUint32(offset);\n    offset += 4 + systemFontInfoLength;\n    const cssFontInfoLength = this.#view.getUint32(offset);\n    offset += 4 + cssFontInfoLength;\n    const length = this.#view.getUint32(offset);\n    if (length === 0) {\n      return undefined;\n    }\n    return new Uint8Array(this.#buffer, offset + 4, length);\n  }\n  clearData() {\n    let offset = FontInfo.#OFFSET_STRINGS;\n    const stringsLength = this.#view.getUint32(offset);\n    offset += 4 + stringsLength;\n    const systemFontInfoLength = this.#view.getUint32(offset);\n    offset += 4 + systemFontInfoLength;\n    const cssFontInfoLength = this.#view.getUint32(offset);\n    offset += 4 + cssFontInfoLength;\n    const length = this.#view.getUint32(offset);\n    const data = new Uint8Array(this.#buffer, offset + 4, length);\n    data.fill(0);\n    this.#view.setUint32(offset, 0);\n  }\n  get cssFontInfo() {\n    let offset = FontInfo.#OFFSET_STRINGS;\n    const stringsLength = this.#view.getUint32(offset);\n    offset += 4 + stringsLength;\n    const systemFontInfoLength = this.#view.getUint32(offset);\n    offset += 4 + systemFontInfoLength;\n    const cssFontInfoLength = this.#view.getUint32(offset);\n    if (cssFontInfoLength === 0) {\n      return null;\n    }\n    const cssFontInfoData = new Uint8Array(cssFontInfoLength);\n    cssFontInfoData.set(new Uint8Array(this.#buffer, offset + 4, cssFontInfoLength));\n    return new CssFontInfo(cssFontInfoData.buffer);\n  }\n  get systemFontInfo() {\n    let offset = FontInfo.#OFFSET_STRINGS;\n    const stringsLength = this.#view.getUint32(offset);\n    offset += 4 + stringsLength;\n    const systemFontInfoLength = this.#view.getUint32(offset);\n    if (systemFontInfoLength === 0) {\n      return null;\n    }\n    const systemFontInfoData = new Uint8Array(systemFontInfoLength);\n    systemFontInfoData.set(new Uint8Array(this.#buffer, offset + 4, systemFontInfoLength));\n    return new SystemFontInfo(systemFontInfoData.buffer);\n  }\n  static write(font) {\n    const systemFontInfoBuffer = font.systemFontInfo ? SystemFontInfo.write(font.systemFontInfo) : null;\n    const cssFontInfoBuffer = font.cssFontInfo ? CssFontInfo.write(font.cssFontInfo) : null;\n    const encoder = new TextEncoder();\n    const encodedStrings = {};\n    let stringsLength = 0;\n    for (const prop of FontInfo.strings) {\n      encodedStrings[prop] = encoder.encode(font[prop]);\n      stringsLength += 4 + encodedStrings[prop].length;\n    }\n    const lengthEstimate = FontInfo.#OFFSET_STRINGS + 4 + stringsLength + 4 + (systemFontInfoBuffer ? systemFontInfoBuffer.byteLength : 0) + 4 + (cssFontInfoBuffer ? cssFontInfoBuffer.byteLength : 0) + 4 + (font.data ? font.data.length : 0);\n    const buffer = new ArrayBuffer(lengthEstimate);\n    const data = new Uint8Array(buffer);\n    const view = new DataView(buffer);\n    let offset = 0;\n    const numBools = FontInfo.bools.length;\n    let boolByte = 0,\n      boolBit = 0;\n    for (let i = 0; i < numBools; i++) {\n      const value = font[FontInfo.bools[i]];\n      const bits = value === undefined ? 0x00 : value ? 0x02 : 0x01;\n      boolByte |= bits << boolBit;\n      boolBit += 2;\n      if (boolBit === 8 || i === numBools - 1) {\n        view.setUint8(offset++, boolByte);\n        boolByte = 0;\n        boolBit = 0;\n      }\n    }\n    assert(offset === FontInfo.#OFFSET_NUMBERS, \"FontInfo.write: Boolean properties offset mismatch\");\n    for (const prop of FontInfo.numbers) {\n      view.setFloat64(offset, font[prop]);\n      offset += 8;\n    }\n    assert(offset === FontInfo.#OFFSET_BBOX, \"FontInfo.write: Number properties offset mismatch\");\n    if (font.bbox) {\n      view.setUint8(offset++, 4);\n      for (const coord of font.bbox) {\n        view.setInt16(offset, coord, true);\n        offset += 2;\n      }\n    } else {\n      view.setUint8(offset++, 0);\n      offset += 2 * 4;\n    }\n    assert(offset === FontInfo.#OFFSET_FONT_MATRIX, \"FontInfo.write: BBox properties offset mismatch\");\n    if (font.fontMatrix) {\n      view.setUint8(offset++, 6);\n      for (const point of font.fontMatrix) {\n        view.setFloat64(offset, point, true);\n        offset += 8;\n      }\n    } else {\n      view.setUint8(offset++, 0);\n      offset += 8 * 6;\n    }\n    assert(offset === FontInfo.#OFFSET_DEFAULT_VMETRICS, \"FontInfo.write: FontMatrix properties offset mismatch\");\n    if (font.defaultVMetrics) {\n      view.setUint8(offset++, 1);\n      for (const metric of font.defaultVMetrics) {\n        view.setInt16(offset, metric, true);\n        offset += 2;\n      }\n    } else {\n      view.setUint8(offset++, 0);\n      offset += 3 * 2;\n    }\n    assert(offset === FontInfo.#OFFSET_STRINGS, \"FontInfo.write: DefaultVMetrics properties offset mismatch\");\n    view.setUint32(FontInfo.#OFFSET_STRINGS, 0);\n    offset += 4;\n    for (const prop of FontInfo.strings) {\n      const encoded = encodedStrings[prop];\n      const length = encoded.length;\n      view.setUint32(offset, length);\n      data.set(encoded, offset + 4);\n      offset += 4 + length;\n    }\n    view.setUint32(FontInfo.#OFFSET_STRINGS, offset - FontInfo.#OFFSET_STRINGS - 4);\n    if (!systemFontInfoBuffer) {\n      view.setUint32(offset, 0);\n      offset += 4;\n    } else {\n      const length = systemFontInfoBuffer.byteLength;\n      view.setUint32(offset, length);\n      assert(offset + 4 + length <= buffer.byteLength, \"FontInfo.write: Buffer overflow at systemFontInfo\");\n      data.set(new Uint8Array(systemFontInfoBuffer), offset + 4);\n      offset += 4 + length;\n    }\n    if (!cssFontInfoBuffer) {\n      view.setUint32(offset, 0);\n      offset += 4;\n    } else {\n      const length = cssFontInfoBuffer.byteLength;\n      view.setUint32(offset, length);\n      assert(offset + 4 + length <= buffer.byteLength, \"FontInfo.write: Buffer overflow at cssFontInfo\");\n      data.set(new Uint8Array(cssFontInfoBuffer), offset + 4);\n      offset += 4 + length;\n    }\n    if (font.data === undefined) {\n      view.setUint32(offset, 0);\n      offset += 4;\n    } else {\n      view.setUint32(offset, font.data.length);\n      data.set(font.data, offset + 4);\n      offset += 4 + font.data.length;\n    }\n    assert(offset <= buffer.byteLength, \"FontInfo.write: Buffer overflow\");\n    return buffer.transferToFixedLength(offset);\n  }\n}\n\n;// ./src/display/worker_options.js\nclass GlobalWorkerOptions {\n  static #port = null;\n  static #src = \"\";\n  static get workerPort() {\n    return this.#port;\n  }\n  static set workerPort(val) {\n    if (!(typeof Worker !== \"undefined\" && val instanceof Worker) && val !== null) {\n      throw new Error(\"Invalid `workerPort` type.\");\n    }\n    this.#port = val;\n  }\n  static get workerSrc() {\n    return this.#src;\n  }\n  static set workerSrc(val) {\n    if (typeof val !== \"string\") {\n      throw new Error(\"Invalid `workerSrc` type.\");\n    }\n    this.#src = val;\n  }\n}\n\n;// ./src/display/metadata.js\nclass Metadata {\n  #map;\n  #data;\n  constructor({\n    parsedData,\n    rawData\n  }) {\n    this.#map = parsedData;\n    this.#data = rawData;\n  }\n  getRaw() {\n    return this.#data;\n  }\n  get(name) {\n    return this.#map.get(name) ?? null;\n  }\n  [Symbol.iterator]() {\n    return this.#map.entries();\n  }\n}\n\n;// ./src/display/optional_content_config.js\n\n\nconst INTERNAL = Symbol(\"INTERNAL\");\nclass OptionalContentGroup {\n  #isDisplay = false;\n  #isPrint = false;\n  #userSet = false;\n  #visible = true;\n  constructor(renderingIntent, {\n    name,\n    intent,\n    usage,\n    rbGroups\n  }) {\n    this.#isDisplay = !!(renderingIntent & RenderingIntentFlag.DISPLAY);\n    this.#isPrint = !!(renderingIntent & RenderingIntentFlag.PRINT);\n    this.name = name;\n    this.intent = intent;\n    this.usage = usage;\n    this.rbGroups = rbGroups;\n  }\n  get visible() {\n    if (this.#userSet) {\n      return this.#visible;\n    }\n    if (!this.#visible) {\n      return false;\n    }\n    const {\n      print,\n      view\n    } = this.usage;\n    if (this.#isDisplay) {\n      return view?.viewState !== \"OFF\";\n    } else if (this.#isPrint) {\n      return print?.printState !== \"OFF\";\n    }\n    return true;\n  }\n  _setVisible(internal, visible, userSet = false) {\n    if (internal !== INTERNAL) {\n      unreachable(\"Internal method `_setVisible` called.\");\n    }\n    this.#userSet = userSet;\n    this.#visible = visible;\n  }\n}\nclass OptionalContentConfig {\n  #cachedGetHash = null;\n  #groups = new Map();\n  #initialHash = null;\n  #order = null;\n  constructor(data, renderingIntent = RenderingIntentFlag.DISPLAY) {\n    this.renderingIntent = renderingIntent;\n    this.name = null;\n    this.creator = null;\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this.#order = data.order;\n    for (const group of data.groups) {\n      this.#groups.set(group.id, new OptionalContentGroup(renderingIntent, group));\n    }\n    if (data.baseState === \"OFF\") {\n      for (const group of this.#groups.values()) {\n        group._setVisible(INTERNAL, false);\n      }\n    }\n    for (const on of data.on) {\n      this.#groups.get(on)._setVisible(INTERNAL, true);\n    }\n    for (const off of data.off) {\n      this.#groups.get(off)._setVisible(INTERNAL, false);\n    }\n    this.#initialHash = this.getHash();\n  }\n  #evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this.#evaluateVisibilityExpression(element);\n      } else if (this.#groups.has(element)) {\n        state = this.#groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n  isVisible(group) {\n    if (this.#groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      info(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this.#groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this.#groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      if (group.expression) {\n        return this.#evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n  setVisibility(id, visible = true, preserveRB = true) {\n    const group = this.#groups.get(id);\n    if (!group) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    if (preserveRB && visible && group.rbGroups.length) {\n      for (const rbGroup of group.rbGroups) {\n        for (const otherId of rbGroup) {\n          if (otherId !== id) {\n            this.#groups.get(otherId)?._setVisible(INTERNAL, false, true);\n          }\n        }\n      }\n    }\n    group._setVisible(INTERNAL, !!visible, true);\n    this.#cachedGetHash = null;\n  }\n  setOCGState({\n    state,\n    preserveRB\n  }) {\n    let operator;\n    for (const elem of state) {\n      switch (elem) {\n        case \"ON\":\n        case \"OFF\":\n        case \"Toggle\":\n          operator = elem;\n          continue;\n      }\n      const group = this.#groups.get(elem);\n      if (!group) {\n        continue;\n      }\n      switch (operator) {\n        case \"ON\":\n          this.setVisibility(elem, true, preserveRB);\n          break;\n        case \"OFF\":\n          this.setVisibility(elem, false, preserveRB);\n          break;\n        case \"Toggle\":\n          this.setVisibility(elem, !group.visible, preserveRB);\n          break;\n      }\n    }\n    this.#cachedGetHash = null;\n  }\n  get hasInitialVisibility() {\n    return this.#initialHash === null || this.getHash() === this.#initialHash;\n  }\n  getOrder() {\n    if (!this.#groups.size) {\n      return null;\n    }\n    if (this.#order) {\n      return this.#order.slice();\n    }\n    return [...this.#groups.keys()];\n  }\n  getGroup(id) {\n    return this.#groups.get(id) || null;\n  }\n  getHash() {\n    if (this.#cachedGetHash !== null) {\n      return this.#cachedGetHash;\n    }\n    const hash = new MurmurHash3_64();\n    for (const [id, group] of this.#groups) {\n      hash.update(`${id}:${group.visible}`);\n    }\n    return this.#cachedGetHash = hash.hexdigest();\n  }\n  [Symbol.iterator]() {\n    return this.#groups.entries();\n  }\n}\n\n;// ./src/display/transport_stream.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass PDFDataTransportStream {\n  constructor(pdfDataRangeTransport, {\n    disableRange = false,\n    disableStream = false\n  }) {\n    assert(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n    const {\n      length,\n      initialData,\n      progressiveDone,\n      contentDispositionFilename\n    } = pdfDataRangeTransport;\n    this._queuedChunks = [];\n    this._progressiveDone = progressiveDone;\n    this._contentDispositionFilename = contentDispositionFilename;\n    if (initialData?.length > 0) {\n      const buffer = initialData instanceof Uint8Array && initialData.byteLength === initialData.buffer.byteLength ? initialData.buffer : new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !disableStream;\n    this._isRangeSupported = !disableRange;\n    this._contentLength = length;\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n    pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({\n        begin,\n        chunk\n      });\n    });\n    pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({\n        loaded,\n        total\n      });\n    });\n    pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({\n        chunk\n      });\n    });\n    pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n    pdfDataRangeTransport.transportReady();\n  }\n  _onReceiveData({\n    begin,\n    chunk\n  }) {\n    const buffer = chunk instanceof Uint8Array && chunk.byteLength === chunk.buffer.byteLength ? chunk.buffer : new Uint8Array(chunk).buffer;\n    if (begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n    }\n  }\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      this._rangeReaders[0]?.onProgress?.({\n        loaded: evt.loaded\n      });\n    } else {\n      this._fullRequestReader?.onProgress?.({\n        loaded: evt.loaded,\n        total: evt.total\n      });\n    }\n  }\n  _onProgressiveDone() {\n    this._fullRequestReader?.progressiveDone();\n    this._progressiveDone = true;\n  }\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n  getFullReader() {\n    assert(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n  }\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false, contentDispositionFilename = null) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename) ? contentDispositionFilename : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n    this.onProgress = null;\n  }\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n  get headersReady() {\n    return this._headersReady;\n  }\n  get filename() {\n    return this._filename;\n  }\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = Promise.withResolvers();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n  }\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n    this.onProgress = null;\n  }\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({\n        value: chunk,\n        done: false\n      });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n  get isStreamingSupported() {\n    return false;\n  }\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = Promise.withResolvers();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\n;// ./src/display/content_disposition.js\n\n\n\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, {\n          fatal: true\n        });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch {}\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match;\n      n = parseInt(n, 10);\n      if (n in matches) {\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        break;\n      }\n      let [quot, part] = matches[n];\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1;\n        }\n        parts[i] = parts[i].replaceAll(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    return value.replaceAll(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n      if (encoding === \"q\" || encoding === \"Q\") {\n        text = text.replaceAll(\"_\", \" \");\n        text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n          return String.fromCharCode(parseInt(hex, 16));\n        });\n        return textdecode(charset, text);\n      }\n      try {\n        text = atob(text);\n      } catch {}\n      return textdecode(charset, text);\n    });\n  }\n  return \"\";\n}\n\n;// ./src/display/network_utils.js\n\n\n\n\nfunction createHeaders(isHttp, httpHeaders) {\n  const headers = new Headers();\n  if (!isHttp || !httpHeaders || typeof httpHeaders !== \"object\") {\n    return headers;\n  }\n  for (const key in httpHeaders) {\n    const val = httpHeaders[key];\n    if (val !== undefined) {\n      headers.append(key, val);\n    }\n  }\n  return headers;\n}\nfunction getResponseOrigin(url) {\n  return URL.parse(url)?.origin ?? null;\n}\nfunction validateRangeRequestCapabilities({\n  responseHeaders,\n  isHttp,\n  rangeChunkSize,\n  disableRange\n}) {\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined\n  };\n  const length = parseInt(responseHeaders.get(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n  returnValues.suggestedLength = length;\n  if (length <= 2 * rangeChunkSize) {\n    return returnValues;\n  }\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (responseHeaders.get(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n  const contentEncoding = responseHeaders.get(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\nfunction extractFilenameFromHeader(responseHeaders) {\n  const contentDisposition = responseHeaders.get(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\nfunction createResponseError(status, url) {\n  return new ResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status, status === 404 || status === 0 && url.startsWith(\"file:\"));\n}\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\n;// ./src/display/fetch_stream.js\n\n\n\n\n\n\n\n\n\n\n\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\"\n  };\n}\nfunction getArrayBuffer(val) {\n  if (val instanceof Uint8Array) {\n    return val.buffer;\n  }\n  if (val instanceof ArrayBuffer) {\n    return val;\n  }\n  warn(`getArrayBuffer - unexpected data format: ${val}`);\n  return new Uint8Array(val).buffer;\n}\nclass PDFFetchStream {\n  _responseOrigin = null;\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.headers = createHeaders(this.isHttp, source.httpHeaders);\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n  getFullReader() {\n    assert(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = Promise.withResolvers();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n    this._abortController = new AbortController();\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    const headers = new Headers(stream.headers);\n    const url = source.url;\n    fetch(url, createFetchOptions(headers, this._withCredentials, this._abortController)).then(response => {\n      stream._responseOrigin = getResponseOrigin(response.url);\n      if (!validateResponseStatus(response.status)) {\n        throw createResponseError(response.status, url);\n      }\n      this._reader = response.body.getReader();\n      this._headersCapability.resolve();\n      const responseHeaders = response.headers;\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = validateRangeRequestCapabilities({\n        responseHeaders,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n      this._isRangeSupported = allowRangeRequests;\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = extractFilenameFromHeader(responseHeaders);\n      if (!this._isStreamingSupported && this._isRangeSupported) {\n        this.cancel(new AbortException(\"Streaming is disabled.\"));\n      }\n    }).catch(this._headersCapability.reject);\n    this.onProgress = null;\n  }\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n  get filename() {\n    return this._filename;\n  }\n  get contentLength() {\n    return this._contentLength;\n  }\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._headersCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength\n    });\n    return {\n      value: getArrayBuffer(value),\n      done: false\n    };\n  }\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = Promise.withResolvers();\n    this._isStreamingSupported = !source.disableStream;\n    this._abortController = new AbortController();\n    const headers = new Headers(stream.headers);\n    headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n    const url = source.url;\n    fetch(url, createFetchOptions(headers, this._withCredentials, this._abortController)).then(response => {\n      const responseOrigin = getResponseOrigin(response.url);\n      if (responseOrigin !== stream._responseOrigin) {\n        throw new Error(`Expected range response-origin \"${responseOrigin}\" to match \"${stream._responseOrigin}\".`);\n      }\n      if (!validateResponseStatus(response.status)) {\n        throw createResponseError(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    }).catch(this._readCapability.reject);\n    this.onProgress = null;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._readCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({\n      loaded: this._loaded\n    });\n    return {\n      value: getArrayBuffer(value),\n      done: false\n    };\n  }\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\n\n;// ./src/display/network.js\n\n\n\n\n\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\nfunction network_getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  return stringToBytes(data).buffer;\n}\nclass NetworkManager {\n  _responseOrigin = null;\n  constructor({\n    url,\n    httpHeaders,\n    withCredentials\n  }) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.headers = createHeaders(this.isHttp, httpHeaders);\n    this.withCredentials = withCredentials || false;\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n  request(args) {\n    const xhr = new XMLHttpRequest();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = this.pendingRequests[xhrId] = {\n      xhr\n    };\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const [key, val] of this.headers) {\n      xhr.setRequestHeader(key, val);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n    assert(args.onError, \"Expected `onError` callback to be provided.\");\n    xhr.onerror = () => {\n      args.onError(xhr.status);\n    };\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n    xhr.send(null);\n    return xhrId;\n  }\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return;\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return;\n    }\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n    if (xhr.readyState !== 4) {\n      return;\n    }\n    if (!(xhrId in this.pendingRequests)) {\n      return;\n    }\n    delete this.pendingRequests[xhrId];\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n    const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n    if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n      pendingRequest.onError(xhr.status);\n      return;\n    }\n    const chunk = network_getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      if (matches) {\n        pendingRequest.onDone({\n          begin: parseInt(matches[1], 10),\n          chunk\n        });\n      } else {\n        warn(`Missing or invalid \"Content-Range\" header.`);\n        pendingRequest.onError(0);\n      }\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk\n      });\n    } else {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source);\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n  getFullReader() {\n    assert(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n    return this._fullRequestReader;\n  }\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n    this._url = source.url;\n    this._fullRequestId = manager.request({\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this)\n    });\n    this._headersCapability = Promise.withResolvers();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n    this.onProgress = null;\n  }\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n    this._manager._responseOrigin = getResponseOrigin(fullRequestXhr.responseURL);\n    const rawResponseHeaders = fullRequestXhr.getAllResponseHeaders();\n    const responseHeaders = new Headers(rawResponseHeaders ? rawResponseHeaders.trimStart().replace(/[^\\S ]+$/, \"\").split(/[\\r\\n]+/).map(x => {\n      const [key, ...val] = x.split(\": \");\n      return [key, val.join(\": \")];\n    }) : []);\n    const {\n      allowRangeRequests,\n      suggestedLength\n    } = validateRangeRequestCapabilities({\n      responseHeaders,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange\n    });\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    this._contentLength = suggestedLength || this._contentLength;\n    this._filename = extractFilenameFromHeader(responseHeaders);\n    if (this._isRangeSupported) {\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n    this._headersCapability.resolve();\n  }\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({\n          value: data.chunk,\n          done: false\n        });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n  }\n  _onError(status) {\n    this._storedError = createResponseError(status, this._url);\n    this._headersCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength\n    });\n  }\n  get filename() {\n    return this._filename;\n  }\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  get contentLength() {\n    return this._contentLength;\n  }\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n  async read() {\n    await this._headersCapability.promise;\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = Promise.withResolvers();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    this._headersCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    this._url = manager.url;\n    this._requestId = manager.request({\n      begin,\n      end,\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this)\n    });\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n  _onHeadersReceived() {\n    const responseOrigin = getResponseOrigin(this._manager.getRequestXhr(this._requestId)?.responseURL);\n    if (responseOrigin !== this._manager._responseOrigin) {\n      this._storedError = new Error(`Expected range response-origin \"${responseOrigin}\" to match \"${this._manager._responseOrigin}\".`);\n      this._onError(0);\n    }\n  }\n  _close() {\n    this.onClosed?.(this);\n  }\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n  _onError(status) {\n    this._storedError ??= createResponseError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({\n        loaded: evt.loaded\n      });\n    }\n  }\n  get isStreamingSupported() {\n    return false;\n  }\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    const requestCapability = Promise.withResolvers();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\n;// ./src/display/node_stream.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst urlRegex = /^[a-z][a-z0-9\\-+.]+:/i;\nfunction parseUrlOrPath(sourceUrl) {\n  if (urlRegex.test(sourceUrl)) {\n    return new URL(sourceUrl);\n  }\n  const url = process.getBuiltinModule(\"url\");\n  return new URL(url.pathToFileURL(sourceUrl));\n}\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrlOrPath(source.url);\n    assert(this.url.protocol === \"file:\", \"PDFNodeStream only supports file:// URLs.\");\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n  getFullReader() {\n    assert(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n    this._fullRequestReader = new PDFNodeStreamFsFullReader(this);\n    return this._fullRequestReader;\n  }\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = new PDFNodeStreamFsRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\nclass PDFNodeStreamFsFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length;\n    this._loaded = 0;\n    this._filename = null;\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    this._readableStream = null;\n    this._readCapability = Promise.withResolvers();\n    this._headersCapability = Promise.withResolvers();\n    const fs = process.getBuiltinModule(\"fs\");\n    fs.promises.lstat(this._url).then(stat => {\n      this._contentLength = stat.size;\n      this._setReadableStream(fs.createReadStream(this._url));\n      this._headersCapability.resolve();\n    }, error => {\n      if (error.code === \"ENOENT\") {\n        error = createResponseError(0, this._url.href);\n      }\n      this._storedError = error;\n      this._headersCapability.reject(error);\n    });\n  }\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n  get filename() {\n    return this._filename;\n  }\n  get contentLength() {\n    return this._contentLength;\n  }\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = Promise.withResolvers();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength\n    });\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\nclass PDFNodeStreamFsRangeReader {\n  constructor(stream, start, end) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = Promise.withResolvers();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n    const fs = process.getBuiltinModule(\"fs\");\n    this._setReadableStream(fs.createReadStream(this._url, {\n      start,\n      end: end - 1\n    }));\n  }\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = Promise.withResolvers();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({\n      loaded: this._loaded\n    });\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\n;// ./src/display/pdf_objects.js\n\nconst INITIAL_DATA = Symbol(\"INITIAL_DATA\");\nclass PDFObjects {\n  #objs = Object.create(null);\n  #ensureObj(objId) {\n    return this.#objs[objId] ||= {\n      ...Promise.withResolvers(),\n      data: INITIAL_DATA\n    };\n  }\n  get(objId, callback = null) {\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.promise.then(() => callback(obj.data));\n      return null;\n    }\n    const obj = this.#objs[objId];\n    if (!obj || obj.data === INITIAL_DATA) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n  has(objId) {\n    const obj = this.#objs[objId];\n    return !!obj && obj.data !== INITIAL_DATA;\n  }\n  delete(objId) {\n    const obj = this.#objs[objId];\n    if (!obj || obj.data === INITIAL_DATA) {\n      return false;\n    }\n    delete this.#objs[objId];\n    return true;\n  }\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.resolve();\n  }\n  clear() {\n    for (const objId in this.#objs) {\n      const {\n        data\n      } = this.#objs[objId];\n      data?.bitmap?.close();\n    }\n    this.#objs = Object.create(null);\n  }\n  *[Symbol.iterator]() {\n    for (const objId in this.#objs) {\n      const {\n        data\n      } = this.#objs[objId];\n      if (data === INITIAL_DATA) {\n        continue;\n      }\n      yield [objId, data];\n    }\n  }\n}\n\n;// ./src/display/text_layer.js\n\n\n\n\n\n\n\n\n\n\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nclass TextLayer {\n  #capability = Promise.withResolvers();\n  #container = null;\n  #disableProcessItems = false;\n  #fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n  #lang = null;\n  #layoutTextParams = null;\n  #pageHeight = 0;\n  #pageWidth = 0;\n  #reader = null;\n  #rootContainer = null;\n  #rotation = 0;\n  #scale = 0;\n  #styleCache = Object.create(null);\n  #textContentItemsStr = [];\n  #textContentSource = null;\n  #textDivs = [];\n  #textDivProperties = new WeakMap();\n  #transform = null;\n  static #ascentCache = new Map();\n  static #canvasContexts = new Map();\n  static #canvasCtxFonts = new WeakMap();\n  static #minFontSize = null;\n  static #pendingTextLayers = new Set();\n  constructor({\n    textContentSource,\n    container,\n    viewport\n  }) {\n    if (textContentSource instanceof ReadableStream) {\n      this.#textContentSource = textContentSource;\n    } else if (typeof textContentSource === \"object\") {\n      this.#textContentSource = new ReadableStream({\n        start(controller) {\n          controller.enqueue(textContentSource);\n          controller.close();\n        }\n      });\n    } else {\n      throw new Error('No \"textContentSource\" parameter specified.');\n    }\n    this.#container = this.#rootContainer = container;\n    this.#scale = viewport.scale * OutputScale.pixelRatio;\n    this.#rotation = viewport.rotation;\n    this.#layoutTextParams = {\n      div: null,\n      properties: null,\n      ctx: null\n    };\n    const {\n      pageWidth,\n      pageHeight,\n      pageX,\n      pageY\n    } = viewport.rawDims;\n    this.#transform = [1, 0, 0, -1, -pageX, pageY + pageHeight];\n    this.#pageWidth = pageWidth;\n    this.#pageHeight = pageHeight;\n    TextLayer.#ensureMinFontSizeComputed();\n    setLayerDimensions(container, viewport);\n    this.#capability.promise.finally(() => {\n      TextLayer.#pendingTextLayers.delete(this);\n      this.#layoutTextParams = null;\n      this.#styleCache = null;\n    }).catch(() => {});\n  }\n  static get fontFamilyMap() {\n    const {\n      isWindows,\n      isFirefox\n    } = util_FeatureTest.platform;\n    return shadow(this, \"fontFamilyMap\", new Map([[\"sans-serif\", `${isWindows && isFirefox ? \"Calibri, \" : \"\"}sans-serif`], [\"monospace\", `${isWindows && isFirefox ? \"Lucida Console, \" : \"\"}monospace`]]));\n  }\n  render() {\n    const pump = () => {\n      this.#reader.read().then(({\n        value,\n        done\n      }) => {\n        if (done) {\n          this.#capability.resolve();\n          return;\n        }\n        this.#lang ??= value.lang;\n        Object.assign(this.#styleCache, value.styles);\n        this.#processItems(value.items);\n        pump();\n      }, this.#capability.reject);\n    };\n    this.#reader = this.#textContentSource.getReader();\n    TextLayer.#pendingTextLayers.add(this);\n    pump();\n    return this.#capability.promise;\n  }\n  update({\n    viewport,\n    onBefore = null\n  }) {\n    const scale = viewport.scale * OutputScale.pixelRatio;\n    const rotation = viewport.rotation;\n    if (rotation !== this.#rotation) {\n      onBefore?.();\n      this.#rotation = rotation;\n      setLayerDimensions(this.#rootContainer, {\n        rotation\n      });\n    }\n    if (scale !== this.#scale) {\n      onBefore?.();\n      this.#scale = scale;\n      const params = {\n        div: null,\n        properties: null,\n        ctx: TextLayer.#getCtx(this.#lang)\n      };\n      for (const div of this.#textDivs) {\n        params.properties = this.#textDivProperties.get(div);\n        params.div = div;\n        this.#layout(params);\n      }\n    }\n  }\n  cancel() {\n    const abortEx = new AbortException(\"TextLayer task cancelled.\");\n    this.#reader?.cancel(abortEx).catch(() => {});\n    this.#reader = null;\n    this.#capability.reject(abortEx);\n  }\n  get textDivs() {\n    return this.#textDivs;\n  }\n  get textContentItemsStr() {\n    return this.#textContentItemsStr;\n  }\n  #processItems(items) {\n    if (this.#disableProcessItems) {\n      return;\n    }\n    this.#layoutTextParams.ctx ??= TextLayer.#getCtx(this.#lang);\n    const textDivs = this.#textDivs,\n      textContentItemsStr = this.#textContentItemsStr;\n    for (const item of items) {\n      if (textDivs.length > MAX_TEXT_DIVS_TO_RENDER) {\n        warn(\"Ignoring additional textDivs for performance reasons.\");\n        this.#disableProcessItems = true;\n        return;\n      }\n      if (item.str === undefined) {\n        if (item.type === \"beginMarkedContentProps\" || item.type === \"beginMarkedContent\") {\n          const parent = this.#container;\n          this.#container = document.createElement(\"span\");\n          this.#container.classList.add(\"markedContent\");\n          if (item.id) {\n            this.#container.setAttribute(\"id\", `${item.id}`);\n          }\n          parent.append(this.#container);\n        } else if (item.type === \"endMarkedContent\") {\n          this.#container = this.#container.parentNode;\n        }\n        continue;\n      }\n      textContentItemsStr.push(item.str);\n      this.#appendText(item);\n    }\n  }\n  #appendText(geom) {\n    const textDiv = document.createElement(\"span\");\n    const textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      hasText: geom.str !== \"\",\n      hasEOL: geom.hasEOL,\n      fontSize: 0\n    };\n    this.#textDivs.push(textDiv);\n    const tx = Util.transform(this.#transform, geom.transform);\n    let angle = Math.atan2(tx[1], tx[0]);\n    const style = this.#styleCache[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    let fontFamily = this.#fontInspectorEnabled && style.fontSubstitution || style.fontFamily;\n    fontFamily = TextLayer.fontFamilyMap.get(fontFamily) || fontFamily;\n    const fontHeight = Math.hypot(tx[2], tx[3]);\n    const fontAscent = fontHeight * TextLayer.#getAscent(fontFamily, style, this.#lang);\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    const scaleFactorStr = \"calc(var(--total-scale-factor) *\";\n    const divStyle = textDiv.style;\n    if (this.#container === this.#rootContainer) {\n      divStyle.left = `${(100 * left / this.#pageWidth).toFixed(2)}%`;\n      divStyle.top = `${(100 * top / this.#pageHeight).toFixed(2)}%`;\n    } else {\n      divStyle.left = `${scaleFactorStr}${left.toFixed(2)}px)`;\n      divStyle.top = `${scaleFactorStr}${top.toFixed(2)}px)`;\n    }\n    divStyle.fontSize = `${scaleFactorStr}${(TextLayer.#minFontSize * fontHeight).toFixed(2)}px)`;\n    divStyle.fontFamily = fontFamily;\n    textDivProperties.fontSize = fontHeight;\n    textDiv.setAttribute(\"role\", \"presentation\");\n    textDiv.textContent = geom.str;\n    textDiv.dir = geom.dir;\n    if (this.#fontInspectorEnabled) {\n      textDiv.dataset.fontName = style.fontSubstitutionLoadedName || geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;\n    }\n    this.#textDivProperties.set(textDiv, textDivProperties);\n    this.#layoutTextParams.div = textDiv;\n    this.#layoutTextParams.properties = textDivProperties;\n    this.#layout(this.#layoutTextParams);\n    if (textDivProperties.hasText) {\n      this.#container.append(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this.#container.append(br);\n    }\n  }\n  #layout(params) {\n    const {\n      div,\n      properties,\n      ctx\n    } = params;\n    const {\n      style\n    } = div;\n    let transform = \"\";\n    if (TextLayer.#minFontSize > 1) {\n      transform = `scale(${1 / TextLayer.#minFontSize})`;\n    }\n    if (properties.canvasWidth !== 0 && properties.hasText) {\n      const {\n        fontFamily\n      } = style;\n      const {\n        canvasWidth,\n        fontSize\n      } = properties;\n      TextLayer.#ensureCtxFont(ctx, fontSize * this.#scale, fontFamily);\n      const {\n        width\n      } = ctx.measureText(div.textContent);\n      if (width > 0) {\n        transform = `scaleX(${canvasWidth * this.#scale / width}) ${transform}`;\n      }\n    }\n    if (properties.angle !== 0) {\n      transform = `rotate(${properties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      style.transform = transform;\n    }\n  }\n  static cleanup() {\n    if (this.#pendingTextLayers.size > 0) {\n      return;\n    }\n    this.#ascentCache.clear();\n    for (const {\n      canvas\n    } of this.#canvasContexts.values()) {\n      canvas.remove();\n    }\n    this.#canvasContexts.clear();\n  }\n  static #getCtx(lang = null) {\n    let ctx = this.#canvasContexts.get(lang ||= \"\");\n    if (!ctx) {\n      const canvas = document.createElement(\"canvas\");\n      canvas.className = \"hiddenCanvasElement\";\n      canvas.lang = lang;\n      document.body.append(canvas);\n      ctx = canvas.getContext(\"2d\", {\n        alpha: false,\n        willReadFrequently: true\n      });\n      this.#canvasContexts.set(lang, ctx);\n      this.#canvasCtxFonts.set(ctx, {\n        size: 0,\n        family: \"\"\n      });\n    }\n    return ctx;\n  }\n  static #ensureCtxFont(ctx, size, family) {\n    const cached = this.#canvasCtxFonts.get(ctx);\n    if (size === cached.size && family === cached.family) {\n      return;\n    }\n    ctx.font = `${size}px ${family}`;\n    cached.size = size;\n    cached.family = family;\n  }\n  static #ensureMinFontSizeComputed() {\n    if (this.#minFontSize !== null) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    div.style.opacity = 0;\n    div.style.lineHeight = 1;\n    div.style.fontSize = \"1px\";\n    div.style.position = \"absolute\";\n    div.textContent = \"X\";\n    document.body.append(div);\n    this.#minFontSize = div.getBoundingClientRect().height;\n    div.remove();\n  }\n  static #getAscent(fontFamily, style, lang) {\n    const cachedAscent = this.#ascentCache.get(fontFamily);\n    if (cachedAscent) {\n      return cachedAscent;\n    }\n    const ctx = this.#getCtx(lang);\n    ctx.canvas.width = ctx.canvas.height = DEFAULT_FONT_SIZE;\n    this.#ensureCtxFont(ctx, DEFAULT_FONT_SIZE, fontFamily);\n    const metrics = ctx.measureText(\"\");\n    const ascent = metrics.fontBoundingBoxAscent;\n    const descent = Math.abs(metrics.fontBoundingBoxDescent);\n    ctx.canvas.width = ctx.canvas.height = 0;\n    let ratio = 0.8;\n    if (ascent) {\n      ratio = ascent / (ascent + descent);\n    } else {\n      if (util_FeatureTest.platform.isFirefox) {\n        warn(\"Enable the `dom.textMetrics.fontBoundingBox.enabled` preference \" + \"in `about:config` to improve TextLayer rendering.\");\n      }\n      if (style.ascent) {\n        ratio = style.ascent;\n      } else if (style.descent) {\n        ratio = 1 + style.descent;\n      }\n    }\n    this.#ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n}\n\n;// ./src/display/api.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst RENDERING_CANCELLED_TIMEOUT = 100;\nfunction getDocument(src = {}) {\n  if (typeof src === \"string\" || src instanceof URL) {\n    src = {\n      url: src\n    };\n  } else if (src instanceof ArrayBuffer || ArrayBuffer.isView(src)) {\n    src = {\n      data: src\n    };\n  }\n  const task = new PDFDocumentLoadingTask();\n  const {\n    docId\n  } = task;\n  const url = src.url ? getUrlProp(src.url) : null;\n  const data = src.data ? getDataProp(src.data) : null;\n  const httpHeaders = src.httpHeaders || null;\n  const withCredentials = src.withCredentials === true;\n  const password = src.password ?? null;\n  const rangeTransport = src.range instanceof PDFDataRangeTransport ? src.range : null;\n  const rangeChunkSize = Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0 ? src.rangeChunkSize : 2 ** 16;\n  let worker = src.worker instanceof PDFWorker ? src.worker : null;\n  const verbosity = src.verbosity;\n  const docBaseUrl = typeof src.docBaseUrl === \"string\" && !isDataScheme(src.docBaseUrl) ? src.docBaseUrl : null;\n  const cMapUrl = getFactoryUrlProp(src.cMapUrl);\n  const cMapPacked = src.cMapPacked !== false;\n  const CMapReaderFactory = src.CMapReaderFactory || (isNodeJS ? NodeCMapReaderFactory : DOMCMapReaderFactory);\n  const iccUrl = getFactoryUrlProp(src.iccUrl);\n  const standardFontDataUrl = getFactoryUrlProp(src.standardFontDataUrl);\n  const StandardFontDataFactory = src.StandardFontDataFactory || (isNodeJS ? NodeStandardFontDataFactory : DOMStandardFontDataFactory);\n  const wasmUrl = getFactoryUrlProp(src.wasmUrl);\n  const WasmFactory = src.WasmFactory || (isNodeJS ? NodeWasmFactory : DOMWasmFactory);\n  const ignoreErrors = src.stopAtErrors !== true;\n  const maxImageSize = Number.isInteger(src.maxImageSize) && src.maxImageSize > -1 ? src.maxImageSize : -1;\n  const isEvalSupported = src.isEvalSupported !== false;\n  const isOffscreenCanvasSupported = typeof src.isOffscreenCanvasSupported === \"boolean\" ? src.isOffscreenCanvasSupported : !isNodeJS;\n  const isImageDecoderSupported = typeof src.isImageDecoderSupported === \"boolean\" ? src.isImageDecoderSupported : !isNodeJS && (util_FeatureTest.platform.isFirefox || !globalThis.chrome);\n  const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes) ? src.canvasMaxAreaInBytes : -1;\n  const disableFontFace = typeof src.disableFontFace === \"boolean\" ? src.disableFontFace : isNodeJS;\n  const fontExtraProperties = src.fontExtraProperties === true;\n  const enableXfa = src.enableXfa === true;\n  const ownerDocument = src.ownerDocument || globalThis.document;\n  const disableRange = src.disableRange === true;\n  const disableStream = src.disableStream === true;\n  const disableAutoFetch = src.disableAutoFetch === true;\n  const pdfBug = src.pdfBug === true;\n  const CanvasFactory = src.CanvasFactory || (isNodeJS ? NodeCanvasFactory : DOMCanvasFactory);\n  const FilterFactory = src.FilterFactory || (isNodeJS ? NodeFilterFactory : DOMFilterFactory);\n  const enableHWA = src.enableHWA === true;\n  const useWasm = src.useWasm !== false;\n  const length = rangeTransport ? rangeTransport.length : src.length ?? NaN;\n  const useSystemFonts = typeof src.useSystemFonts === \"boolean\" ? src.useSystemFonts : !isNodeJS && !disableFontFace;\n  const useWorkerFetch = typeof src.useWorkerFetch === \"boolean\" ? src.useWorkerFetch : !!(CMapReaderFactory === DOMCMapReaderFactory && StandardFontDataFactory === DOMStandardFontDataFactory && WasmFactory === DOMWasmFactory && cMapUrl && standardFontDataUrl && wasmUrl && isValidFetchUrl(cMapUrl, document.baseURI) && isValidFetchUrl(standardFontDataUrl, document.baseURI) && isValidFetchUrl(wasmUrl, document.baseURI));\n  const styleElement = null;\n  setVerbosityLevel(verbosity);\n  const transportFactory = {\n    canvasFactory: new CanvasFactory({\n      ownerDocument,\n      enableHWA\n    }),\n    filterFactory: new FilterFactory({\n      docId,\n      ownerDocument\n    }),\n    cMapReaderFactory: useWorkerFetch ? null : new CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: cMapPacked\n    }),\n    standardFontDataFactory: useWorkerFetch ? null : new StandardFontDataFactory({\n      baseUrl: standardFontDataUrl\n    }),\n    wasmFactory: useWorkerFetch ? null : new WasmFactory({\n      baseUrl: wasmUrl\n    })\n  };\n  if (!worker) {\n    worker = PDFWorker.create({\n      verbosity,\n      port: GlobalWorkerOptions.workerPort\n    });\n    task._worker = worker;\n  }\n  const docParams = {\n    docId,\n    apiVersion: \"5.4.296\",\n    data,\n    password,\n    disableAutoFetch,\n    rangeChunkSize,\n    length,\n    docBaseUrl,\n    enableXfa,\n    evaluatorOptions: {\n      maxImageSize,\n      disableFontFace,\n      ignoreErrors,\n      isEvalSupported,\n      isOffscreenCanvasSupported,\n      isImageDecoderSupported,\n      canvasMaxAreaInBytes,\n      fontExtraProperties,\n      useSystemFonts,\n      useWasm,\n      useWorkerFetch,\n      cMapUrl,\n      iccUrl,\n      standardFontDataUrl,\n      wasmUrl\n    }\n  };\n  const transportParams = {\n    ownerDocument,\n    pdfBug,\n    styleElement,\n    loadingParams: {\n      disableAutoFetch,\n      enableXfa\n    }\n  };\n  worker.promise.then(function () {\n    if (task.destroyed) {\n      throw new Error(\"Loading aborted\");\n    }\n    if (worker.destroyed) {\n      throw new Error(\"Worker was destroyed\");\n    }\n    const workerIdPromise = worker.messageHandler.sendWithPromise(\"GetDocRequest\", docParams, data ? [data.buffer] : null);\n    let networkStream;\n    if (rangeTransport) {\n      networkStream = new PDFDataTransportStream(rangeTransport, {\n        disableRange,\n        disableStream\n      });\n    } else if (!data) {\n      if (!url) {\n        throw new Error(\"getDocument - no `url` parameter provided.\");\n      }\n      const NetworkStream = isValidFetchUrl(url) ? PDFFetchStream : isNodeJS ? PDFNodeStream : PDFNetworkStream;\n      networkStream = new NetworkStream({\n        url,\n        length,\n        httpHeaders,\n        withCredentials,\n        rangeChunkSize,\n        disableRange,\n        disableStream\n      });\n    }\n    return workerIdPromise.then(workerId => {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      const messageHandler = new MessageHandler(docId, workerId, worker.port);\n      const transport = new WorkerTransport(messageHandler, task, networkStream, transportParams, transportFactory, enableHWA);\n      task._transport = transport;\n      messageHandler.send(\"Ready\", null);\n    });\n  }).catch(task._capability.reject);\n  return task;\n}\nclass PDFDocumentLoadingTask {\n  static #docId = 0;\n  _capability = Promise.withResolvers();\n  _transport = null;\n  _worker = null;\n  docId = `d${PDFDocumentLoadingTask.#docId++}`;\n  destroyed = false;\n  onPassword = null;\n  onProgress = null;\n  get promise() {\n    return this._capability.promise;\n  }\n  async destroy() {\n    this.destroyed = true;\n    try {\n      if (this._worker?.port) {\n        this._worker._pendingDestroy = true;\n      }\n      await this._transport?.destroy();\n    } catch (ex) {\n      if (this._worker?.port) {\n        delete this._worker._pendingDestroy;\n      }\n      throw ex;\n    }\n    this._transport = null;\n    this._worker?.destroy();\n    this._worker = null;\n  }\n  async getData() {\n    return this._transport.getData();\n  }\n}\nclass PDFDataRangeTransport {\n  #capability = Promise.withResolvers();\n  #progressiveDoneListeners = [];\n  #progressiveReadListeners = [];\n  #progressListeners = [];\n  #rangeListeners = [];\n  constructor(length, initialData, progressiveDone = false, contentDispositionFilename = null) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n  }\n  addRangeListener(listener) {\n    this.#rangeListeners.push(listener);\n  }\n  addProgressListener(listener) {\n    this.#progressListeners.push(listener);\n  }\n  addProgressiveReadListener(listener) {\n    this.#progressiveReadListeners.push(listener);\n  }\n  addProgressiveDoneListener(listener) {\n    this.#progressiveDoneListeners.push(listener);\n  }\n  onDataRange(begin, chunk) {\n    for (const listener of this.#rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n  onDataProgress(loaded, total) {\n    this.#capability.promise.then(() => {\n      for (const listener of this.#progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n  onDataProgressiveRead(chunk) {\n    this.#capability.promise.then(() => {\n      for (const listener of this.#progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n  onDataProgressiveDone() {\n    this.#capability.promise.then(() => {\n      for (const listener of this.#progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n  transportReady() {\n    this.#capability.resolve();\n  }\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n  abort() {}\n}\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n  get canvasFactory() {\n    return this._transport.canvasFactory;\n  }\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n  get isPureXfa() {\n    return shadow(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n  getAnnotationsByType(types, pageIndexesToSkip) {\n    return this._transport.getAnnotationsByType(types, pageIndexesToSkip);\n  }\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n  getOutline() {\n    return this._transport.getOutline();\n  }\n  getOptionalContentConfig({\n    intent = \"display\"\n  } = {}) {\n    const {\n      renderingIntent\n    } = this._transport.getRenderingIntent(intent);\n    return this._transport.getOptionalContentConfig(renderingIntent);\n  }\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n  getData() {\n    return this._transport.getData();\n  }\n  saveDocument() {\n    return this._transport.saveDocument();\n  }\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n  cachedPageNumber(ref) {\n    return this._transport.cachedPageNumber(ref);\n  }\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\nclass PDFPageProxy {\n  #pendingCleanup = false;\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n    this._intentStates = new Map();\n    this.destroyed = false;\n    this.recordedBBoxes = null;\n  }\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n  get ref() {\n    return this._pageInfo.ref;\n  }\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n  get view() {\n    return this._pageInfo.view;\n  }\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      userUnit: this.userUnit,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n  getAnnotations({\n    intent = \"display\"\n  } = {}) {\n    const {\n      renderingIntent\n    } = this._transport.getRenderingIntent(intent);\n    return this._transport.getAnnotations(this._pageIndex, renderingIntent);\n  }\n  getJSActions() {\n    return this._transport.getPageJSActions(this._pageIndex);\n  }\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n  get isPureXfa() {\n    return shadow(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n  render({\n    canvasContext,\n    canvas = canvasContext.canvas,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n    pageColors = null,\n    printAnnotationStorage = null,\n    isEditing = false,\n    recordOperations = false,\n    operationsFilter = null\n  }) {\n    this._stats?.time(\"Overall\");\n    const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage, isEditing);\n    const {\n      renderingIntent,\n      cacheKey\n    } = intentArgs;\n    this.#pendingCleanup = false;\n    optionalContentConfigPromise ||= this._transport.getOptionalContentConfig(renderingIntent);\n    let intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(cacheKey, intentState);\n    }\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n    const intentPrint = !!(renderingIntent & RenderingIntentFlag.PRINT);\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = Promise.withResolvers();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null\n      };\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n    const recordForDebugger = Boolean(this._pdfBug && globalThis.StepperManager?.enabled);\n    const shouldRecordOperations = !this.recordedBBoxes && (recordOperations || recordForDebugger);\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n      if (shouldRecordOperations) {\n        const recordedBBoxes = internalRenderTask.gfx?.dependencyTracker.take();\n        if (recordedBBoxes) {\n          if (internalRenderTask.stepper) {\n            internalRenderTask.stepper.setOperatorBBoxes(recordedBBoxes, internalRenderTask.gfx.dependencyTracker.takeDebugMetadata());\n          }\n          if (recordOperations) {\n            this.recordedBBoxes = recordedBBoxes;\n          }\n        }\n      }\n      if (intentPrint) {\n        this.#pendingCleanup = true;\n      }\n      this.#tryCleanup();\n      if (error) {\n        internalRenderTask.capability.reject(error);\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error)\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n        if (globalThis.Stats?.enabled) {\n          globalThis.Stats.add(this.pageNumber, this._stats);\n        }\n      }\n    };\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      params: {\n        canvas,\n        canvasContext,\n        dependencyTracker: shouldRecordOperations ? new CanvasDependencyTracker(canvas, intentState.operatorList.length, recordForDebugger) : null,\n        viewport,\n        transform,\n        background\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: this._transport.canvasFactory,\n      filterFactory: this._transport.filterFactory,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n      pageColors,\n      enableHWA: this._transport.enableHWA,\n      operationsFilter\n    });\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n    Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(([transparency, optionalContentConfig]) => {\n      if (this.destroyed) {\n        complete();\n        return;\n      }\n      this._stats?.time(\"Rendering\");\n      if (!(optionalContentConfig.renderingIntent & renderingIntent)) {\n        throw new Error(\"Must use the same `intent`-argument when calling the `PDFPageProxy.render` \" + \"and `PDFDocumentProxy.getOptionalContentConfig` methods.\");\n      }\n      internalRenderTask.initializeGraphics({\n        transparency,\n        optionalContentConfig\n      });\n      internalRenderTask.operatorListChanged();\n    }).catch(complete);\n    return renderTask;\n  }\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    printAnnotationStorage = null,\n    isEditing = false\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n    const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage, isEditing, true);\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = Promise.withResolvers();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null\n      };\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n  streamTextContent({\n    includeMarkedContent = false,\n    disableNormalization = false\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n    return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n      pageIndex: this._pageIndex,\n      includeMarkedContent: includeMarkedContent === true,\n      disableNormalization: disableNormalization === true\n    }, {\n      highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n      size(textContent) {\n        return textContent.items.length;\n      }\n    });\n  }\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      return this.getXfa().then(xfa => XfaText.textContent(xfa));\n    }\n    const readableStream = this.streamTextContent(params);\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          textContent.lang ??= value.lang;\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n        lang: null\n      };\n      pump();\n    });\n  }\n  getStructTree() {\n    return this._transport.getStructTree(this._pageIndex);\n  }\n  _destroy() {\n    this.destroyed = true;\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true\n      });\n      if (intentState.opListReadCapability) {\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n  cleanup(resetStats = false) {\n    this.#pendingCleanup = true;\n    const success = this.#tryCleanup();\n    if (resetStats && success) {\n      this._stats &&= new StatTimer();\n    }\n    return success;\n  }\n  #tryCleanup() {\n    if (!this.#pendingCleanup || this.destroyed) {\n      return false;\n    }\n    for (const {\n      renderTasks,\n      operatorList\n    } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n    this._intentStates.clear();\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    return true;\n  }\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return;\n    }\n    this._stats?.timeEnd(\"Page Request\");\n    intentState.displayReadyCapability?.resolve(transparency);\n  }\n  _renderPageChunk(operatorListChunk, intentState) {\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n    intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n    if (operatorListChunk.lastChunk) {\n      this.#tryCleanup();\n    }\n  }\n  _pumpOperatorList({\n    renderingIntent,\n    cacheKey,\n    annotationStorageSerializable,\n    modifiedIds\n  }) {\n    const {\n      map,\n      transfer\n    } = annotationStorageSerializable;\n    const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n      pageIndex: this._pageIndex,\n      intent: renderingIntent,\n      cacheKey,\n      annotationStorage: map,\n      modifiedIds\n    }, transfer);\n    const reader = readableStream.getReader();\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n    const pump = () => {\n      reader.read().then(({\n        value,\n        done\n      }) => {\n        if (done) {\n          intentState.streamReader = null;\n          return;\n        }\n        if (this._transport.destroyed) {\n          return;\n        }\n        this._renderPageChunk(value, intentState);\n        pump();\n      }, reason => {\n        intentState.streamReader = null;\n        if (this._transport.destroyed) {\n          return;\n        }\n        if (intentState.operatorList) {\n          intentState.operatorList.lastChunk = true;\n          for (const internalRenderTask of intentState.renderTasks) {\n            internalRenderTask.operatorListChanged();\n          }\n          this.#tryCleanup();\n        }\n        if (intentState.displayReadyCapability) {\n          intentState.displayReadyCapability.reject(reason);\n        } else if (intentState.opListReadCapability) {\n          intentState.opListReadCapability.reject(reason);\n        } else {\n          throw reason;\n        }\n      });\n    };\n    pump();\n  }\n  _abortOperatorList({\n    intentState,\n    reason,\n    force = false\n  }) {\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n    if (!force) {\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      if (reason instanceof RenderingCancelledException) {\n        let delay = RENDERING_CANCELLED_TIMEOUT;\n        if (reason.extraDelay > 0 && reason.extraDelay < 1000) {\n          delay += reason.extraDelay;\n        }\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          intentState.streamReaderCancelTimeout = null;\n          this._abortOperatorList({\n            intentState,\n            reason,\n            force: true\n          });\n        }, delay);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(new AbortException(reason.message)).catch(() => {});\n    intentState.streamReader = null;\n    if (this._transport.destroyed) {\n      return;\n    }\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    this.cleanup();\n  }\n  get stats() {\n    return this._stats;\n  }\n}\nclass PDFWorker {\n  #capability = Promise.withResolvers();\n  #messageHandler = null;\n  #port = null;\n  #webWorker = null;\n  static #fakeWorkerId = 0;\n  static #isWorkerDisabled = false;\n  static #workerPorts = new WeakMap();\n  static {\n    if (isNodeJS) {\n      this.#isWorkerDisabled = true;\n      GlobalWorkerOptions.workerSrc ||= \"./pdf.worker.mjs\";\n    }\n    this._isSameOrigin = (baseUrl, otherUrl) => {\n      const base = URL.parse(baseUrl);\n      if (!base?.origin || base.origin === \"null\") {\n        return false;\n      }\n      const other = new URL(otherUrl, base);\n      return base.origin === other.origin;\n    };\n    this._createCDNWrapper = url => {\n      const wrapper = `await import(\"${url}\");`;\n      return URL.createObjectURL(new Blob([wrapper], {\n        type: \"text/javascript\"\n      }));\n    };\n    this.fromPort = params => {\n      deprecated(\"`PDFWorker.fromPort` - please use `PDFWorker.create` instead.\");\n      if (!params?.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      return this.create(params);\n    };\n  }\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel()\n  } = {}) {\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n    if (port) {\n      if (PDFWorker.#workerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port.\");\n      }\n      PDFWorker.#workerPorts.set(port, this);\n      this.#initializeFromPort(port);\n    } else {\n      this.#initialize();\n    }\n  }\n  get promise() {\n    return this.#capability.promise;\n  }\n  #resolve() {\n    this.#capability.resolve();\n    this.#messageHandler.send(\"configure\", {\n      verbosity: this.verbosity\n    });\n  }\n  get port() {\n    return this.#port;\n  }\n  get messageHandler() {\n    return this.#messageHandler;\n  }\n  #initializeFromPort(port) {\n    this.#port = port;\n    this.#messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this.#messageHandler.on(\"ready\", () => {});\n    this.#resolve();\n  }\n  #initialize() {\n    if (PDFWorker.#isWorkerDisabled || PDFWorker.#mainThreadWorkerMessageHandler) {\n      this.#setupFakeWorker();\n      return;\n    }\n    let {\n      workerSrc\n    } = PDFWorker;\n    try {\n      if (!PDFWorker._isSameOrigin(window.location, workerSrc)) {\n        workerSrc = PDFWorker._createCDNWrapper(new URL(workerSrc, window.location).href);\n      }\n      const worker = new Worker(workerSrc, {\n        type: \"module\"\n      });\n      const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n      const terminateEarly = () => {\n        ac.abort();\n        messageHandler.destroy();\n        worker.terminate();\n        if (this.destroyed) {\n          this.#capability.reject(new Error(\"Worker was destroyed\"));\n        } else {\n          this.#setupFakeWorker();\n        }\n      };\n      const ac = new AbortController();\n      worker.addEventListener(\"error\", () => {\n        if (!this.#webWorker) {\n          terminateEarly();\n        }\n      }, {\n        signal: ac.signal\n      });\n      messageHandler.on(\"test\", data => {\n        ac.abort();\n        if (this.destroyed || !data) {\n          terminateEarly();\n          return;\n        }\n        this.#messageHandler = messageHandler;\n        this.#port = worker;\n        this.#webWorker = worker;\n        this.#resolve();\n      });\n      messageHandler.on(\"ready\", data => {\n        ac.abort();\n        if (this.destroyed) {\n          terminateEarly();\n          return;\n        }\n        try {\n          sendTest();\n        } catch {\n          this.#setupFakeWorker();\n        }\n      });\n      const sendTest = () => {\n        const testObj = new Uint8Array();\n        messageHandler.send(\"test\", testObj, [testObj.buffer]);\n      };\n      sendTest();\n      return;\n    } catch {\n      info(\"The worker has been disabled.\");\n    }\n    this.#setupFakeWorker();\n  }\n  #setupFakeWorker() {\n    if (!PDFWorker.#isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorker.#isWorkerDisabled = true;\n    }\n    PDFWorker._setupFakeWorkerGlobal.then(WorkerMessageHandler => {\n      if (this.destroyed) {\n        this.#capability.reject(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      const port = new LoopbackPort();\n      this.#port = port;\n      const id = `fake${PDFWorker.#fakeWorkerId++}`;\n      const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n      WorkerMessageHandler.setup(workerHandler, port);\n      this.#messageHandler = new MessageHandler(id, id + \"_worker\", port);\n      this.#resolve();\n    }).catch(reason => {\n      this.#capability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n    });\n  }\n  destroy() {\n    this.destroyed = true;\n    this.#webWorker?.terminate();\n    this.#webWorker = null;\n    PDFWorker.#workerPorts.delete(this.#port);\n    this.#port = null;\n    this.#messageHandler?.destroy();\n    this.#messageHandler = null;\n  }\n  static create(params) {\n    const cachedPort = this.#workerPorts.get(params?.port);\n    if (cachedPort) {\n      if (cachedPort._pendingDestroy) {\n        throw new Error(\"PDFWorker.create - the worker is being destroyed.\\n\" + \"Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.\");\n      }\n      return cachedPort;\n    }\n    return new PDFWorker(params);\n  }\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n  static get #mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch {\n      return null;\n    }\n  }\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      if (this.#mainThreadWorkerMessageHandler) {\n        return this.#mainThreadWorkerMessageHandler;\n      }\n      const worker = await import(\n      /*webpackIgnore: true*/\n      /*@vite-ignore*/\n      this.workerSrc);\n      return worker.WorkerMessageHandler;\n    };\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nclass WorkerTransport {\n  #methodPromises = new Map();\n  #pageCache = new Map();\n  #pagePromises = new Map();\n  #pageRefCache = new Map();\n  #passwordCapability = null;\n  constructor(messageHandler, loadingTask, networkStream, params, factory, enableHWA) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement\n    });\n    this.loadingParams = params.loadingParams;\n    this._params = params;\n    this.canvasFactory = factory.canvasFactory;\n    this.filterFactory = factory.filterFactory;\n    this.cMapReaderFactory = factory.cMapReaderFactory;\n    this.standardFontDataFactory = factory.standardFontDataFactory;\n    this.wasmFactory = factory.wasmFactory;\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = Promise.withResolvers();\n    this.enableHWA = enableHWA;\n    this.setupMessageHandler();\n  }\n  #cacheSimpleMethod(name, data = null) {\n    const cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(name, data);\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n  getRenderingIntent(intent, annotationMode = AnnotationMode.ENABLE, printAnnotationStorage = null, isEditing = false, isOpList = false) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY;\n    let annotationStorageSerializable = SerializableEmpty;\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n    const annotationStorage = renderingIntent & RenderingIntentFlag.PRINT && printAnnotationStorage instanceof PrintAnnotationStorage ? printAnnotationStorage : this.annotationStorage;\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n        annotationStorageSerializable = annotationStorage.serializable;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n    if (isEditing) {\n      renderingIntent += RenderingIntentFlag.IS_EDITING;\n    }\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n    const {\n      ids: modifiedIds,\n      hash: modifiedIdsHash\n    } = annotationStorage.modifiedIds;\n    const cacheKeyBuf = [renderingIntent, annotationStorageSerializable.hash, modifiedIdsHash];\n    return {\n      renderingIntent,\n      cacheKey: cacheKeyBuf.join(\"_\"),\n      annotationStorageSerializable,\n      modifiedIds\n    };\n  }\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n    this.destroyed = true;\n    this.destroyCapability = Promise.withResolvers();\n    this.#passwordCapability?.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n    const waitOn = [];\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    this.#pageRefCache.clear();\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#methodPromises.clear();\n      this.filterFactory.destroy();\n      TextLayer.cleanup();\n      this._networkStream?.cancelAllRequests(new AbortException(\"Worker was terminated.\"));\n      this.messageHandler?.destroy();\n      this.messageHandler = null;\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n  setupMessageHandler() {\n    const {\n      messageHandler,\n      loadingTask\n    } = this;\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n          assert(value instanceof ArrayBuffer, \"GetReader - expected an ArrayBuffer.\");\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return;\n          }\n          throw readyReason;\n        });\n      };\n    });\n    messageHandler.on(\"ReaderHeadersReady\", async data => {\n      await this._fullReader.headersReady;\n      const {\n        isStreamingSupported,\n        isRangeSupported,\n        contentLength\n      } = this._fullReader;\n      if (!isStreamingSupported || !isRangeSupported) {\n        if (this._lastProgress) {\n          loadingTask.onProgress?.(this._lastProgress);\n        }\n        this._fullReader.onProgress = evt => {\n          loadingTask.onProgress?.({\n            loaded: evt.loaded,\n            total: evt.total\n          });\n        };\n      }\n      return {\n        isStreamingSupported,\n        isRangeSupported,\n        contentLength\n      };\n    });\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n      const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n      sink.onPull = () => {\n        rangeReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n          assert(value instanceof ArrayBuffer, \"GetRangeReader - expected an ArrayBuffer.\");\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return;\n          }\n          throw readyReason;\n        });\n      };\n    });\n    messageHandler.on(\"GetDoc\", ({\n      pdfInfo\n    }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n    messageHandler.on(\"DocException\", ex => {\n      loadingTask._capability.reject(wrapReason(ex));\n    });\n    messageHandler.on(\"PasswordRequest\", ex => {\n      this.#passwordCapability = Promise.withResolvers();\n      try {\n        if (!loadingTask.onPassword) {\n          throw wrapReason(ex);\n        }\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this.#passwordCapability.reject(password);\n          } else {\n            this.#passwordCapability.resolve({\n              password\n            });\n          }\n        };\n        loadingTask.onPassword(updatePassword, ex.code);\n      } catch (err) {\n        this.#passwordCapability.reject(err);\n      }\n      return this.#passwordCapability.promise;\n    });\n    messageHandler.on(\"DataLoaded\", data => {\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length\n      });\n      this.downloadInfoCapability.resolve(data);\n    });\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return;\n      }\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return null;\n      }\n      if (this.commonObjs.has(id)) {\n        return null;\n      }\n      switch (type) {\n        case \"Font\":\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n          const fontData = new FontInfo(exportedData);\n          const inspectFont = this._params.pdfBug && globalThis.FontInspector?.enabled ? (font, url) => globalThis.FontInspector.fontAdded(font, url) : null;\n          const font = new FontFaceObject(fontData, inspectFont, exportedData.extra, exportedData.charProcOperatorList);\n          this.fontLoader.bind(font).catch(() => messageHandler.sendWithPromise(\"FontFallback\", {\n            id\n          })).finally(() => {\n            if (!font.fontExtraProperties && font.data) {\n              font.clearData();\n            }\n            this.commonObjs.resolve(id, font);\n          });\n          break;\n        case \"CopyLocalImage\":\n          const {\n            imageRef\n          } = exportedData;\n          assert(imageRef, \"The imageRef must be defined.\");\n          for (const pageProxy of this.#pageCache.values()) {\n            for (const [, data] of pageProxy.objs) {\n              if (data?.ref !== imageRef) {\n                continue;\n              }\n              if (!data.dataLen) {\n                return null;\n              }\n              this.commonObjs.resolve(id, structuredClone(data));\n              return data.dataLen;\n            }\n          }\n          break;\n        case \"FontPath\":\n        case \"Image\":\n        case \"Pattern\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n      return null;\n    });\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        return;\n      }\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n      if (pageProxy._intentStates.size === 0) {\n        imageData?.bitmap?.close();\n        return;\n      }\n      switch (type) {\n        case \"Image\":\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return;\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total\n      });\n    });\n    messageHandler.on(\"FetchBinaryData\", async data => {\n      if (this.destroyed) {\n        throw new Error(\"Worker was destroyed.\");\n      }\n      const factory = this[data.type];\n      if (!factory) {\n        throw new Error(`${data.type} not initialized, see the \\`useWorkerFetch\\` parameter.`);\n      }\n      return factory.fetch(data);\n    });\n  }\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n  saveDocument() {\n    if (this.annotationStorage.size <= 0) {\n      warn(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n    }\n    const {\n      map,\n      transfer\n    } = this.annotationStorage.serializable;\n    return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n      isPureXfa: !!this._htmlForXfa,\n      numPages: this._numPages,\n      annotationStorage: map,\n      filename: this._fullReader?.filename ?? null\n    }, transfer).finally(() => {\n      this.annotationStorage.resetModified();\n    });\n  }\n  getPage(pageNumber) {\n    if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n      pageIndex\n    }).then(pageInfo => {\n      if (this.destroyed) {\n        throw new Error(\"Transport destroyed\");\n      }\n      if (pageInfo.refStr) {\n        this.#pageRefCache.set(pageInfo.refStr, pageNumber);\n      }\n      const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n      this.#pageCache.set(pageIndex, page);\n      return page;\n    });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n  getPageIndex(ref) {\n    if (!isRefProxy(ref)) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen\n    });\n  }\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent\n    });\n  }\n  getFieldObjects() {\n    return this.#cacheSimpleMethod(\"GetFieldObjects\");\n  }\n  hasJSActions() {\n    return this.#cacheSimpleMethod(\"HasJSActions\");\n  }\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id\n    });\n  }\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n  getAnnotationsByType(types, pageIndexesToSkip) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotationsByType\", {\n      types,\n      pageIndexesToSkip\n    });\n  }\n  getDocJSActions() {\n    return this.#cacheSimpleMethod(\"GetDocJSActions\");\n  }\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex\n    });\n  }\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex\n    });\n  }\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n  getOptionalContentConfig(renderingIntent) {\n    return this.#cacheSimpleMethod(\"GetOptionalContentConfig\").then(data => new OptionalContentConfig(data, renderingIntent));\n  }\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n  getMetadata() {\n    const name = \"GetMetadata\",\n      cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(name, null).then(results => ({\n      info: results[0],\n      metadata: results[1] ? new Metadata(results[1]) : null,\n      contentDispositionFilename: this._fullReader?.filename ?? null,\n      contentLength: this._fullReader?.contentLength ?? null\n    }));\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n  async startCleanup(keepLoadedFonts = false) {\n    if (this.destroyed) {\n      return;\n    }\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#methodPromises.clear();\n    this.filterFactory.destroy(true);\n    TextLayer.cleanup();\n  }\n  cachedPageNumber(ref) {\n    if (!isRefProxy(ref)) {\n      return null;\n    }\n    const refStr = ref.gen === 0 ? `${ref.num}R` : `${ref.num}R${ref.gen}`;\n    return this.#pageRefCache.get(refStr) ?? null;\n  }\n}\nclass RenderTask {\n  #internalRenderTask = null;\n  onContinue = null;\n  onError = null;\n  constructor(internalRenderTask) {\n    this.#internalRenderTask = internalRenderTask;\n  }\n  get promise() {\n    return this.#internalRenderTask.capability.promise;\n  }\n  cancel(extraDelay = 0) {\n    this.#internalRenderTask.cancel(null, extraDelay);\n  }\n  get separateAnnots() {\n    const {\n      separateAnnots\n    } = this.#internalRenderTask.operatorList;\n    if (!separateAnnots) {\n      return false;\n    }\n    const {\n      annotationCanvasMap\n    } = this.#internalRenderTask;\n    return separateAnnots.form || separateAnnots.canvas && annotationCanvasMap?.size > 0;\n  }\n}\nclass InternalRenderTask {\n  #rAF = null;\n  static #canvasInUse = new WeakSet();\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    filterFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n    pageColors = null,\n    enableHWA = false,\n    operationsFilter = null\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this._pdfBug = pdfBug;\n    this.pageColors = pageColors;\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = Promise.withResolvers();\n    this.task = new RenderTask(this);\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvas;\n    this._canvasContext = params.canvas ? null : params.canvasContext;\n    this._enableHWA = enableHWA;\n    this._dependencyTracker = params.dependencyTracker;\n    this._operationsFilter = operationsFilter;\n  }\n  get completed() {\n    return this.capability.promise.catch(function () {});\n  }\n  initializeGraphics({\n    transparency = false,\n    optionalContentConfig\n  }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n        throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n      }\n      InternalRenderTask.#canvasInUse.add(this._canvas);\n    }\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const {\n      viewport,\n      transform,\n      background,\n      dependencyTracker\n    } = this.params;\n    const canvasContext = this._canvasContext || this._canvas.getContext(\"2d\", {\n      alpha: false,\n      willReadFrequently: !this._enableHWA\n    });\n    this.gfx = new CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n      optionalContentConfig\n    }, this.annotationCanvasMap, this.pageColors, dependencyTracker);\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    this.graphicsReadyCallback?.();\n  }\n  cancel(error = null, extraDelay = 0) {\n    this.running = false;\n    this.cancelled = true;\n    this.gfx?.endDrawing();\n    if (this.#rAF) {\n      window.cancelAnimationFrame(this.#rAF);\n      this.#rAF = null;\n    }\n    InternalRenderTask.#canvasInUse.delete(this._canvas);\n    error ||= new RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, extraDelay);\n    this.callback(error);\n    this.task.onError?.(error);\n  }\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      this.graphicsReadyCallback ||= this._continueBound;\n      return;\n    }\n    this.gfx.dependencyTracker?.growOperationsCount(this.operatorList.fnArray.length);\n    this.stepper?.updateOperatorList(this.operatorList);\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      this.#rAF = window.requestAnimationFrame(() => {\n        this.#rAF = null;\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper, this._operationsFilter);\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        InternalRenderTask.#canvasInUse.delete(this._canvas);\n        this.callback();\n      }\n    }\n  }\n}\nconst version = \"5.4.296\";\nconst build = \"f56dc8601\";\n\n;// ./src/display/editor/color_picker.js\n\n\n\nclass ColorPicker {\n  #button = null;\n  #buttonSwatch = null;\n  #defaultColor;\n  #dropdown = null;\n  #dropdownWasFromKeyboard = false;\n  #isMainColorPicker = false;\n  #editor = null;\n  #eventBus;\n  #openDropdownAC = null;\n  #uiManager = null;\n  static #l10nColor = null;\n  static get _keyboardManager() {\n    return shadow(this, \"_keyboardManager\", new KeyboardManager([[[\"Escape\", \"mac+Escape\"], ColorPicker.prototype._hideDropdownFromKeyboard], [[\" \", \"mac+ \"], ColorPicker.prototype._colorSelectFromKeyboard], [[\"ArrowDown\", \"ArrowRight\", \"mac+ArrowDown\", \"mac+ArrowRight\"], ColorPicker.prototype._moveToNext], [[\"ArrowUp\", \"ArrowLeft\", \"mac+ArrowUp\", \"mac+ArrowLeft\"], ColorPicker.prototype._moveToPrevious], [[\"Home\", \"mac+Home\"], ColorPicker.prototype._moveToBeginning], [[\"End\", \"mac+End\"], ColorPicker.prototype._moveToEnd]]));\n  }\n  constructor({\n    editor = null,\n    uiManager = null\n  }) {\n    if (editor) {\n      this.#isMainColorPicker = false;\n      this.#editor = editor;\n    } else {\n      this.#isMainColorPicker = true;\n    }\n    this.#uiManager = editor?._uiManager || uiManager;\n    this.#eventBus = this.#uiManager._eventBus;\n    this.#defaultColor = editor?.color?.toUpperCase() || this.#uiManager?.highlightColors.values().next().value || \"#FFFF98\";\n    ColorPicker.#l10nColor ||= Object.freeze({\n      blue: \"pdfjs-editor-colorpicker-blue\",\n      green: \"pdfjs-editor-colorpicker-green\",\n      pink: \"pdfjs-editor-colorpicker-pink\",\n      red: \"pdfjs-editor-colorpicker-red\",\n      yellow: \"pdfjs-editor-colorpicker-yellow\"\n    });\n  }\n  renderButton() {\n    const button = this.#button = document.createElement(\"button\");\n    button.className = \"colorPicker\";\n    button.tabIndex = \"0\";\n    button.setAttribute(\"data-l10n-id\", \"pdfjs-editor-colorpicker-button\");\n    button.ariaHasPopup = \"true\";\n    if (this.#editor) {\n      button.ariaControls = `${this.#editor.id}_colorpicker_dropdown`;\n    }\n    const signal = this.#uiManager._signal;\n    button.addEventListener(\"click\", this.#openDropdown.bind(this), {\n      signal\n    });\n    button.addEventListener(\"keydown\", this.#keyDown.bind(this), {\n      signal\n    });\n    const swatch = this.#buttonSwatch = document.createElement(\"span\");\n    swatch.className = \"swatch\";\n    swatch.ariaHidden = \"true\";\n    swatch.style.backgroundColor = this.#defaultColor;\n    button.append(swatch);\n    return button;\n  }\n  renderMainDropdown() {\n    const dropdown = this.#dropdown = this.#getDropdownRoot();\n    dropdown.ariaOrientation = \"horizontal\";\n    dropdown.ariaLabelledBy = \"highlightColorPickerLabel\";\n    return dropdown;\n  }\n  #getDropdownRoot() {\n    const div = document.createElement(\"div\");\n    const signal = this.#uiManager._signal;\n    div.addEventListener(\"contextmenu\", noContextMenu, {\n      signal\n    });\n    div.className = \"dropdown\";\n    div.role = \"listbox\";\n    div.ariaMultiSelectable = \"false\";\n    div.ariaOrientation = \"vertical\";\n    div.setAttribute(\"data-l10n-id\", \"pdfjs-editor-colorpicker-dropdown\");\n    if (this.#editor) {\n      div.id = `${this.#editor.id}_colorpicker_dropdown`;\n    }\n    for (const [name, color] of this.#uiManager.highlightColors) {\n      const button = document.createElement(\"button\");\n      button.tabIndex = \"0\";\n      button.role = \"option\";\n      button.setAttribute(\"data-color\", color);\n      button.title = name;\n      button.setAttribute(\"data-l10n-id\", ColorPicker.#l10nColor[name]);\n      const swatch = document.createElement(\"span\");\n      button.append(swatch);\n      swatch.className = \"swatch\";\n      swatch.style.backgroundColor = color;\n      button.ariaSelected = color === this.#defaultColor;\n      button.addEventListener(\"click\", this.#colorSelect.bind(this, color), {\n        signal\n      });\n      div.append(button);\n    }\n    div.addEventListener(\"keydown\", this.#keyDown.bind(this), {\n      signal\n    });\n    return div;\n  }\n  #colorSelect(color, event) {\n    event.stopPropagation();\n    this.#eventBus.dispatch(\"switchannotationeditorparams\", {\n      source: this,\n      type: AnnotationEditorParamsType.HIGHLIGHT_COLOR,\n      value: color\n    });\n    this.updateColor(color);\n  }\n  _colorSelectFromKeyboard(event) {\n    if (event.target === this.#button) {\n      this.#openDropdown(event);\n      return;\n    }\n    const color = event.target.getAttribute(\"data-color\");\n    if (!color) {\n      return;\n    }\n    this.#colorSelect(color, event);\n  }\n  _moveToNext(event) {\n    if (!this.#isDropdownVisible) {\n      this.#openDropdown(event);\n      return;\n    }\n    if (event.target === this.#button) {\n      this.#dropdown.firstChild?.focus();\n      return;\n    }\n    event.target.nextSibling?.focus();\n  }\n  _moveToPrevious(event) {\n    if (event.target === this.#dropdown?.firstChild || event.target === this.#button) {\n      if (this.#isDropdownVisible) {\n        this._hideDropdownFromKeyboard();\n      }\n      return;\n    }\n    if (!this.#isDropdownVisible) {\n      this.#openDropdown(event);\n    }\n    event.target.previousSibling?.focus();\n  }\n  _moveToBeginning(event) {\n    if (!this.#isDropdownVisible) {\n      this.#openDropdown(event);\n      return;\n    }\n    this.#dropdown.firstChild?.focus();\n  }\n  _moveToEnd(event) {\n    if (!this.#isDropdownVisible) {\n      this.#openDropdown(event);\n      return;\n    }\n    this.#dropdown.lastChild?.focus();\n  }\n  #keyDown(event) {\n    ColorPicker._keyboardManager.exec(this, event);\n  }\n  #openDropdown(event) {\n    if (this.#isDropdownVisible) {\n      this.hideDropdown();\n      return;\n    }\n    this.#dropdownWasFromKeyboard = event.detail === 0;\n    if (!this.#openDropdownAC) {\n      this.#openDropdownAC = new AbortController();\n      window.addEventListener(\"pointerdown\", this.#pointerDown.bind(this), {\n        signal: this.#uiManager.combinedSignal(this.#openDropdownAC)\n      });\n    }\n    this.#button.ariaExpanded = \"true\";\n    if (this.#dropdown) {\n      this.#dropdown.classList.remove(\"hidden\");\n      return;\n    }\n    const root = this.#dropdown = this.#getDropdownRoot();\n    this.#button.append(root);\n  }\n  #pointerDown(event) {\n    if (this.#dropdown?.contains(event.target)) {\n      return;\n    }\n    this.hideDropdown();\n  }\n  hideDropdown() {\n    this.#dropdown?.classList.add(\"hidden\");\n    this.#button.ariaExpanded = \"false\";\n    this.#openDropdownAC?.abort();\n    this.#openDropdownAC = null;\n  }\n  get #isDropdownVisible() {\n    return this.#dropdown && !this.#dropdown.classList.contains(\"hidden\");\n  }\n  _hideDropdownFromKeyboard() {\n    if (this.#isMainColorPicker) {\n      return;\n    }\n    if (!this.#isDropdownVisible) {\n      this.#editor?.unselect();\n      return;\n    }\n    this.hideDropdown();\n    this.#button.focus({\n      preventScroll: true,\n      focusVisible: this.#dropdownWasFromKeyboard\n    });\n  }\n  updateColor(color) {\n    if (this.#buttonSwatch) {\n      this.#buttonSwatch.style.backgroundColor = color;\n    }\n    if (!this.#dropdown) {\n      return;\n    }\n    const i = this.#uiManager.highlightColors.values();\n    for (const child of this.#dropdown.children) {\n      child.ariaSelected = i.next().value === color.toUpperCase();\n    }\n  }\n  destroy() {\n    this.#button?.remove();\n    this.#button = null;\n    this.#buttonSwatch = null;\n    this.#dropdown?.remove();\n    this.#dropdown = null;\n  }\n}\nclass BasicColorPicker {\n  #input = null;\n  #editor = null;\n  #uiManager = null;\n  static #l10nColor = null;\n  constructor(editor) {\n    this.#editor = editor;\n    this.#uiManager = editor._uiManager;\n    BasicColorPicker.#l10nColor ||= Object.freeze({\n      freetext: \"pdfjs-editor-color-picker-free-text-input\",\n      ink: \"pdfjs-editor-color-picker-ink-input\"\n    });\n  }\n  renderButton() {\n    if (this.#input) {\n      return this.#input;\n    }\n    const {\n      editorType,\n      colorType,\n      colorValue\n    } = this.#editor;\n    const input = this.#input = document.createElement(\"input\");\n    input.type = \"color\";\n    input.value = colorValue || \"#000000\";\n    input.className = \"basicColorPicker\";\n    input.tabIndex = 0;\n    input.setAttribute(\"data-l10n-id\", BasicColorPicker.#l10nColor[editorType]);\n    input.addEventListener(\"input\", () => {\n      this.#uiManager.updateParams(colorType, input.value);\n    }, {\n      signal: this.#uiManager._signal\n    });\n    return input;\n  }\n  update(value) {\n    if (!this.#input) {\n      return;\n    }\n    this.#input.value = value;\n  }\n  destroy() {\n    this.#input?.remove();\n    this.#input = null;\n  }\n  hideDropdown() {}\n}\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.iterator.find.js\nvar es_iterator_find = __webpack_require__(116);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.iterator.flat-map.js\nvar es_iterator_flat_map = __webpack_require__(531);\n;// ./src/shared/scripting_utils.js\n\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n}\nfunction scaleAndClamp(x) {\n  return Math.max(0, Math.min(255, 255 * x));\n}\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n  static G_rgb([g]) {\n    g = scaleAndClamp(g);\n    return [g, g, g];\n  }\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n  static RGB_rgb(color) {\n    return color.map(scaleAndClamp);\n  }\n  static RGB_HTML(color) {\n    return `#${color.map(makeColorComp).join(\"\")}`;\n  }\n  static T_HTML() {\n    return \"#00000000\";\n  }\n  static T_rgb() {\n    return [null];\n  }\n  static CMYK_RGB([c, y, m, k]) {\n    return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n  }\n  static CMYK_rgb([c, y, m, k]) {\n    return [scaleAndClamp(1 - Math.min(1, c + k)), scaleAndClamp(1 - Math.min(1, m + k)), scaleAndClamp(1 - Math.min(1, y + k))];\n  }\n  static CMYK_HTML(components) {\n    const rgb = this.CMYK_RGB(components).slice(1);\n    return this.RGB_HTML(rgb);\n  }\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\nconst DateFormats = (/* unused pure expression or super */ null && ([\"m/d\", \"m/d/yy\", \"mm/dd/yy\", \"mm/yy\", \"d-mmm\", \"d-mmm-yy\", \"dd-mmm-yy\", \"yy-mm-dd\", \"mmm-yy\", \"mmmm-yy\", \"mmm d, yyyy\", \"mmmm d, yyyy\", \"m/d/yy h:MM tt\", \"m/d/yy HH:MM\"]));\nconst TimeFormats = (/* unused pure expression or super */ null && ([\"HH:MM\", \"h:MM tt\", \"HH:MM:ss\", \"h:MM:ss tt\"]));\n\n;// ./src/display/svg_factory.js\n\n\nclass BaseSVGFactory {\n  create(width, height, skipDimensions = false) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    if (!skipDimensions) {\n      svg.setAttribute(\"width\", `${width}px`);\n      svg.setAttribute(\"height\", `${height}px`);\n    }\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n    return svg;\n  }\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n;// ./src/display/annotation_layer.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst annotation_layer_DEFAULT_FONT_SIZE = 9;\nconst GetElementsByNameSet = new WeakSet();\nconst TIMEZONE_OFFSET = new Date().getTimezoneOffset() * 60 * 1000;\nclass AnnotationElementFactory {\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n          case \"Sig\":\n            return new SignatureWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\nclass AnnotationElement {\n  #updates = null;\n  #hasBorder = false;\n  #popupElement = null;\n  constructor(parameters, {\n    isRenderable = false,\n    ignoreBorder = false,\n    createQuadrilaterals = false\n  } = {}) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableComment = parameters.enableComment;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this.parent = parameters.parent;\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this._createQuadrilaterals();\n    }\n  }\n  static _hasPopupData({\n    contentsObj,\n    richText\n  }) {\n    return !!(contentsObj?.str || richText?.str);\n  }\n  get _isEditable() {\n    return this.data.isEditable;\n  }\n  get hasPopupData() {\n    return AnnotationElement._hasPopupData(this.data) || this.enableComment && !!this.commentText;\n  }\n  get commentData() {\n    const {\n      data\n    } = this;\n    const editor = this.annotationStorage?.getEditor(data.id);\n    if (editor) {\n      return editor.getData();\n    }\n    return data;\n  }\n  get hasCommentButton() {\n    return this.enableComment && this.hasPopupElement;\n  }\n  get commentButtonPosition() {\n    const editor = this.annotationStorage?.getEditor(this.data.id);\n    if (editor) {\n      return editor.commentButtonPositionInPage;\n    }\n    const {\n      quadPoints,\n      inkLists,\n      rect\n    } = this.data;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    if (quadPoints?.length >= 8) {\n      for (let i = 0; i < quadPoints.length; i += 8) {\n        if (quadPoints[i + 1] > maxY) {\n          maxY = quadPoints[i + 1];\n          maxX = quadPoints[i + 2];\n        } else if (quadPoints[i + 1] === maxY) {\n          maxX = Math.max(maxX, quadPoints[i + 2]);\n        }\n      }\n      return [maxX, maxY];\n    }\n    if (inkLists?.length >= 1) {\n      for (const inkList of inkLists) {\n        for (let i = 0, ii = inkList.length; i < ii; i += 2) {\n          if (inkList[i + 1] > maxY) {\n            maxY = inkList[i + 1];\n            maxX = inkList[i];\n          } else if (inkList[i + 1] === maxY) {\n            maxX = Math.max(maxX, inkList[i]);\n          }\n        }\n      }\n      if (maxX !== Infinity) {\n        return [maxX, maxY];\n      }\n    }\n    if (rect) {\n      return [rect[2], rect[3]];\n    }\n    return null;\n  }\n  _normalizePoint(point) {\n    const {\n      page: {\n        view\n      },\n      viewport: {\n        rawDims: {\n          pageWidth,\n          pageHeight,\n          pageX,\n          pageY\n        }\n      }\n    } = this.parent;\n    point[1] = view[3] - point[1] + view[1];\n    point[0] = 100 * (point[0] - pageX) / pageWidth;\n    point[1] = 100 * (point[1] - pageY) / pageHeight;\n    return point;\n  }\n  get commentText() {\n    const {\n      data\n    } = this;\n    return this.annotationStorage.getRawValue(`${AnnotationEditorPrefix}${data.id}`)?.popup?.contents || data.contentsObj?.str || \"\";\n  }\n  set commentText(text) {\n    const {\n      data\n    } = this;\n    const popup = {\n      deleted: !text,\n      contents: text || \"\"\n    };\n    if (!this.annotationStorage.updateEditor(data.id, {\n      popup\n    })) {\n      this.annotationStorage.setValue(`${AnnotationEditorPrefix}${data.id}`, {\n        id: data.id,\n        annotationType: data.annotationType,\n        pageIndex: this.parent.page._pageIndex,\n        popup,\n        popupRef: data.popupRef,\n        modificationDate: new Date()\n      });\n    }\n    if (!text) {\n      this.removePopup();\n    }\n  }\n  removePopup() {\n    (this.#popupElement?.popup || this.popup)?.remove();\n    this.#popupElement = this.popup = null;\n  }\n  updateEdited(params) {\n    if (!this.container) {\n      return;\n    }\n    if (params.rect) {\n      this.#updates ||= {\n        rect: this.data.rect.slice(0)\n      };\n    }\n    const {\n      rect,\n      popup: newPopup\n    } = params;\n    if (rect) {\n      this.#setRectEdited(rect);\n    }\n    let popup = this.#popupElement?.popup || this.popup;\n    if (!popup && newPopup?.text) {\n      this._createPopup(newPopup);\n      popup = this.#popupElement.popup;\n    }\n    if (!popup) {\n      return;\n    }\n    popup.updateEdited(params);\n    if (newPopup?.deleted) {\n      popup.remove();\n      this.#popupElement = null;\n      this.popup = null;\n    }\n  }\n  resetEdited() {\n    if (!this.#updates) {\n      return;\n    }\n    this.#setRectEdited(this.#updates.rect);\n    this.#popupElement?.popup.resetEdited();\n    this.#updates = null;\n  }\n  #setRectEdited(rect) {\n    const {\n      container: {\n        style\n      },\n      data: {\n        rect: currentRect,\n        rotation\n      },\n      parent: {\n        viewport: {\n          rawDims: {\n            pageWidth,\n            pageHeight,\n            pageX,\n            pageY\n          }\n        }\n      }\n    } = this;\n    currentRect?.splice(0, 4, ...rect);\n    style.left = `${100 * (rect[0] - pageX) / pageWidth}%`;\n    style.top = `${100 * (pageHeight - rect[3] + pageY) / pageHeight}%`;\n    if (rotation === 0) {\n      style.width = `${100 * (rect[2] - rect[0]) / pageWidth}%`;\n      style.height = `${100 * (rect[3] - rect[1]) / pageHeight}%`;\n    } else {\n      this.setRotation(rotation);\n    }\n  }\n  _createContainer(ignoreBorder) {\n    const {\n      data,\n      parent: {\n        page,\n        viewport\n      }\n    } = this;\n    const container = document.createElement(\"section\");\n    container.setAttribute(\"data-annotation-id\", data.id);\n    if (!(this instanceof WidgetAnnotationElement) && !(this instanceof LinkAnnotationElement)) {\n      container.tabIndex = 0;\n    }\n    const {\n      style\n    } = container;\n    style.zIndex = this.parent.zIndex;\n    this.parent.zIndex += 2;\n    if (data.alternativeText) {\n      container.title = data.alternativeText;\n    }\n    if (data.noRotate) {\n      container.classList.add(\"norotate\");\n    }\n    if (!data.rect || this instanceof PopupAnnotationElement) {\n      const {\n        rotation\n      } = data;\n      if (!data.hasOwnCanvas && rotation !== 0) {\n        this.setRotation(rotation, container);\n      }\n      return container;\n    }\n    const {\n      width,\n      height\n    } = this;\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      style.borderWidth = `${data.borderStyle.width}px`;\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `calc(${horizontalRadius}px * var(--total-scale-factor)) / calc(${verticalRadius}px * var(--total-scale-factor))`;\n        style.borderRadius = radius;\n      } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n        const radius = `calc(${width}px * var(--total-scale-factor)) / calc(${height}px * var(--total-scale-factor))`;\n        style.borderRadius = radius;\n      }\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          style.borderStyle = \"solid\";\n          break;\n        case AnnotationBorderStyleType.DASHED:\n          style.borderStyle = \"dashed\";\n          break;\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n        case AnnotationBorderStyleType.UNDERLINE:\n          style.borderBottomStyle = \"solid\";\n          break;\n        default:\n          break;\n      }\n      const borderColor = data.borderColor || null;\n      if (borderColor) {\n        this.#hasBorder = true;\n        style.borderColor = Util.makeHexColor(borderColor[0] | 0, borderColor[1] | 0, borderColor[2] | 0);\n      } else {\n        style.borderWidth = 0;\n      }\n    }\n    const rect = Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n    const {\n      pageWidth,\n      pageHeight,\n      pageX,\n      pageY\n    } = viewport.rawDims;\n    style.left = `${100 * (rect[0] - pageX) / pageWidth}%`;\n    style.top = `${100 * (rect[1] - pageY) / pageHeight}%`;\n    const {\n      rotation\n    } = data;\n    if (data.hasOwnCanvas || rotation === 0) {\n      style.width = `${100 * width / pageWidth}%`;\n      style.height = `${100 * height / pageHeight}%`;\n    } else {\n      this.setRotation(rotation, container);\n    }\n    return container;\n  }\n  setRotation(angle, container = this.container) {\n    if (!this.data.rect) {\n      return;\n    }\n    const {\n      pageWidth,\n      pageHeight\n    } = this.parent.viewport.rawDims;\n    let {\n      width,\n      height\n    } = this;\n    if (angle % 180 !== 0) {\n      [width, height] = [height, width];\n    }\n    container.style.width = `${100 * width / pageWidth}%`;\n    container.style.height = `${100 * height / pageHeight}%`;\n    container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n  }\n  get _commonActions() {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      const colorType = color[0];\n      const colorArray = color.slice(1);\n      event.target.style[styleName] = ColorConverters[`${colorType}_HTML`](colorArray);\n      this.annotationStorage.setValue(this.data.id, {\n        [styleName]: ColorConverters[`${colorType}_rgb`](colorArray)\n      });\n    };\n    return shadow(this, \"_commonActions\", {\n      display: event => {\n        const {\n          display\n        } = event.detail;\n        const hidden = display % 2 === 1;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noView: hidden,\n          noPrint: display === 1 || display === 2\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: !event.detail.print\n        });\n      },\n      hidden: event => {\n        const {\n          hidden\n        } = event.detail;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: hidden,\n          noView: hidden\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({\n          preventScroll: false\n        }), 0);\n      },\n      userName: event => {\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        event.target.disabled = event.detail.readonly;\n      },\n      required: event => {\n        this._setRequired(event.target, event.detail.required);\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n      rotation: event => {\n        const angle = event.detail.rotation;\n        this.setRotation(angle);\n        this.annotationStorage.setValue(this.data.id, {\n          rotation: angle\n        });\n      }\n    });\n  }\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const commonActions = this._commonActions;\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      action?.(jsEvent);\n    }\n  }\n  _setDefaultPropertiesFromJS(element) {\n    if (!this.enableScripting) {\n      return;\n    }\n    const storedData = this.annotationStorage.getRawValue(this.data.id);\n    if (!storedData) {\n      return;\n    }\n    const commonActions = this._commonActions;\n    for (const [actionName, detail] of Object.entries(storedData)) {\n      const action = commonActions[actionName];\n      if (action) {\n        const eventProxy = {\n          detail: {\n            [actionName]: detail\n          },\n          target: element\n        };\n        action(eventProxy);\n        delete storedData[actionName];\n      }\n    }\n  }\n  _createQuadrilaterals() {\n    if (!this.container) {\n      return;\n    }\n    const {\n      quadPoints\n    } = this.data;\n    if (!quadPoints) {\n      return;\n    }\n    const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect.map(x => Math.fround(x));\n    if (quadPoints.length === 8) {\n      const [trX, trY, blX, blY] = quadPoints.subarray(2, 6);\n      if (rectTrX === trX && rectTrY === trY && rectBlX === blX && rectBlY === blY) {\n        return;\n      }\n    }\n    const {\n      style\n    } = this.container;\n    let svgBuffer;\n    if (this.#hasBorder) {\n      const {\n        borderColor,\n        borderWidth\n      } = style;\n      style.borderWidth = 0;\n      svgBuffer = [\"url('data:image/svg+xml;utf8,\", `<svg xmlns=\"http://www.w3.org/2000/svg\"`, ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`, `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`];\n      this.container.classList.add(\"hasBorder\");\n    }\n    const width = rectTrX - rectBlX;\n    const height = rectTrY - rectBlY;\n    const {\n      svgFactory\n    } = this;\n    const svg = svgFactory.createElement(\"svg\");\n    svg.classList.add(\"quadrilateralsContainer\");\n    svg.setAttribute(\"width\", 0);\n    svg.setAttribute(\"height\", 0);\n    svg.role = \"none\";\n    const defs = svgFactory.createElement(\"defs\");\n    svg.append(defs);\n    const clipPath = svgFactory.createElement(\"clipPath\");\n    const id = `clippath_${this.data.id}`;\n    clipPath.setAttribute(\"id\", id);\n    clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n    defs.append(clipPath);\n    for (let i = 2, ii = quadPoints.length; i < ii; i += 8) {\n      const trX = quadPoints[i];\n      const trY = quadPoints[i + 1];\n      const blX = quadPoints[i + 2];\n      const blY = quadPoints[i + 3];\n      const rect = svgFactory.createElement(\"rect\");\n      const x = (blX - rectBlX) / width;\n      const y = (rectTrY - trY) / height;\n      const rectWidth = (trX - blX) / width;\n      const rectHeight = (trY - blY) / height;\n      rect.setAttribute(\"x\", x);\n      rect.setAttribute(\"y\", y);\n      rect.setAttribute(\"width\", rectWidth);\n      rect.setAttribute(\"height\", rectHeight);\n      clipPath.append(rect);\n      svgBuffer?.push(`<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`);\n    }\n    if (this.#hasBorder) {\n      svgBuffer.push(`</g></svg>')`);\n      style.backgroundImage = svgBuffer.join(\"\");\n    }\n    this.container.append(svg);\n    this.container.style.clipPath = `url(#${id})`;\n  }\n  _createPopup(popupData = null) {\n    const {\n      data\n    } = this;\n    let contentsObj, modificationDate;\n    if (popupData) {\n      contentsObj = {\n        str: popupData.text\n      };\n      modificationDate = popupData.date;\n    } else {\n      contentsObj = data.contentsObj;\n      modificationDate = data.modificationDate;\n    }\n    const popup = this.#popupElement = new PopupAnnotationElement({\n      data: {\n        color: data.color,\n        titleObj: data.titleObj,\n        modificationDate,\n        contentsObj,\n        richText: data.richText,\n        parentRect: data.rect,\n        borderStyle: 0,\n        id: `popup_${data.id}`,\n        rotation: data.rotation,\n        noRotate: true\n      },\n      linkService: this.linkService,\n      parent: this.parent,\n      elements: [this]\n    });\n    if (!this.parent._commentManager) {\n      this.parent.div.append(popup.render());\n    }\n  }\n  get hasPopupElement() {\n    return !!(this.#popupElement || this.popup || this.data.popupRef);\n  }\n  get extraPopupElement() {\n    return this.#popupElement;\n  }\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const {\n          page,\n          id,\n          exportValues\n        } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n          const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({\n            id,\n            exportValue,\n            domElement\n          });\n        }\n      }\n      return fields;\n    }\n    for (const domElement of document.getElementsByName(name)) {\n      const {\n        exportValue\n      } = domElement;\n      const id = domElement.getAttribute(\"data-element-id\");\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({\n        id,\n        exportValue,\n        domElement\n      });\n    }\n    return fields;\n  }\n  show() {\n    if (this.container) {\n      this.container.hidden = false;\n    }\n    this.popup?.maybeShow();\n  }\n  hide() {\n    if (this.container) {\n      this.container.hidden = true;\n    }\n    this.popup?.forceHide();\n  }\n  getElementsToTriggerPopup() {\n    return this.container;\n  }\n  addHighlightArea() {\n    const triggers = this.getElementsToTriggerPopup();\n    if (Array.isArray(triggers)) {\n      for (const element of triggers) {\n        element.classList.add(\"highlightArea\");\n      }\n    } else {\n      triggers.classList.add(\"highlightArea\");\n    }\n  }\n  _editOnDoubleClick() {\n    if (!this._isEditable) {\n      return;\n    }\n    const {\n      annotationEditorType: mode,\n      data: {\n        id: editId\n      }\n    } = this;\n    this.container.addEventListener(\"dblclick\", () => {\n      this.linkService.eventBus?.dispatch(\"switchannotationeditormode\", {\n        source: this,\n        mode,\n        editId,\n        mustEnterInEditMode: true\n      });\n    });\n  }\n  get width() {\n    return this.data.rect[2] - this.data.rect[0];\n  }\n  get height() {\n    return this.data.rect[3] - this.data.rect[1];\n  }\n}\nclass EditorAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n    this.editor = parameters.editor;\n  }\n  render() {\n    this.container.className = \"editorAnnotation\";\n    return this.container;\n  }\n  createOrUpdatePopup() {\n    const {\n      editor\n    } = this;\n    if (!editor.hasComment) {\n      return;\n    }\n    this._createPopup(editor.comment);\n    this.extraPopupElement.popup.renderCommentButton();\n  }\n  get hasCommentButton() {\n    return this.enableComment && this.editor.hasComment;\n  }\n  get commentButtonPosition() {\n    return this.editor.commentButtonPositionInPage;\n  }\n  get commentText() {\n    return this.editor.comment.text;\n  }\n  set commentText(text) {\n    this.editor.comment = text;\n    if (!text) {\n      this.removePopup();\n    }\n  }\n  get commentData() {\n    return this.editor.getData();\n  }\n  remove() {\n    this.container.remove();\n    this.container = null;\n    this.removePopup();\n  }\n}\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true\n    });\n    this.isTooltipOnly = parameters.data.isTooltipOnly;\n  }\n  render() {\n    const {\n      data,\n      linkService\n    } = this;\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"data-element-id\", data.id);\n    let isBound = false;\n    if (data.url) {\n      linkService.addLinkAttributes(link, data.url, data.newWindow);\n      isBound = true;\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action, data.overlaidText);\n      isBound = true;\n    } else if (data.attachment) {\n      this.#bindAttachment(link, data.attachment, data.overlaidText, data.attachmentDest);\n      isBound = true;\n    } else if (data.setOCGState) {\n      this.#bindSetOCGState(link, data.setOCGState, data.overlaidText);\n      isBound = true;\n    } else if (data.dest) {\n      this._bindLink(link, data.dest, data.overlaidText);\n      isBound = true;\n    } else {\n      if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n        this._bindJSAction(link, data);\n        isBound = true;\n      }\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n        isBound = true;\n      } else if (this.isTooltipOnly && !isBound) {\n        this._bindLink(link, \"\");\n        isBound = true;\n      }\n    }\n    this.container.classList.add(\"linkAnnotation\");\n    if (isBound) {\n      this.container.append(link);\n    }\n    return this.container;\n  }\n  #setInternalLink() {\n    this.container.setAttribute(\"data-internal-link\", \"\");\n  }\n  _bindLink(link, destination, overlaidText = \"\") {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === \"\") {\n      this.#setInternalLink();\n    }\n    if (overlaidText) {\n      link.title = overlaidText;\n    }\n  }\n  _bindNamedAction(link, action, overlaidText = \"\") {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    if (overlaidText) {\n      link.title = overlaidText;\n    }\n    this.#setInternalLink();\n  }\n  #bindAttachment(link, attachment, overlaidText = \"\", dest = null) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    if (attachment.description) {\n      link.title = attachment.description;\n    } else if (overlaidText) {\n      link.title = overlaidText;\n    }\n    link.onclick = () => {\n      this.downloadManager?.openOrDownloadData(attachment.content, attachment.filename, dest);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n  #bindSetOCGState(link, action, overlaidText = \"\") {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeSetOCGState(action);\n      return false;\n    };\n    if (overlaidText) {\n      link.title = overlaidText;\n    }\n    this.#setInternalLink();\n  }\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name\n          }\n        });\n        return false;\n      };\n    }\n    if (data.overlaidText) {\n      link.title = data.overlaidText;\n    }\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    this.#setInternalLink();\n  }\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    this.#setInternalLink();\n    if (!this._fieldObjects) {\n      warn(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\");\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n    link.onclick = () => {\n      otherClickAction?.();\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include\n      } = resetForm;\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const {\n            id\n          } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const {\n          id\n        } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\":\n            {\n              const value = field.defaultValue || \"\";\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n          case \"checkbox\":\n          case \"radiobutton\":\n            {\n              const value = field.defaultValue === field.exportValues;\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n          case \"combobox\":\n          case \"listbox\":\n            {\n              const value = field.defaultValue || \"\";\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n          default:\n            continue;\n        }\n        const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n        if (!domElement) {\n          continue;\n        } else if (!GetElementsByNameSet.has(domElement)) {\n          warn(`_bindResetFormAction - element not allowed: ${id}`);\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n      if (this.enableScripting) {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\"\n          }\n        });\n      }\n      return false;\n    };\n  }\n}\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"textAnnotation\");\n    const image = document.createElement(\"img\");\n    image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n    image.setAttribute(\"data-l10n-id\", \"pdfjs-text-annotation-type\");\n    image.setAttribute(\"data-l10n-args\", JSON.stringify({\n      type: this.data.name\n    }));\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.append(image);\n    return this.container;\n  }\n}\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    return this.container;\n  }\n  showElementAndHideCanvas(element) {\n    if (this.data.hasOwnCanvas) {\n      if (element.previousSibling?.nodeName === \"CANVAS\") {\n        element.previousSibling.hidden = true;\n      }\n      element.hidden = false;\n    }\n  }\n  _getKeyModifier(event) {\n    return util_FeatureTest.platform.isMac ? event.metaKey : event.ctrlKey;\n  }\n  _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event)\n          }\n        });\n      });\n    } else {\n      element.addEventListener(baseName, event => {\n        if (baseName === \"blur\") {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n        } else if (baseName === \"focus\") {\n          if (elementData.focused) {\n            return;\n          }\n          elementData.focused = true;\n        }\n        if (!valueGetter) {\n          return;\n        }\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event)\n          }\n        });\n      });\n    }\n  }\n  _setEventListeners(element, elementData, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        if (eventName === \"Focus\" || eventName === \"Blur\") {\n          elementData ||= {\n            focused: false\n          };\n        }\n        this._setEventListener(element, elementData, baseName, eventName, getter);\n        if (eventName === \"Focus\" && !this.data.actions?.Blur) {\n          this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n        } else if (eventName === \"Blur\" && !this.data.actions?.Focus) {\n          this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n        }\n      }\n    }\n  }\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor = color === null ? \"transparent\" : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const {\n      fontColor\n    } = this.data.defaultAppearanceData;\n    const fontSize = this.data.defaultAppearanceData.fontSize || annotation_layer_DEFAULT_FONT_SIZE;\n    const style = element.style;\n    let computedFontSize;\n    const BORDER_SIZE = 2;\n    const roundToOneDecimal = x => Math.round(10 * x) / 10;\n    if (this.data.multiLine) {\n      const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n      const numberOfLines = Math.round(height / (LINE_FACTOR * fontSize)) || 1;\n      const lineHeight = height / numberOfLines;\n      computedFontSize = Math.min(fontSize, roundToOneDecimal(lineHeight / LINE_FACTOR));\n    } else {\n      const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n      computedFontSize = Math.min(fontSize, roundToOneDecimal(height / LINE_FACTOR));\n    }\n    style.fontSize = `calc(${computedFontSize}px * var(--total-scale-factor))`;\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n  _setRequired(element, isRequired) {\n    if (isRequired) {\n      element.setAttribute(\"required\", true);\n    } else {\n      element.removeAttribute(\"required\");\n    }\n    element.setAttribute(\"aria-required\", isRequired);\n  }\n}\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable = parameters.renderForms || parameters.data.hasOwnCanvas || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n    super(parameters, {\n      isRenderable\n    });\n  }\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(base.name, base.id)) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id, {\n        [keyInStorage]: value\n      });\n    }\n  }\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n    this.container.classList.add(\"textWidgetAnnotation\");\n    let element = null;\n    if (this.renderForms) {\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue\n      });\n      let textContent = storedData.value || \"\";\n      const maxLen = storage.getValue(id, {\n        charLimit: this.data.maxLen\n      }).charLimit;\n      if (maxLen && textContent.length > maxLen) {\n        textContent = textContent.slice(0, maxLen);\n      }\n      let fieldFormattedValues = storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n      if (fieldFormattedValues && this.data.comb) {\n        fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n      }\n      const elementData = {\n        userValue: textContent,\n        formattedValue: fieldFormattedValues,\n        lastCommittedValue: null,\n        commitKey: 1,\n        focused: false\n      };\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = fieldFormattedValues ?? textContent;\n        if (this.data.doNotScroll) {\n          element.style.overflowY = \"hidden\";\n        }\n      } else {\n        element = document.createElement(\"input\");\n        element.type = this.data.password ? \"password\" : \"text\";\n        element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n        if (this.data.doNotScroll) {\n          element.style.overflowX = \"hidden\";\n        }\n      }\n      if (this.data.hasOwnCanvas) {\n        element.hidden = true;\n      }\n      GetElementsByNameSet.add(element);\n      element.setAttribute(\"data-element-id\", id);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = 0;\n      const {\n        datetimeFormat,\n        datetimeType,\n        timeStep\n      } = this.data;\n      const hasDateOrTime = !!datetimeType && this.enableScripting;\n      if (datetimeFormat) {\n        element.title = datetimeFormat;\n      }\n      this._setRequired(element, this.data.required);\n      if (maxLen) {\n        element.maxLength = maxLen;\n      }\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, {\n          value: event.target.value\n        });\n        this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n        elementData.formattedValue = null;\n      });\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue ?? \"\";\n        element.value = elementData.userValue = defaultValue;\n        elementData.formattedValue = null;\n      });\n      let blurListener = event => {\n        const {\n          formattedValue\n        } = elementData;\n        if (formattedValue !== null && formattedValue !== undefined) {\n          event.target.value = formattedValue;\n        }\n        event.target.scrollLeft = 0;\n      };\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.focused) {\n            return;\n          }\n          const {\n            target\n          } = event;\n          if (hasDateOrTime) {\n            target.type = datetimeType;\n            if (timeStep) {\n              target.step = timeStep;\n            }\n          }\n          if (elementData.userValue) {\n            const value = elementData.userValue;\n            if (hasDateOrTime) {\n              if (datetimeType === \"time\") {\n                const date = new Date(value);\n                const parts = [date.getHours(), date.getMinutes(), date.getSeconds()];\n                target.value = parts.map(v => v.toString().padStart(2, \"0\")).join(\":\");\n              } else {\n                target.value = new Date(value - TIMEZONE_OFFSET).toISOString().split(datetimeType === \"date\" ? \"T\" : \".\", 1)[0];\n              }\n            } else {\n              target.value = value;\n            }\n          }\n          elementData.lastCommittedValue = target.value;\n          elementData.commitKey = 1;\n          if (!this.data.actions?.Focus) {\n            elementData.focused = true;\n          }\n        });\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          this.showElementAndHideCanvas(jsEvent.target);\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value ?? \"\";\n              if (!hasDateOrTime) {\n                storage.setValue(id, {\n                  value: elementData.userValue.toString()\n                });\n              }\n              event.target.value = elementData.userValue;\n            },\n            formattedValue(event) {\n              const {\n                formattedValue\n              } = event.detail;\n              elementData.formattedValue = formattedValue;\n              if (formattedValue !== null && formattedValue !== undefined && event.target !== document.activeElement) {\n                event.target.value = formattedValue;\n              }\n              const data = {\n                formattedValue\n              };\n              if (hasDateOrTime) {\n                data.value = formattedValue;\n              }\n              storage.setValue(id, data);\n            },\n            selRange(event) {\n              event.target.setSelectionRange(...event.detail.selRange);\n            },\n            charLimit: event => {\n              const {\n                charLimit\n              } = event.detail;\n              const {\n                target\n              } = event;\n              if (charLimit === 0) {\n                target.removeAttribute(\"maxLength\");\n                return;\n              }\n              target.setAttribute(\"maxLength\", charLimit);\n              let value = elementData.userValue;\n              if (!value || value.length <= charLimit) {\n                return;\n              }\n              value = value.slice(0, charLimit);\n              target.value = elementData.userValue = value;\n              storage.setValue(id, {\n                value\n              });\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value,\n                  willCommit: true,\n                  commitKey: 1,\n                  selStart: target.selectionStart,\n                  selEnd: target.selectionEnd\n                }\n              });\n            }\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n        element.addEventListener(\"keydown\", event => {\n          elementData.commitKey = 1;\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\" && !this.data.multiLine) {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            elementData.commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          const {\n            value\n          } = event.target;\n          if (elementData.lastCommittedValue === value) {\n            return;\n          }\n          elementData.lastCommittedValue = value;\n          elementData.userValue = value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd\n            }\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          if (!this.data.actions?.Blur) {\n            elementData.focused = false;\n          }\n          const {\n            target\n          } = event;\n          let {\n            value\n          } = target;\n          if (hasDateOrTime) {\n            if (value && datetimeType === \"time\") {\n              const parts = value.split(\":\").map(v => parseInt(v, 10));\n              value = new Date(2000, 0, 1, parts[0], parts[1], parts[2] || 0).valueOf();\n              target.step = \"\";\n            } else {\n              if (!value.includes(\"T\")) {\n                value = `${value}T00:00`;\n              }\n              value = new Date(value).valueOf();\n            }\n            target.type = \"text\";\n          }\n          elementData.userValue = value;\n          if (elementData.lastCommittedValue !== value) {\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                willCommit: true,\n                commitKey: elementData.commitKey,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd\n              }\n            });\n          }\n          _blurListener(event);\n        });\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            elementData.lastCommittedValue = null;\n            const {\n              data,\n              target\n            } = event;\n            const {\n              value,\n              selectionStart,\n              selectionEnd\n            } = target;\n            let selStart = selectionStart,\n              selEnd = selectionEnd;\n            switch (event.inputType) {\n              case \"deleteWordBackward\":\n                {\n                  const match = value.substring(0, selectionStart).match(/\\w*[^\\w]*$/);\n                  if (match) {\n                    selStart -= match[0].length;\n                  }\n                  break;\n                }\n              case \"deleteWordForward\":\n                {\n                  const match = value.substring(selectionStart).match(/^[^\\w]*\\w*/);\n                  if (match) {\n                    selEnd += match[0].length;\n                  }\n                  break;\n                }\n              case \"deleteContentBackward\":\n                if (selectionStart === selectionEnd) {\n                  selStart -= 1;\n                }\n                break;\n              case \"deleteContentForward\":\n                if (selectionStart === selectionEnd) {\n                  selEnd += 1;\n                }\n                break;\n            }\n            event.preventDefault();\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data || \"\",\n                willCommit: false,\n                selStart,\n                selEnd\n              }\n            });\n          });\n        }\n        this._setEventListeners(element, elementData, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n      }\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / maxLen;\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px * var(--total-scale-factor) - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n      if (this.data.hasOwnCanvas) {\n        element.hidden = true;\n      }\n    }\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n    this.container.append(element);\n    return this.container;\n  }\n}\nclass SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: !!parameters.data.hasOwnCanvas\n    });\n  }\n}\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue\n    }).value;\n    if (typeof value === \"string\") {\n      value = value !== \"Off\";\n      storage.setValue(id, {\n        value\n      });\n    }\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = 0;\n    element.addEventListener(\"change\", event => {\n      const {\n        name,\n        checked\n      } = event.target;\n      for (const checkbox of this._getElementsByName(name, id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id, {\n          value: curChecked\n        });\n      }\n      storage.setValue(id, {\n        value: checked\n      });\n    });\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, {\n              value: event.target.checked\n            });\n          }\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n      this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n    }\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n    this.container.append(element);\n    return this.container;\n  }\n}\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n  render() {\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue\n    }).value;\n    if (typeof value === \"string\") {\n      value = value !== data.buttonValue;\n      storage.setValue(id, {\n        value\n      });\n    }\n    if (value) {\n      for (const radio of this._getElementsByName(data.fieldName, id)) {\n        storage.setValue(radio.id, {\n          value: false\n        });\n      }\n    }\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.tabIndex = 0;\n    element.addEventListener(\"change\", event => {\n      const {\n        name,\n        checked\n      } = event.target;\n      for (const radio of this._getElementsByName(name, id)) {\n        storage.setValue(radio.id, {\n          value: false\n        });\n      }\n      storage.setValue(id, {\n        value: checked\n      });\n    });\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n    });\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(radio.id, {\n                value: curChecked\n              });\n            }\n          }\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n      this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n    }\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n    this.container.append(element);\n    return this.container;\n  }\n}\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      ignoreBorder: parameters.data.hasAppearance\n    });\n  }\n  render() {\n    const container = super.render();\n    container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n    const linkElement = container.lastChild;\n    if (this.enableScripting && this.hasJSActions && linkElement) {\n      this._setDefaultPropertiesFromJS(linkElement);\n      linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        this._dispatchEventFromSandbox({}, jsEvent);\n      });\n    }\n    return container;\n  }\n}\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n  render() {\n    this.container.classList.add(\"choiceWidgetAnnotation\");\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n    const storedData = storage.getValue(id, {\n      value: this.data.fieldValue\n    });\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.setAttribute(\"data-element-id\", id);\n    selectElement.disabled = this.data.readOnly;\n    this._setRequired(selectElement, this.data.required);\n    selectElement.name = this.data.fieldName;\n    selectElement.tabIndex = 0;\n    let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n    if (!this.data.combo) {\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (storedData.value.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n        addAnEmptyEntry = false;\n      }\n      selectElement.append(optionElement);\n    }\n    let removeEmptyEntry = null;\n    if (addAnEmptyEntry) {\n      const noneOptionElement = document.createElement(\"option\");\n      noneOptionElement.value = \" \";\n      noneOptionElement.setAttribute(\"hidden\", true);\n      noneOptionElement.setAttribute(\"selected\", true);\n      selectElement.prepend(noneOptionElement);\n      removeEmptyEntry = () => {\n        noneOptionElement.remove();\n        selectElement.removeEventListener(\"input\", removeEmptyEntry);\n        removeEmptyEntry = null;\n      };\n      selectElement.addEventListener(\"input\", removeEmptyEntry);\n    }\n    const getValue = isExport => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const {\n        options,\n        multiple\n      } = selectElement;\n      if (!multiple) {\n        return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]);\n    };\n    let selectedValues = getValue(false);\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => ({\n        displayValue: option.textContent,\n        exportValue: option.value\n      }));\n    };\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            removeEmptyEntry?.();\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, {\n              value: getValue(true)\n            });\n            selectedValues = getValue(false);\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(options, option => option.selected);\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(true),\n              items: getItems(event)\n            });\n            selectedValues = getValue(false);\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, {\n              value: null,\n              items: []\n            });\n            selectedValues = getValue(false);\n          },\n          insert(event) {\n            const {\n              index,\n              displayValue,\n              exportValue\n            } = event.detail.insert;\n            const selectChild = selectElement.children[index];\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            if (selectChild) {\n              selectChild.before(optionElement);\n            } else {\n              selectElement.append(optionElement);\n            }\n            storage.setValue(id, {\n              value: getValue(true),\n              items: getItems(event)\n            });\n            selectedValues = getValue(false);\n          },\n          items(event) {\n            const {\n              items\n            } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const {\n                displayValue,\n                exportValue\n              } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.append(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(true),\n              items: getItems(event)\n            });\n            selectedValues = getValue(false);\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, {\n              value: getValue(true)\n            });\n            selectedValues = getValue(false);\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          }\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(true);\n        const change = getValue(false);\n        storage.setValue(id, {\n          value: exportValue\n        });\n        event.preventDefault();\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value: selectedValues,\n            change,\n            changeEx: exportValue,\n            willCommit: false,\n            commitKey: 1,\n            keyDown: false\n          }\n        });\n      });\n      this._setEventListeners(selectElement, null, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"], [\"input\", \"Validate\"]], event => event.target.value);\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, {\n          value: getValue(true)\n        });\n      });\n    }\n    if (this.data.combo) {\n      this._setTextStyle(selectElement);\n    } else {}\n    this._setBackgroundColor(selectElement);\n    this._setDefaultPropertiesFromJS(selectElement);\n    this.container.append(selectElement);\n    return this.container;\n  }\n}\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const {\n      data,\n      elements,\n      parent\n    } = parameters;\n    const hasCommentManager = !!parent._commentManager;\n    super(parameters, {\n      isRenderable: !hasCommentManager && AnnotationElement._hasPopupData(data)\n    });\n    this.elements = elements;\n    if (hasCommentManager && AnnotationElement._hasPopupData(data)) {\n      const popup = this.popup = this.#createPopup();\n      for (const element of elements) {\n        element.popup = popup;\n      }\n    } else {\n      this.popup = null;\n    }\n  }\n  #createPopup() {\n    return new PopupElement({\n      container: this.container,\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate || this.data.creationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n      rect: this.data.rect,\n      parentRect: this.data.parentRect || null,\n      parent: this.parent,\n      elements: this.elements,\n      open: this.data.open,\n      commentManager: this.parent._commentManager\n    });\n  }\n  render() {\n    const {\n      container\n    } = this;\n    container.classList.add(\"popupAnnotation\");\n    container.role = \"comment\";\n    const popup = this.popup = this.#createPopup();\n    const elementIds = [];\n    for (const element of this.elements) {\n      element.popup = popup;\n      element.container.ariaHasPopup = \"dialog\";\n      elementIds.push(element.data.id);\n      element.addHighlightArea();\n    }\n    this.container.setAttribute(\"aria-controls\", elementIds.map(id => `${AnnotationPrefix}${id}`).join(\",\"));\n    return this.container;\n  }\n}\nclass PopupElement {\n  #commentManager = null;\n  #boundKeyDown = this.#keyDown.bind(this);\n  #boundHide = this.#hide.bind(this);\n  #boundShow = this.#show.bind(this);\n  #boundToggle = this.#toggle.bind(this);\n  #color = null;\n  #container = null;\n  #contentsObj = null;\n  #dateObj = null;\n  #elements = null;\n  #parent = null;\n  #parentRect = null;\n  #pinned = false;\n  #popup = null;\n  #popupAbortController = null;\n  #position = null;\n  #commentButton = null;\n  #commentButtonPosition = null;\n  #popupPosition = null;\n  #rect = null;\n  #richText = null;\n  #titleObj = null;\n  #updates = null;\n  #wasVisible = false;\n  #firstElement = null;\n  #commentText = null;\n  constructor({\n    container,\n    color,\n    elements,\n    titleObj,\n    modificationDate,\n    contentsObj,\n    richText,\n    parent,\n    rect,\n    parentRect,\n    open,\n    commentManager = null\n  }) {\n    this.#container = container;\n    this.#titleObj = titleObj;\n    this.#contentsObj = contentsObj;\n    this.#richText = richText;\n    this.#parent = parent;\n    this.#color = color;\n    this.#rect = rect;\n    this.#parentRect = parentRect;\n    this.#elements = elements;\n    this.#commentManager = commentManager;\n    this.#firstElement = elements[0];\n    this.#dateObj = PDFDateString.toDateObject(modificationDate);\n    this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n    if (commentManager) {\n      this.renderCommentButton();\n    } else {\n      this.#addEventListeners();\n      this.#container.hidden = true;\n      if (open) {\n        this.#toggle();\n      }\n    }\n  }\n  #addEventListeners() {\n    if (this.#popupAbortController) {\n      return;\n    }\n    this.#popupAbortController = new AbortController();\n    const {\n      signal\n    } = this.#popupAbortController;\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this.#boundToggle, {\n        signal\n      });\n      element.addEventListener(\"pointerenter\", this.#boundShow, {\n        signal\n      });\n      element.addEventListener(\"pointerleave\", this.#boundHide, {\n        signal\n      });\n      element.classList.add(\"popupTriggerArea\");\n    }\n    for (const element of this.#elements) {\n      element.container?.addEventListener(\"keydown\", this.#boundKeyDown, {\n        signal\n      });\n    }\n  }\n  #setCommentButtonPosition() {\n    const element = this.#elements.find(e => e.hasCommentButton);\n    if (!element) {\n      return;\n    }\n    this.#commentButtonPosition = element._normalizePoint(element.commentButtonPosition);\n  }\n  renderCommentButton() {\n    if (this.#commentButton) {\n      return;\n    }\n    if (!this.#commentButtonPosition) {\n      this.#setCommentButtonPosition();\n    }\n    if (!this.#commentButtonPosition) {\n      return;\n    }\n    const {\n      signal\n    } = this.#popupAbortController = new AbortController();\n    const hasOwnButton = !!this.#firstElement.extraPopupElement;\n    const togglePopup = () => {\n      this.#commentManager.toggleCommentPopup(this, true, undefined, !hasOwnButton);\n    };\n    const showPopup = () => {\n      this.#commentManager.toggleCommentPopup(this, false, true, !hasOwnButton);\n    };\n    const hidePopup = () => {\n      this.#commentManager.toggleCommentPopup(this, false, false);\n    };\n    if (!hasOwnButton) {\n      const button = this.#commentButton = document.createElement(\"button\");\n      button.className = \"annotationCommentButton\";\n      const parentContainer = this.#firstElement.container;\n      button.style.zIndex = parentContainer.style.zIndex + 1;\n      button.tabIndex = 0;\n      button.ariaHasPopup = \"dialog\";\n      button.ariaControls = \"commentPopup\";\n      button.setAttribute(\"data-l10n-id\", \"pdfjs-show-comment-button\");\n      this.#updateColor();\n      this.#updateCommentButtonPosition();\n      button.addEventListener(\"keydown\", this.#boundKeyDown, {\n        signal\n      });\n      button.addEventListener(\"click\", togglePopup, {\n        signal\n      });\n      button.addEventListener(\"pointerenter\", showPopup, {\n        signal\n      });\n      button.addEventListener(\"pointerleave\", hidePopup, {\n        signal\n      });\n      parentContainer.after(button);\n    } else {\n      this.#commentButton = this.#firstElement.container;\n      for (const element of this.trigger) {\n        element.ariaHasPopup = \"dialog\";\n        element.ariaControls = \"commentPopup\";\n        element.addEventListener(\"keydown\", this.#boundKeyDown, {\n          signal\n        });\n        element.addEventListener(\"click\", togglePopup, {\n          signal\n        });\n        element.addEventListener(\"pointerenter\", showPopup, {\n          signal\n        });\n        element.addEventListener(\"pointerleave\", hidePopup, {\n          signal\n        });\n        element.classList.add(\"popupTriggerArea\");\n      }\n    }\n  }\n  #updateCommentButtonPosition() {\n    if (this.#firstElement.extraPopupElement && !this.#firstElement.editor) {\n      return;\n    }\n    this.renderCommentButton();\n    const [x, y] = this.#commentButtonPosition;\n    const {\n      style\n    } = this.#commentButton;\n    style.left = `calc(${x}%)`;\n    style.top = `calc(${y}% - var(--comment-button-dim))`;\n  }\n  #updateColor() {\n    if (this.#firstElement.extraPopupElement) {\n      return;\n    }\n    this.renderCommentButton();\n    this.#commentButton.style.backgroundColor = this.commentButtonColor || \"\";\n  }\n  get commentButtonColor() {\n    const {\n      color,\n      opacity\n    } = this.#firstElement.commentData;\n    if (!color) {\n      return null;\n    }\n    return this.#parent._commentManager.makeCommentColor(color, opacity);\n  }\n  focusCommentButton() {\n    setTimeout(() => {\n      this.#commentButton?.focus();\n    }, 0);\n  }\n  getData() {\n    const {\n      richText,\n      color,\n      opacity,\n      creationDate,\n      modificationDate\n    } = this.#firstElement.commentData;\n    return {\n      contentsObj: {\n        str: this.comment\n      },\n      richText,\n      color,\n      opacity,\n      creationDate,\n      modificationDate\n    };\n  }\n  get elementBeforePopup() {\n    return this.#commentButton;\n  }\n  get comment() {\n    this.#commentText ||= this.#firstElement.commentText;\n    return this.#commentText;\n  }\n  set comment(text) {\n    if (text === this.comment) {\n      return;\n    }\n    this.#firstElement.commentText = this.#commentText = text;\n  }\n  get parentBoundingClientRect() {\n    return this.#firstElement.layer.getBoundingClientRect();\n  }\n  setCommentButtonStates({\n    selected,\n    hasPopup\n  }) {\n    if (!this.#commentButton) {\n      return;\n    }\n    this.#commentButton.classList.toggle(\"selected\", selected);\n    this.#commentButton.ariaExpanded = hasPopup;\n  }\n  setSelectedCommentButton(selected) {\n    this.#commentButton.classList.toggle(\"selected\", selected);\n  }\n  get commentPopupPosition() {\n    if (this.#popupPosition) {\n      return this.#popupPosition;\n    }\n    const {\n      x,\n      y,\n      height\n    } = this.#commentButton.getBoundingClientRect();\n    const {\n      x: parentX,\n      y: parentY,\n      width: parentWidth,\n      height: parentHeight\n    } = this.#firstElement.layer.getBoundingClientRect();\n    return [(x - parentX) / parentWidth, (y + height - parentY) / parentHeight];\n  }\n  set commentPopupPosition(pos) {\n    this.#popupPosition = pos;\n  }\n  hasDefaultPopupPosition() {\n    return this.#popupPosition === null;\n  }\n  get commentButtonPosition() {\n    return this.#commentButtonPosition;\n  }\n  get commentButtonWidth() {\n    return this.#commentButton.getBoundingClientRect().width / this.parentBoundingClientRect.width;\n  }\n  editComment(options) {\n    const [posX, posY] = this.#popupPosition || this.commentButtonPosition.map(x => x / 100);\n    const parentDimensions = this.parentBoundingClientRect;\n    const {\n      x: parentX,\n      y: parentY,\n      width: parentWidth,\n      height: parentHeight\n    } = parentDimensions;\n    this.#commentManager.showDialog(null, this, parentX + posX * parentWidth, parentY + posY * parentHeight, {\n      ...options,\n      parentDimensions\n    });\n  }\n  render() {\n    if (this.#popup) {\n      return;\n    }\n    const popup = this.#popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n    if (this.#color) {\n      const baseColor = popup.style.outlineColor = Util.makeHexColor(...this.#color);\n      popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n    }\n    const header = document.createElement(\"span\");\n    header.className = \"header\";\n    if (this.#titleObj?.str) {\n      const title = document.createElement(\"span\");\n      title.className = \"title\";\n      header.append(title);\n      ({\n        dir: title.dir,\n        str: title.textContent\n      } = this.#titleObj);\n    }\n    popup.append(header);\n    if (this.#dateObj) {\n      const modificationDate = document.createElement(\"time\");\n      modificationDate.className = \"popupDate\";\n      modificationDate.setAttribute(\"data-l10n-id\", \"pdfjs-annotation-date-time-string\");\n      modificationDate.setAttribute(\"data-l10n-args\", JSON.stringify({\n        dateObj: this.#dateObj.valueOf()\n      }));\n      modificationDate.dateTime = this.#dateObj.toISOString();\n      header.append(modificationDate);\n    }\n    renderRichText({\n      html: this.#html || this.#contentsObj.str,\n      dir: this.#contentsObj?.dir,\n      className: \"popupContent\"\n    }, popup);\n    this.#container.append(popup);\n  }\n  get #html() {\n    const richText = this.#richText;\n    const contentsObj = this.#contentsObj;\n    if (richText?.str && (!contentsObj?.str || contentsObj.str === richText.str)) {\n      return this.#richText.html || null;\n    }\n    return null;\n  }\n  get #fontSize() {\n    return this.#html?.attributes?.style?.fontSize || 0;\n  }\n  get #fontColor() {\n    return this.#html?.attributes?.style?.color || null;\n  }\n  #makePopupContent(text) {\n    const popupLines = [];\n    const popupContent = {\n      str: text,\n      html: {\n        name: \"div\",\n        attributes: {\n          dir: \"auto\"\n        },\n        children: [{\n          name: \"p\",\n          children: popupLines\n        }]\n      }\n    };\n    const lineAttributes = {\n      style: {\n        color: this.#fontColor,\n        fontSize: this.#fontSize ? `calc(${this.#fontSize}px * var(--total-scale-factor))` : \"\"\n      }\n    };\n    for (const line of text.split(\"\\n\")) {\n      popupLines.push({\n        name: \"span\",\n        value: line,\n        attributes: lineAttributes\n      });\n    }\n    return popupContent;\n  }\n  #keyDown(event) {\n    if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    if (event.key === \"Enter\" || event.key === \"Escape\" && this.#pinned) {\n      this.#toggle();\n    }\n  }\n  updateEdited({\n    rect,\n    popup,\n    deleted\n  }) {\n    if (this.#commentManager) {\n      if (deleted) {\n        this.remove();\n        this.#commentText = null;\n      } else if (popup) {\n        if (popup.deleted) {\n          this.remove();\n        } else {\n          this.#updateColor();\n          this.#commentText = popup.text;\n        }\n      }\n      if (rect) {\n        this.#commentButtonPosition = null;\n        this.#setCommentButtonPosition();\n        this.#updateCommentButtonPosition();\n      }\n      return;\n    }\n    if (deleted || popup?.deleted) {\n      this.remove();\n      return;\n    }\n    this.#addEventListeners();\n    this.#updates ||= {\n      contentsObj: this.#contentsObj,\n      richText: this.#richText\n    };\n    if (rect) {\n      this.#position = null;\n    }\n    if (popup && popup.text) {\n      this.#richText = this.#makePopupContent(popup.text);\n      this.#dateObj = PDFDateString.toDateObject(popup.date);\n      this.#contentsObj = null;\n    }\n    this.#popup?.remove();\n    this.#popup = null;\n  }\n  resetEdited() {\n    if (!this.#updates) {\n      return;\n    }\n    ({\n      contentsObj: this.#contentsObj,\n      richText: this.#richText\n    } = this.#updates);\n    this.#updates = null;\n    this.#popup?.remove();\n    this.#popup = null;\n    this.#position = null;\n  }\n  remove() {\n    this.#popupAbortController?.abort();\n    this.#popupAbortController = null;\n    this.#popup?.remove();\n    this.#popup = null;\n    this.#wasVisible = false;\n    this.#pinned = false;\n    this.#commentButton?.remove();\n    this.#commentButton = null;\n    if (this.trigger) {\n      for (const element of this.trigger) {\n        element.classList.remove(\"popupTriggerArea\");\n      }\n    }\n  }\n  #setPosition() {\n    if (this.#position !== null) {\n      return;\n    }\n    const {\n      page: {\n        view\n      },\n      viewport: {\n        rawDims: {\n          pageWidth,\n          pageHeight,\n          pageX,\n          pageY\n        }\n      }\n    } = this.#parent;\n    let useParentRect = !!this.#parentRect;\n    let rect = useParentRect ? this.#parentRect : this.#rect;\n    for (const element of this.#elements) {\n      if (!rect || Util.intersect(element.data.rect, rect) !== null) {\n        rect = element.data.rect;\n        useParentRect = true;\n        break;\n      }\n    }\n    const normalizedRect = Util.normalizeRect([rect[0], view[3] - rect[1] + view[1], rect[2], view[3] - rect[3] + view[1]]);\n    const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n    const parentWidth = useParentRect ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION : 0;\n    const popupLeft = normalizedRect[0] + parentWidth;\n    const popupTop = normalizedRect[1];\n    this.#position = [100 * (popupLeft - pageX) / pageWidth, 100 * (popupTop - pageY) / pageHeight];\n    const {\n      style\n    } = this.#container;\n    style.left = `${this.#position[0]}%`;\n    style.top = `${this.#position[1]}%`;\n  }\n  #toggle() {\n    if (this.#commentManager) {\n      this.#commentManager.toggleCommentPopup(this, false);\n      return;\n    }\n    this.#pinned = !this.#pinned;\n    if (this.#pinned) {\n      this.#show();\n      this.#container.addEventListener(\"click\", this.#boundToggle);\n      this.#container.addEventListener(\"keydown\", this.#boundKeyDown);\n    } else {\n      this.#hide();\n      this.#container.removeEventListener(\"click\", this.#boundToggle);\n      this.#container.removeEventListener(\"keydown\", this.#boundKeyDown);\n    }\n  }\n  #show() {\n    if (!this.#popup) {\n      this.render();\n    }\n    if (!this.isVisible) {\n      this.#setPosition();\n      this.#container.hidden = false;\n      this.#container.style.zIndex = parseInt(this.#container.style.zIndex) + 1000;\n    } else if (this.#pinned) {\n      this.#container.classList.add(\"focused\");\n    }\n  }\n  #hide() {\n    this.#container.classList.remove(\"focused\");\n    if (this.#pinned || !this.isVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n    this.#container.style.zIndex = parseInt(this.#container.style.zIndex) - 1000;\n  }\n  forceHide() {\n    this.#wasVisible = this.isVisible;\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n  }\n  maybeShow() {\n    if (this.#commentManager) {\n      return;\n    }\n    this.#addEventListeners();\n    if (!this.#wasVisible) {\n      return;\n    }\n    if (!this.#popup) {\n      this.#show();\n    }\n    this.#wasVisible = false;\n    this.#container.hidden = false;\n  }\n  get isVisible() {\n    if (this.#commentManager) {\n      return false;\n    }\n    return this.#container.hidden === false;\n  }\n}\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n    this.textContent = parameters.data.textContent;\n    this.textPosition = parameters.data.textPosition;\n    this.annotationEditorType = AnnotationEditorType.FREETEXT;\n  }\n  render() {\n    this.container.classList.add(\"freeTextAnnotation\");\n    if (this.textContent) {\n      const content = document.createElement(\"div\");\n      content.classList.add(\"annotationTextContent\");\n      content.setAttribute(\"role\", \"comment\");\n      for (const line of this.textContent) {\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.textContent = line;\n        content.append(lineSpan);\n      }\n      this.container.append(content);\n    }\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this._editOnDoubleClick();\n    return this.container;\n  }\n}\nclass LineAnnotationElement extends AnnotationElement {\n  #line = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"lineAnnotation\");\n    const {\n      data,\n      width,\n      height\n    } = this;\n    const svg = this.svgFactory.create(width, height, true);\n    const line = this.#line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n    svg.append(line);\n    this.container.append(svg);\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#line;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass SquareAnnotationElement extends AnnotationElement {\n  #square = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"squareAnnotation\");\n    const {\n      data,\n      width,\n      height\n    } = this;\n    const svg = this.svgFactory.create(width, height, true);\n    const borderWidth = data.borderStyle.width;\n    const square = this.#square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n    svg.append(square);\n    this.container.append(svg);\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#square;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass CircleAnnotationElement extends AnnotationElement {\n  #circle = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"circleAnnotation\");\n    const {\n      data,\n      width,\n      height\n    } = this;\n    const svg = this.svgFactory.create(width, height, true);\n    const borderWidth = data.borderStyle.width;\n    const circle = this.#circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n    svg.append(circle);\n    this.container.append(svg);\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#circle;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass PolylineAnnotationElement extends AnnotationElement {\n  #polyline = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n  render() {\n    this.container.classList.add(this.containerClassName);\n    const {\n      data: {\n        rect,\n        vertices,\n        borderStyle,\n        popupRef\n      },\n      width,\n      height\n    } = this;\n    if (!vertices) {\n      return this.container;\n    }\n    const svg = this.svgFactory.create(width, height, true);\n    let points = [];\n    for (let i = 0, ii = vertices.length; i < ii; i += 2) {\n      const x = vertices[i] - rect[0];\n      const y = rect[3] - vertices[i + 1];\n      points.push(`${x},${y}`);\n    }\n    points = points.join(\" \");\n    const polyline = this.#polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    polyline.setAttribute(\"stroke-width\", borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n    svg.append(polyline);\n    this.container.append(svg);\n    if (!popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#polyline;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    super(parameters);\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n  }\n  render() {\n    this.container.classList.add(\"caretAnnotation\");\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\nclass InkAnnotationElement extends AnnotationElement {\n  #polylinesGroupElement = null;\n  #polylines = [];\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n    this.containerClassName = \"inkAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n    this.annotationEditorType = this.data.it === \"InkHighlight\" ? AnnotationEditorType.HIGHLIGHT : AnnotationEditorType.INK;\n  }\n  #getTransform(rotation, rect) {\n    switch (rotation) {\n      case 90:\n        return {\n          transform: `rotate(90) translate(${-rect[0]},${rect[1]}) scale(1,-1)`,\n          width: rect[3] - rect[1],\n          height: rect[2] - rect[0]\n        };\n      case 180:\n        return {\n          transform: `rotate(180) translate(${-rect[2]},${rect[1]}) scale(1,-1)`,\n          width: rect[2] - rect[0],\n          height: rect[3] - rect[1]\n        };\n      case 270:\n        return {\n          transform: `rotate(270) translate(${-rect[2]},${rect[3]}) scale(1,-1)`,\n          width: rect[3] - rect[1],\n          height: rect[2] - rect[0]\n        };\n      default:\n        return {\n          transform: `translate(${-rect[0]},${rect[3]}) scale(1,-1)`,\n          width: rect[2] - rect[0],\n          height: rect[3] - rect[1]\n        };\n    }\n  }\n  render() {\n    this.container.classList.add(this.containerClassName);\n    const {\n      data: {\n        rect,\n        rotation,\n        inkLists,\n        borderStyle,\n        popupRef\n      }\n    } = this;\n    const {\n      transform,\n      width,\n      height\n    } = this.#getTransform(rotation, rect);\n    const svg = this.svgFactory.create(width, height, true);\n    const g = this.#polylinesGroupElement = this.svgFactory.createElement(\"svg:g\");\n    svg.append(g);\n    g.setAttribute(\"stroke-width\", borderStyle.width || 1);\n    g.setAttribute(\"stroke-linecap\", \"round\");\n    g.setAttribute(\"stroke-linejoin\", \"round\");\n    g.setAttribute(\"stroke-miterlimit\", 10);\n    g.setAttribute(\"stroke\", \"transparent\");\n    g.setAttribute(\"fill\", \"transparent\");\n    g.setAttribute(\"transform\", transform);\n    for (let i = 0, ii = inkLists.length; i < ii; i++) {\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      this.#polylines.push(polyline);\n      polyline.setAttribute(\"points\", inkLists[i].join(\",\"));\n      g.append(polyline);\n    }\n    if (!popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.append(svg);\n    this._editOnDoubleClick();\n    return this.container;\n  }\n  updateEdited(params) {\n    super.updateEdited(params);\n    const {\n      thickness,\n      points,\n      rect\n    } = params;\n    const g = this.#polylinesGroupElement;\n    if (thickness >= 0) {\n      g.setAttribute(\"stroke-width\", thickness || 1);\n    }\n    if (points) {\n      for (let i = 0, ii = this.#polylines.length; i < ii; i++) {\n        this.#polylines[i].setAttribute(\"points\", points[i].join(\",\"));\n      }\n    }\n    if (rect) {\n      const {\n        transform,\n        width,\n        height\n      } = this.#getTransform(this.data.rotation, rect);\n      const root = g.parentElement;\n      root.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n      g.setAttribute(\"transform\", transform);\n    }\n  }\n  getElementsToTriggerPopup() {\n    return this.#polylines;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n    this.annotationEditorType = AnnotationEditorType.HIGHLIGHT;\n  }\n  render() {\n    const {\n      data: {\n        overlaidText,\n        popupRef\n      }\n    } = this;\n    if (!popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"highlightAnnotation\");\n    this._editOnDoubleClick();\n    if (overlaidText) {\n      const mark = document.createElement(\"mark\");\n      mark.classList.add(\"overlaidText\");\n      mark.textContent = overlaidText;\n      this.container.append(mark);\n    }\n    return this.container;\n  }\n}\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n  render() {\n    const {\n      data: {\n        overlaidText,\n        popupRef\n      }\n    } = this;\n    if (!popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"underlineAnnotation\");\n    if (overlaidText) {\n      const underline = document.createElement(\"u\");\n      underline.classList.add(\"overlaidText\");\n      underline.textContent = overlaidText;\n      this.container.append(underline);\n    }\n    return this.container;\n  }\n}\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n  render() {\n    const {\n      data: {\n        overlaidText,\n        popupRef\n      }\n    } = this;\n    if (!popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"squigglyAnnotation\");\n    if (overlaidText) {\n      const underline = document.createElement(\"u\");\n      underline.classList.add(\"overlaidText\");\n      underline.textContent = overlaidText;\n      this.container.append(underline);\n    }\n    return this.container;\n  }\n}\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n  render() {\n    const {\n      data: {\n        overlaidText,\n        popupRef\n      }\n    } = this;\n    if (!popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this.container.classList.add(\"strikeoutAnnotation\");\n    if (overlaidText) {\n      const strikeout = document.createElement(\"s\");\n      strikeout.classList.add(\"overlaidText\");\n      strikeout.textContent = overlaidText;\n      this.container.append(strikeout);\n    }\n    return this.container;\n  }\n}\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true\n    });\n    this.annotationEditorType = AnnotationEditorType.STAMP;\n  }\n  render() {\n    this.container.classList.add(\"stampAnnotation\");\n    this.container.setAttribute(\"role\", \"img\");\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    this._editOnDoubleClick();\n    return this.container;\n  }\n}\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  #trigger = null;\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true\n    });\n    const {\n      file\n    } = this.data;\n    this.filename = file.filename;\n    this.content = file.content;\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      ...file\n    });\n  }\n  render() {\n    this.container.classList.add(\"fileAttachmentAnnotation\");\n    const {\n      container,\n      data\n    } = this;\n    let trigger;\n    if (data.hasAppearance || data.fillAlpha === 0) {\n      trigger = document.createElement(\"div\");\n    } else {\n      trigger = document.createElement(\"img\");\n      trigger.src = `${this.imageResourcesPath}annotation-${/paperclip/i.test(data.name) ? \"paperclip\" : \"pushpin\"}.svg`;\n      if (data.fillAlpha && data.fillAlpha < 1) {\n        trigger.style = `filter: opacity(${Math.round(data.fillAlpha * 100)}%);`;\n      }\n    }\n    trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n    this.#trigger = trigger;\n    const {\n      isMac\n    } = util_FeatureTest.platform;\n    container.addEventListener(\"keydown\", evt => {\n      if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n        this.#download();\n      }\n    });\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    } else {\n      trigger.classList.add(\"popupTriggerArea\");\n    }\n    container.append(trigger);\n    return container;\n  }\n  getElementsToTriggerPopup() {\n    return this.#trigger;\n  }\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n  #download() {\n    this.downloadManager?.openOrDownloadData(this.content, this.filename);\n  }\n}\nclass AnnotationLayer {\n  #accessibilityManager = null;\n  #annotationCanvasMap = null;\n  #annotationStorage = null;\n  #editableAnnotations = new Map();\n  #structTreeLayer = null;\n  #linkService = null;\n  constructor({\n    div,\n    accessibilityManager,\n    annotationCanvasMap,\n    annotationEditorUIManager,\n    page,\n    viewport,\n    structTreeLayer,\n    commentManager,\n    linkService,\n    annotationStorage\n  }) {\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationCanvasMap = annotationCanvasMap;\n    this.#structTreeLayer = structTreeLayer || null;\n    this.#linkService = linkService || null;\n    this.#annotationStorage = annotationStorage || new AnnotationStorage();\n    this.page = page;\n    this.viewport = viewport;\n    this.zIndex = 0;\n    this._annotationEditorUIManager = annotationEditorUIManager;\n    this._commentManager = commentManager || null;\n  }\n  hasEditableAnnotations() {\n    return this.#editableAnnotations.size > 0;\n  }\n  async #appendElement(element, id, popupElements) {\n    const contentElement = element.firstChild || element;\n    const annotationId = contentElement.id = `${AnnotationPrefix}${id}`;\n    const ariaAttributes = await this.#structTreeLayer?.getAriaAttributes(annotationId);\n    if (ariaAttributes) {\n      for (const [key, value] of ariaAttributes) {\n        contentElement.setAttribute(key, value);\n      }\n    }\n    if (popupElements) {\n      popupElements.at(-1).container.after(element);\n    } else {\n      this.div.append(element);\n      this.#accessibilityManager?.moveElementInDOM(this.div, element, contentElement, false);\n    }\n  }\n  async render(params) {\n    const {\n      annotations\n    } = params;\n    const layer = this.div;\n    setLayerDimensions(layer, this.viewport);\n    const popupToElements = new Map();\n    const elementParams = {\n      data: null,\n      layer,\n      linkService: this.#linkService,\n      downloadManager: params.downloadManager,\n      imageResourcesPath: params.imageResourcesPath || \"\",\n      renderForms: params.renderForms !== false,\n      svgFactory: new DOMSVGFactory(),\n      annotationStorage: this.#annotationStorage,\n      enableComment: params.enableComment === true,\n      enableScripting: params.enableScripting === true,\n      hasJSActions: params.hasJSActions,\n      fieldObjects: params.fieldObjects,\n      parent: this,\n      elements: null\n    };\n    for (const data of annotations) {\n      if (data.noHTML) {\n        continue;\n      }\n      const isPopupAnnotation = data.annotationType === AnnotationType.POPUP;\n      if (!isPopupAnnotation) {\n        if (data.rect[2] === data.rect[0] || data.rect[3] === data.rect[1]) {\n          continue;\n        }\n      } else {\n        const elements = popupToElements.get(data.id);\n        if (!elements) {\n          continue;\n        }\n        elementParams.elements = elements;\n      }\n      elementParams.data = data;\n      const element = AnnotationElementFactory.create(elementParams);\n      if (!element.isRenderable) {\n        continue;\n      }\n      if (!isPopupAnnotation && data.popupRef) {\n        const elements = popupToElements.get(data.popupRef);\n        if (!elements) {\n          popupToElements.set(data.popupRef, [element]);\n        } else {\n          elements.push(element);\n        }\n      }\n      const rendered = element.render();\n      if (data.hidden) {\n        rendered.style.visibility = \"hidden\";\n      }\n      await this.#appendElement(rendered, data.id, elementParams.elements);\n      element.extraPopupElement?.popup?.renderCommentButton();\n      if (element._isEditable) {\n        this.#editableAnnotations.set(element.data.id, element);\n        this._annotationEditorUIManager?.renderAnnotationElement(element);\n      }\n    }\n    this.#setAnnotationCanvasMap();\n  }\n  async addLinkAnnotations(annotations) {\n    const elementParams = {\n      data: null,\n      layer: this.div,\n      linkService: this.#linkService,\n      svgFactory: new DOMSVGFactory(),\n      parent: this\n    };\n    for (const data of annotations) {\n      data.borderStyle ||= AnnotationLayer._defaultBorderStyle;\n      elementParams.data = data;\n      const element = AnnotationElementFactory.create(elementParams);\n      if (!element.isRenderable) {\n        continue;\n      }\n      const rendered = element.render();\n      await this.#appendElement(rendered, data.id, null);\n    }\n  }\n  update({\n    viewport\n  }) {\n    const layer = this.div;\n    this.viewport = viewport;\n    setLayerDimensions(layer, {\n      rotation: viewport.rotation\n    });\n    this.#setAnnotationCanvasMap();\n    layer.hidden = false;\n  }\n  #setAnnotationCanvasMap() {\n    if (!this.#annotationCanvasMap) {\n      return;\n    }\n    const layer = this.div;\n    for (const [id, canvas] of this.#annotationCanvasMap) {\n      const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n      canvas.className = \"annotationContent\";\n      const {\n        firstChild\n      } = element;\n      if (!firstChild) {\n        element.append(canvas);\n      } else if (firstChild.nodeName === \"CANVAS\") {\n        firstChild.replaceWith(canvas);\n      } else if (!firstChild.classList.contains(\"annotationContent\")) {\n        firstChild.before(canvas);\n      } else {\n        firstChild.after(canvas);\n      }\n      const editableAnnotation = this.#editableAnnotations.get(id);\n      if (!editableAnnotation) {\n        continue;\n      }\n      if (editableAnnotation._hasNoCanvas) {\n        this._annotationEditorUIManager?.setMissingCanvas(id, element.id, canvas);\n        editableAnnotation._hasNoCanvas = false;\n      } else {\n        editableAnnotation.canvas = canvas;\n      }\n    }\n    this.#annotationCanvasMap.clear();\n  }\n  getEditableAnnotations() {\n    return Array.from(this.#editableAnnotations.values());\n  }\n  getEditableAnnotation(id) {\n    return this.#editableAnnotations.get(id);\n  }\n  addFakeAnnotation(editor) {\n    const {\n      div\n    } = this;\n    const {\n      id,\n      rotation\n    } = editor;\n    const element = new EditorAnnotationElement({\n      data: {\n        id,\n        rect: editor.getPDFRect(),\n        rotation\n      },\n      editor,\n      layer: div,\n      parent: this,\n      enableComment: !!this._commentManager,\n      linkService: this.#linkService,\n      annotationStorage: this.#annotationStorage\n    });\n    const htmlElement = element.render();\n    div.append(htmlElement);\n    this.#accessibilityManager?.moveElementInDOM(div, htmlElement, htmlElement, false);\n    element.createOrUpdatePopup();\n    return element;\n  }\n  static get _defaultBorderStyle() {\n    return shadow(this, \"_defaultBorderStyle\", Object.freeze({\n      width: 1,\n      rawWidth: 1,\n      style: AnnotationBorderStyleType.SOLID,\n      dashArray: [3],\n      horizontalCornerRadius: 0,\n      verticalCornerRadius: 0\n    }));\n  }\n}\n\n;// ./src/display/editor/freetext.js\n\n\n\n\n\n\n\n\n\nconst EOL_PATTERN = /\\r\\n?|\\n/g;\nclass FreeTextEditor extends AnnotationEditor {\n  #content = \"\";\n  #editorDivId = `${this.id}-editor`;\n  #editModeAC = null;\n  #fontSize;\n  _colorPicker = null;\n  static _freeTextDefaultContent = \"\";\n  static _internalPadding = 0;\n  static _defaultColor = null;\n  static _defaultFontSize = 10;\n  static get _keyboardManager() {\n    const proto = FreeTextEditor.prototype;\n    const arrowChecker = self => self.isEmpty();\n    const small = AnnotationEditorUIManager.TRANSLATE_SMALL;\n    const big = AnnotationEditorUIManager.TRANSLATE_BIG;\n    return shadow(this, \"_keyboardManager\", new KeyboardManager([[[\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"], proto.commitOrRemove, {\n      bubbles: true\n    }], [[\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"], proto.commitOrRemove], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto._translateEmpty, {\n      args: [-small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto._translateEmpty, {\n      args: [-big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto._translateEmpty, {\n      args: [small, 0],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto._translateEmpty, {\n      args: [big, 0],\n      checker: arrowChecker\n    }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto._translateEmpty, {\n      args: [0, -small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto._translateEmpty, {\n      args: [0, -big],\n      checker: arrowChecker\n    }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto._translateEmpty, {\n      args: [0, small],\n      checker: arrowChecker\n    }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto._translateEmpty, {\n      args: [0, big],\n      checker: arrowChecker\n    }]]));\n  }\n  static _type = \"freetext\";\n  static _editorType = AnnotationEditorType.FREETEXT;\n  constructor(params) {\n    super({\n      ...params,\n      name: \"freeTextEditor\"\n    });\n    this.color = params.color || FreeTextEditor._defaultColor || AnnotationEditor._defaultLineColor;\n    this.#fontSize = params.fontSize || FreeTextEditor._defaultFontSize;\n    if (!this.annotationElementId) {\n      this._uiManager.a11yAlert(\"pdfjs-editor-freetext-added-alert\");\n    }\n  }\n  static initialize(l10n, uiManager) {\n    AnnotationEditor.initialize(l10n, uiManager);\n    const style = getComputedStyle(document.documentElement);\n    this._internalPadding = parseFloat(style.getPropertyValue(\"--freetext-padding\"));\n  }\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.FREETEXT_SIZE:\n        FreeTextEditor._defaultFontSize = value;\n        break;\n      case AnnotationEditorParamsType.FREETEXT_COLOR:\n        FreeTextEditor._defaultColor = value;\n        break;\n    }\n  }\n  updateParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.FREETEXT_SIZE:\n        this.#updateFontSize(value);\n        break;\n      case AnnotationEditorParamsType.FREETEXT_COLOR:\n        this.#updateColor(value);\n        break;\n    }\n  }\n  static get defaultPropertiesToUpdate() {\n    return [[AnnotationEditorParamsType.FREETEXT_SIZE, FreeTextEditor._defaultFontSize], [AnnotationEditorParamsType.FREETEXT_COLOR, FreeTextEditor._defaultColor || AnnotationEditor._defaultLineColor]];\n  }\n  get propertiesToUpdate() {\n    return [[AnnotationEditorParamsType.FREETEXT_SIZE, this.#fontSize], [AnnotationEditorParamsType.FREETEXT_COLOR, this.color]];\n  }\n  get toolbarButtons() {\n    this._colorPicker ||= new BasicColorPicker(this);\n    return [[\"colorPicker\", this._colorPicker]];\n  }\n  get colorType() {\n    return AnnotationEditorParamsType.FREETEXT_COLOR;\n  }\n  #updateFontSize(fontSize) {\n    const setFontsize = size => {\n      this.editorDiv.style.fontSize = `calc(${size}px * var(--total-scale-factor))`;\n      this.translate(0, -(size - this.#fontSize) * this.parentScale);\n      this.#fontSize = size;\n      this.#setEditorDimensions();\n    };\n    const savedFontsize = this.#fontSize;\n    this.addCommands({\n      cmd: setFontsize.bind(this, fontSize),\n      undo: setFontsize.bind(this, savedFontsize),\n      post: this._uiManager.updateUI.bind(this._uiManager, this),\n      mustExec: true,\n      type: AnnotationEditorParamsType.FREETEXT_SIZE,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  onUpdatedColor() {\n    this.editorDiv.style.color = this.color;\n    this._colorPicker?.update(this.color);\n    super.onUpdatedColor();\n  }\n  #updateColor(color) {\n    const setColor = col => {\n      this.color = col;\n      this.onUpdatedColor();\n    };\n    const savedColor = this.color;\n    this.addCommands({\n      cmd: setColor.bind(this, color),\n      undo: setColor.bind(this, savedColor),\n      post: this._uiManager.updateUI.bind(this._uiManager, this),\n      mustExec: true,\n      type: AnnotationEditorParamsType.FREETEXT_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  _translateEmpty(x, y) {\n    this._uiManager.translateSelectedEditors(x, y, true);\n  }\n  getInitialTranslation() {\n    const scale = this.parentScale;\n    return [-FreeTextEditor._internalPadding * scale, -(FreeTextEditor._internalPadding + this.#fontSize) * scale];\n  }\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n    if (!this.isAttachedToDOM) {\n      this.parent.add(this);\n    }\n  }\n  enableEditMode() {\n    if (!super.enableEditMode()) {\n      return false;\n    }\n    this.overlayDiv.classList.remove(\"enabled\");\n    this.editorDiv.contentEditable = true;\n    this._isDraggable = false;\n    this.div.removeAttribute(\"aria-activedescendant\");\n    this.#editModeAC = new AbortController();\n    const signal = this._uiManager.combinedSignal(this.#editModeAC);\n    this.editorDiv.addEventListener(\"keydown\", this.editorDivKeydown.bind(this), {\n      signal\n    });\n    this.editorDiv.addEventListener(\"focus\", this.editorDivFocus.bind(this), {\n      signal\n    });\n    this.editorDiv.addEventListener(\"blur\", this.editorDivBlur.bind(this), {\n      signal\n    });\n    this.editorDiv.addEventListener(\"input\", this.editorDivInput.bind(this), {\n      signal\n    });\n    this.editorDiv.addEventListener(\"paste\", this.editorDivPaste.bind(this), {\n      signal\n    });\n    return true;\n  }\n  disableEditMode() {\n    if (!super.disableEditMode()) {\n      return false;\n    }\n    this.overlayDiv.classList.add(\"enabled\");\n    this.editorDiv.contentEditable = false;\n    this.div.setAttribute(\"aria-activedescendant\", this.#editorDivId);\n    this._isDraggable = true;\n    this.#editModeAC?.abort();\n    this.#editModeAC = null;\n    this.div.focus({\n      preventScroll: true\n    });\n    this.isEditing = false;\n    this.parent.div.classList.add(\"freetextEditing\");\n    return true;\n  }\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    if (event.target !== this.editorDiv) {\n      this.editorDiv.focus();\n    }\n  }\n  onceAdded(focus) {\n    if (this.width) {\n      return;\n    }\n    this.enableEditMode();\n    if (focus) {\n      this.editorDiv.focus();\n    }\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    }\n    this._initialOptions = null;\n  }\n  isEmpty() {\n    return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n  }\n  remove() {\n    this.isEditing = false;\n    if (this.parent) {\n      this.parent.setEditingState(true);\n      this.parent.div.classList.add(\"freetextEditing\");\n    }\n    super.remove();\n  }\n  #extractText() {\n    const buffer = [];\n    this.editorDiv.normalize();\n    let prevChild = null;\n    for (const child of this.editorDiv.childNodes) {\n      if (prevChild?.nodeType === Node.TEXT_NODE && child.nodeName === \"BR\") {\n        continue;\n      }\n      buffer.push(FreeTextEditor.#getNodeContent(child));\n      prevChild = child;\n    }\n    return buffer.join(\"\\n\");\n  }\n  #setEditorDimensions() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    let rect;\n    if (this.isAttachedToDOM) {\n      rect = this.div.getBoundingClientRect();\n    } else {\n      const {\n        currentLayer,\n        div\n      } = this;\n      const savedDisplay = div.style.display;\n      const savedVisibility = div.classList.contains(\"hidden\");\n      div.classList.remove(\"hidden\");\n      div.style.display = \"hidden\";\n      currentLayer.div.append(this.div);\n      rect = div.getBoundingClientRect();\n      div.remove();\n      div.style.display = savedDisplay;\n      div.classList.toggle(\"hidden\", savedVisibility);\n    }\n    if (this.rotation % 180 === this.parentRotation % 180) {\n      this.width = rect.width / parentWidth;\n      this.height = rect.height / parentHeight;\n    } else {\n      this.width = rect.height / parentWidth;\n      this.height = rect.width / parentHeight;\n    }\n    this.fixAndSetPosition();\n  }\n  commit() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n    super.commit();\n    this.disableEditMode();\n    const savedText = this.#content;\n    const newText = this.#content = this.#extractText().trimEnd();\n    if (savedText === newText) {\n      return;\n    }\n    const setText = text => {\n      this.#content = text;\n      if (!text) {\n        this.remove();\n        return;\n      }\n      this.#setContent();\n      this._uiManager.rebuild(this);\n      this.#setEditorDimensions();\n    };\n    this.addCommands({\n      cmd: () => {\n        setText(newText);\n      },\n      undo: () => {\n        setText(savedText);\n      },\n      mustExec: false\n    });\n    this.#setEditorDimensions();\n  }\n  shouldGetKeyboardEvents() {\n    return this.isInEditMode();\n  }\n  enterInEditMode() {\n    this.enableEditMode();\n    this.editorDiv.focus();\n  }\n  keydown(event) {\n    if (event.target === this.div && event.key === \"Enter\") {\n      this.enterInEditMode();\n      event.preventDefault();\n    }\n  }\n  editorDivKeydown(event) {\n    FreeTextEditor._keyboardManager.exec(this, event);\n  }\n  editorDivFocus(event) {\n    this.isEditing = true;\n  }\n  editorDivBlur(event) {\n    this.isEditing = false;\n  }\n  editorDivInput(event) {\n    this.parent.div.classList.toggle(\"freetextEditing\", this.isEmpty());\n  }\n  disableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"comment\");\n    this.editorDiv.removeAttribute(\"aria-multiline\");\n  }\n  enableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"textbox\");\n    this.editorDiv.setAttribute(\"aria-multiline\", true);\n  }\n  get canChangeContent() {\n    return true;\n  }\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n    let baseX, baseY;\n    if (this._isCopy || this.annotationElementId) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n    super.render();\n    this.editorDiv = document.createElement(\"div\");\n    this.editorDiv.className = \"internal\";\n    this.editorDiv.setAttribute(\"id\", this.#editorDivId);\n    this.editorDiv.setAttribute(\"data-l10n-id\", \"pdfjs-free-text2\");\n    this.editorDiv.setAttribute(\"data-l10n-attrs\", \"default-content\");\n    this.enableEditing();\n    this.editorDiv.contentEditable = true;\n    const {\n      style\n    } = this.editorDiv;\n    style.fontSize = `calc(${this.#fontSize}px * var(--total-scale-factor))`;\n    style.color = this.color;\n    this.div.append(this.editorDiv);\n    this.overlayDiv = document.createElement(\"div\");\n    this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n    this.div.append(this.overlayDiv);\n    if (this._isCopy || this.annotationElementId) {\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      if (this.annotationElementId) {\n        const {\n          position\n        } = this._initialData;\n        let [tx, ty] = this.getInitialTranslation();\n        [tx, ty] = this.pageTranslationToScreen(tx, ty);\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        const [pageX, pageY] = this.pageTranslation;\n        let posX, posY;\n        switch (this.rotation) {\n          case 0:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n            break;\n          case 90:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [ty, -tx];\n            break;\n          case 180:\n            posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [-tx, -ty];\n            break;\n          case 270:\n            posX = baseX + (position[0] - pageX - this.height * pageHeight) / pageWidth;\n            posY = baseY + (position[1] - pageY - this.width * pageWidth) / pageHeight;\n            [tx, ty] = [-ty, tx];\n            break;\n        }\n        this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n      } else {\n        this._moveAfterPaste(baseX, baseY);\n      }\n      this.#setContent();\n      this._isDraggable = true;\n      this.editorDiv.contentEditable = false;\n    } else {\n      this._isDraggable = false;\n      this.editorDiv.contentEditable = true;\n    }\n    return this.div;\n  }\n  static #getNodeContent(node) {\n    return (node.nodeType === Node.TEXT_NODE ? node.nodeValue : node.innerText).replaceAll(EOL_PATTERN, \"\");\n  }\n  editorDivPaste(event) {\n    const clipboardData = event.clipboardData || window.clipboardData;\n    const {\n      types\n    } = clipboardData;\n    if (types.length === 1 && types[0] === \"text/plain\") {\n      return;\n    }\n    event.preventDefault();\n    const paste = FreeTextEditor.#deserializeContent(clipboardData.getData(\"text\") || \"\").replaceAll(EOL_PATTERN, \"\\n\");\n    if (!paste) {\n      return;\n    }\n    const selection = window.getSelection();\n    if (!selection.rangeCount) {\n      return;\n    }\n    this.editorDiv.normalize();\n    selection.deleteFromDocument();\n    const range = selection.getRangeAt(0);\n    if (!paste.includes(\"\\n\")) {\n      range.insertNode(document.createTextNode(paste));\n      this.editorDiv.normalize();\n      selection.collapseToStart();\n      return;\n    }\n    const {\n      startContainer,\n      startOffset\n    } = range;\n    const bufferBefore = [];\n    const bufferAfter = [];\n    if (startContainer.nodeType === Node.TEXT_NODE) {\n      const parent = startContainer.parentElement;\n      bufferAfter.push(startContainer.nodeValue.slice(startOffset).replaceAll(EOL_PATTERN, \"\"));\n      if (parent !== this.editorDiv) {\n        let buffer = bufferBefore;\n        for (const child of this.editorDiv.childNodes) {\n          if (child === parent) {\n            buffer = bufferAfter;\n            continue;\n          }\n          buffer.push(FreeTextEditor.#getNodeContent(child));\n        }\n      }\n      bufferBefore.push(startContainer.nodeValue.slice(0, startOffset).replaceAll(EOL_PATTERN, \"\"));\n    } else if (startContainer === this.editorDiv) {\n      let buffer = bufferBefore;\n      let i = 0;\n      for (const child of this.editorDiv.childNodes) {\n        if (i++ === startOffset) {\n          buffer = bufferAfter;\n        }\n        buffer.push(FreeTextEditor.#getNodeContent(child));\n      }\n    }\n    this.#content = `${bufferBefore.join(\"\\n\")}${paste}${bufferAfter.join(\"\\n\")}`;\n    this.#setContent();\n    const newRange = new Range();\n    let beforeLength = Math.sumPrecise(bufferBefore.map(line => line.length));\n    for (const {\n      firstChild\n    } of this.editorDiv.childNodes) {\n      if (firstChild.nodeType === Node.TEXT_NODE) {\n        const length = firstChild.nodeValue.length;\n        if (beforeLength <= length) {\n          newRange.setStart(firstChild, beforeLength);\n          newRange.setEnd(firstChild, beforeLength);\n          break;\n        }\n        beforeLength -= length;\n      }\n    }\n    selection.removeAllRanges();\n    selection.addRange(newRange);\n  }\n  #setContent() {\n    this.editorDiv.replaceChildren();\n    if (!this.#content) {\n      return;\n    }\n    for (const line of this.#content.split(\"\\n\")) {\n      const div = document.createElement(\"div\");\n      div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n      this.editorDiv.append(div);\n    }\n  }\n  #serializeContent() {\n    return this.#content.replaceAll(\"\\xa0\", \" \");\n  }\n  static #deserializeContent(content) {\n    return content.replaceAll(\" \", \"\\xa0\");\n  }\n  get contentDiv() {\n    return this.editorDiv;\n  }\n  getPDFRect() {\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    return this.getRect(padding, padding);\n  }\n  static async deserialize(data, parent, uiManager) {\n    let initialData = null;\n    if (data instanceof FreeTextAnnotationElement) {\n      const {\n        data: {\n          defaultAppearanceData: {\n            fontSize,\n            fontColor\n          },\n          rect,\n          rotation,\n          id,\n          popupRef,\n          richText,\n          contentsObj,\n          creationDate,\n          modificationDate\n        },\n        textContent,\n        textPosition,\n        parent: {\n          page: {\n            pageNumber\n          }\n        }\n      } = data;\n      if (!textContent || textContent.length === 0) {\n        return null;\n      }\n      initialData = data = {\n        annotationType: AnnotationEditorType.FREETEXT,\n        color: Array.from(fontColor),\n        fontSize,\n        value: textContent.join(\"\\n\"),\n        position: textPosition,\n        pageIndex: pageNumber - 1,\n        rect: rect.slice(0),\n        rotation,\n        annotationElementId: id,\n        id,\n        deleted: false,\n        popupRef,\n        comment: contentsObj?.str || null,\n        richText,\n        creationDate,\n        modificationDate\n      };\n    }\n    const editor = await super.deserialize(data, parent, uiManager);\n    editor.#fontSize = data.fontSize;\n    editor.color = Util.makeHexColor(...data.color);\n    editor.#content = FreeTextEditor.#deserializeContent(data.value);\n    editor._initialData = initialData;\n    if (data.comment) {\n      editor.setCommentData(data);\n    }\n    return editor;\n  }\n  serialize(isForCopying = false) {\n    if (this.isEmpty()) {\n      return null;\n    }\n    if (this.deleted) {\n      return this.serializeDeleted();\n    }\n    const color = AnnotationEditor._colorManager.convert(this.isAttachedToDOM ? getComputedStyle(this.editorDiv).color : this.color);\n    const serialized = Object.assign(super.serialize(isForCopying), {\n      color,\n      fontSize: this.#fontSize,\n      value: this.#serializeContent()\n    });\n    this.addComment(serialized);\n    if (isForCopying) {\n      serialized.isCopy = true;\n      return serialized;\n    }\n    if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n      return null;\n    }\n    serialized.id = this.annotationElementId;\n    return serialized;\n  }\n  #hasElementChanged(serialized) {\n    const {\n      value,\n      fontSize,\n      color,\n      pageIndex\n    } = this._initialData;\n    return this.hasEditedComment || this._hasBeenMoved || serialized.value !== value || serialized.fontSize !== fontSize || serialized.color.some((c, i) => c !== color[i]) || serialized.pageIndex !== pageIndex;\n  }\n  renderAnnotationElement(annotation) {\n    const content = super.renderAnnotationElement(annotation);\n    if (!content) {\n      return null;\n    }\n    const {\n      style\n    } = content;\n    style.fontSize = `calc(${this.#fontSize}px * var(--total-scale-factor))`;\n    style.color = this.color;\n    content.replaceChildren();\n    for (const line of this.#content.split(\"\\n\")) {\n      const div = document.createElement(\"div\");\n      div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n      content.append(div);\n    }\n    annotation.updateEdited({\n      rect: this.getPDFRect(),\n      popup: this._uiManager.hasCommentManager() || this.hasEditedComment ? this.comment : {\n        text: this.#content\n      }\n    });\n    return content;\n  }\n  resetAnnotationElement(annotation) {\n    super.resetAnnotationElement(annotation);\n    annotation.resetEdited();\n  }\n}\n\n;// ./src/display/editor/drawers/outline.js\n\n\n\n\n\nclass Outline {\n  static PRECISION = 1e-4;\n  toSVGPath() {\n    unreachable(\"Abstract method `toSVGPath` must be implemented.\");\n  }\n  get box() {\n    unreachable(\"Abstract getter `box` must be implemented.\");\n  }\n  serialize(_bbox, _rotation) {\n    unreachable(\"Abstract method `serialize` must be implemented.\");\n  }\n  static _rescale(src, tx, ty, sx, sy, dest) {\n    dest ||= new Float32Array(src.length);\n    for (let i = 0, ii = src.length; i < ii; i += 2) {\n      dest[i] = tx + src[i] * sx;\n      dest[i + 1] = ty + src[i + 1] * sy;\n    }\n    return dest;\n  }\n  static _rescaleAndSwap(src, tx, ty, sx, sy, dest) {\n    dest ||= new Float32Array(src.length);\n    for (let i = 0, ii = src.length; i < ii; i += 2) {\n      dest[i] = tx + src[i + 1] * sx;\n      dest[i + 1] = ty + src[i] * sy;\n    }\n    return dest;\n  }\n  static _translate(src, tx, ty, dest) {\n    dest ||= new Float32Array(src.length);\n    for (let i = 0, ii = src.length; i < ii; i += 2) {\n      dest[i] = tx + src[i];\n      dest[i + 1] = ty + src[i + 1];\n    }\n    return dest;\n  }\n  static svgRound(x) {\n    return Math.round(x * 10000);\n  }\n  static _normalizePoint(x, y, parentWidth, parentHeight, rotation) {\n    switch (rotation) {\n      case 90:\n        return [1 - y / parentWidth, x / parentHeight];\n      case 180:\n        return [1 - x / parentWidth, 1 - y / parentHeight];\n      case 270:\n        return [y / parentWidth, 1 - x / parentHeight];\n      default:\n        return [x / parentWidth, y / parentHeight];\n    }\n  }\n  static _normalizePagePoint(x, y, rotation) {\n    switch (rotation) {\n      case 90:\n        return [1 - y, x];\n      case 180:\n        return [1 - x, 1 - y];\n      case 270:\n        return [y, 1 - x];\n      default:\n        return [x, y];\n    }\n  }\n  static createBezierPoints(x1, y1, x2, y2, x3, y3) {\n    return [(x1 + 5 * x2) / 6, (y1 + 5 * y2) / 6, (5 * x2 + x3) / 6, (5 * y2 + y3) / 6, (x2 + x3) / 2, (y2 + y3) / 2];\n  }\n}\n\n;// ./src/display/editor/drawers/freedraw.js\n\n\n\n\n\n\n\nclass FreeDrawOutliner {\n  #box;\n  #bottom = [];\n  #innerMargin;\n  #isLTR;\n  #top = [];\n  #last = new Float32Array(18);\n  #lastX;\n  #lastY;\n  #min;\n  #min_dist;\n  #scaleFactor;\n  #thickness;\n  #points = [];\n  static #MIN_DIST = 8;\n  static #MIN_DIFF = 2;\n  static #MIN = FreeDrawOutliner.#MIN_DIST + FreeDrawOutliner.#MIN_DIFF;\n  constructor({\n    x,\n    y\n  }, box, scaleFactor, thickness, isLTR, innerMargin = 0) {\n    this.#box = box;\n    this.#thickness = thickness * scaleFactor;\n    this.#isLTR = isLTR;\n    this.#last.set([NaN, NaN, NaN, NaN, x, y], 6);\n    this.#innerMargin = innerMargin;\n    this.#min_dist = FreeDrawOutliner.#MIN_DIST * scaleFactor;\n    this.#min = FreeDrawOutliner.#MIN * scaleFactor;\n    this.#scaleFactor = scaleFactor;\n    this.#points.push(x, y);\n  }\n  isEmpty() {\n    return isNaN(this.#last[8]);\n  }\n  #getLastCoords() {\n    const lastTop = this.#last.subarray(4, 6);\n    const lastBottom = this.#last.subarray(16, 18);\n    const [x, y, width, height] = this.#box;\n    return [(this.#lastX + (lastTop[0] - lastBottom[0]) / 2 - x) / width, (this.#lastY + (lastTop[1] - lastBottom[1]) / 2 - y) / height, (this.#lastX + (lastBottom[0] - lastTop[0]) / 2 - x) / width, (this.#lastY + (lastBottom[1] - lastTop[1]) / 2 - y) / height];\n  }\n  add({\n    x,\n    y\n  }) {\n    this.#lastX = x;\n    this.#lastY = y;\n    const [layerX, layerY, layerWidth, layerHeight] = this.#box;\n    let [x1, y1, x2, y2] = this.#last.subarray(8, 12);\n    const diffX = x - x2;\n    const diffY = y - y2;\n    const d = Math.hypot(diffX, diffY);\n    if (d < this.#min) {\n      return false;\n    }\n    const diffD = d - this.#min_dist;\n    const K = diffD / d;\n    const shiftX = K * diffX;\n    const shiftY = K * diffY;\n    let x0 = x1;\n    let y0 = y1;\n    x1 = x2;\n    y1 = y2;\n    x2 += shiftX;\n    y2 += shiftY;\n    this.#points?.push(x, y);\n    const nX = -shiftY / diffD;\n    const nY = shiftX / diffD;\n    const thX = nX * this.#thickness;\n    const thY = nY * this.#thickness;\n    this.#last.set(this.#last.subarray(2, 8), 0);\n    this.#last.set([x2 + thX, y2 + thY], 4);\n    this.#last.set(this.#last.subarray(14, 18), 12);\n    this.#last.set([x2 - thX, y2 - thY], 16);\n    if (isNaN(this.#last[6])) {\n      if (this.#top.length === 0) {\n        this.#last.set([x1 + thX, y1 + thY], 2);\n        this.#top.push(NaN, NaN, NaN, NaN, (x1 + thX - layerX) / layerWidth, (y1 + thY - layerY) / layerHeight);\n        this.#last.set([x1 - thX, y1 - thY], 14);\n        this.#bottom.push(NaN, NaN, NaN, NaN, (x1 - thX - layerX) / layerWidth, (y1 - thY - layerY) / layerHeight);\n      }\n      this.#last.set([x0, y0, x1, y1, x2, y2], 6);\n      return !this.isEmpty();\n    }\n    this.#last.set([x0, y0, x1, y1, x2, y2], 6);\n    const angle = Math.abs(Math.atan2(y0 - y1, x0 - x1) - Math.atan2(shiftY, shiftX));\n    if (angle < Math.PI / 2) {\n      [x1, y1, x2, y2] = this.#last.subarray(2, 6);\n      this.#top.push(NaN, NaN, NaN, NaN, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);\n      [x1, y1, x0, y0] = this.#last.subarray(14, 18);\n      this.#bottom.push(NaN, NaN, NaN, NaN, ((x0 + x1) / 2 - layerX) / layerWidth, ((y0 + y1) / 2 - layerY) / layerHeight);\n      return true;\n    }\n    [x0, y0, x1, y1, x2, y2] = this.#last.subarray(0, 6);\n    this.#top.push(((x0 + 5 * x1) / 6 - layerX) / layerWidth, ((y0 + 5 * y1) / 6 - layerY) / layerHeight, ((5 * x1 + x2) / 6 - layerX) / layerWidth, ((5 * y1 + y2) / 6 - layerY) / layerHeight, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);\n    [x2, y2, x1, y1, x0, y0] = this.#last.subarray(12, 18);\n    this.#bottom.push(((x0 + 5 * x1) / 6 - layerX) / layerWidth, ((y0 + 5 * y1) / 6 - layerY) / layerHeight, ((5 * x1 + x2) / 6 - layerX) / layerWidth, ((5 * y1 + y2) / 6 - layerY) / layerHeight, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);\n    return true;\n  }\n  toSVGPath() {\n    if (this.isEmpty()) {\n      return \"\";\n    }\n    const top = this.#top;\n    const bottom = this.#bottom;\n    if (isNaN(this.#last[6]) && !this.isEmpty()) {\n      return this.#toSVGPathTwoPoints();\n    }\n    const buffer = [];\n    buffer.push(`M${top[4]} ${top[5]}`);\n    for (let i = 6; i < top.length; i += 6) {\n      if (isNaN(top[i])) {\n        buffer.push(`L${top[i + 4]} ${top[i + 5]}`);\n      } else {\n        buffer.push(`C${top[i]} ${top[i + 1]} ${top[i + 2]} ${top[i + 3]} ${top[i + 4]} ${top[i + 5]}`);\n      }\n    }\n    this.#toSVGPathEnd(buffer);\n    for (let i = bottom.length - 6; i >= 6; i -= 6) {\n      if (isNaN(bottom[i])) {\n        buffer.push(`L${bottom[i + 4]} ${bottom[i + 5]}`);\n      } else {\n        buffer.push(`C${bottom[i]} ${bottom[i + 1]} ${bottom[i + 2]} ${bottom[i + 3]} ${bottom[i + 4]} ${bottom[i + 5]}`);\n      }\n    }\n    this.#toSVGPathStart(buffer);\n    return buffer.join(\" \");\n  }\n  #toSVGPathTwoPoints() {\n    const [x, y, width, height] = this.#box;\n    const [lastTopX, lastTopY, lastBottomX, lastBottomY] = this.#getLastCoords();\n    return `M${(this.#last[2] - x) / width} ${(this.#last[3] - y) / height} L${(this.#last[4] - x) / width} ${(this.#last[5] - y) / height} L${lastTopX} ${lastTopY} L${lastBottomX} ${lastBottomY} L${(this.#last[16] - x) / width} ${(this.#last[17] - y) / height} L${(this.#last[14] - x) / width} ${(this.#last[15] - y) / height} Z`;\n  }\n  #toSVGPathStart(buffer) {\n    const bottom = this.#bottom;\n    buffer.push(`L${bottom[4]} ${bottom[5]} Z`);\n  }\n  #toSVGPathEnd(buffer) {\n    const [x, y, width, height] = this.#box;\n    const lastTop = this.#last.subarray(4, 6);\n    const lastBottom = this.#last.subarray(16, 18);\n    const [lastTopX, lastTopY, lastBottomX, lastBottomY] = this.#getLastCoords();\n    buffer.push(`L${(lastTop[0] - x) / width} ${(lastTop[1] - y) / height} L${lastTopX} ${lastTopY} L${lastBottomX} ${lastBottomY} L${(lastBottom[0] - x) / width} ${(lastBottom[1] - y) / height}`);\n  }\n  newFreeDrawOutline(outline, points, box, scaleFactor, innerMargin, isLTR) {\n    return new FreeDrawOutline(outline, points, box, scaleFactor, innerMargin, isLTR);\n  }\n  getOutlines() {\n    const top = this.#top;\n    const bottom = this.#bottom;\n    const last = this.#last;\n    const [layerX, layerY, layerWidth, layerHeight] = this.#box;\n    const points = new Float32Array((this.#points?.length ?? 0) + 2);\n    for (let i = 0, ii = points.length - 2; i < ii; i += 2) {\n      points[i] = (this.#points[i] - layerX) / layerWidth;\n      points[i + 1] = (this.#points[i + 1] - layerY) / layerHeight;\n    }\n    points[points.length - 2] = (this.#lastX - layerX) / layerWidth;\n    points[points.length - 1] = (this.#lastY - layerY) / layerHeight;\n    if (isNaN(last[6]) && !this.isEmpty()) {\n      return this.#getOutlineTwoPoints(points);\n    }\n    const outline = new Float32Array(this.#top.length + 24 + this.#bottom.length);\n    let N = top.length;\n    for (let i = 0; i < N; i += 2) {\n      if (isNaN(top[i])) {\n        outline[i] = outline[i + 1] = NaN;\n        continue;\n      }\n      outline[i] = top[i];\n      outline[i + 1] = top[i + 1];\n    }\n    N = this.#getOutlineEnd(outline, N);\n    for (let i = bottom.length - 6; i >= 6; i -= 6) {\n      for (let j = 0; j < 6; j += 2) {\n        if (isNaN(bottom[i + j])) {\n          outline[N] = outline[N + 1] = NaN;\n          N += 2;\n          continue;\n        }\n        outline[N] = bottom[i + j];\n        outline[N + 1] = bottom[i + j + 1];\n        N += 2;\n      }\n    }\n    this.#getOutlineStart(outline, N);\n    return this.newFreeDrawOutline(outline, points, this.#box, this.#scaleFactor, this.#innerMargin, this.#isLTR);\n  }\n  #getOutlineTwoPoints(points) {\n    const last = this.#last;\n    const [layerX, layerY, layerWidth, layerHeight] = this.#box;\n    const [lastTopX, lastTopY, lastBottomX, lastBottomY] = this.#getLastCoords();\n    const outline = new Float32Array(36);\n    outline.set([NaN, NaN, NaN, NaN, (last[2] - layerX) / layerWidth, (last[3] - layerY) / layerHeight, NaN, NaN, NaN, NaN, (last[4] - layerX) / layerWidth, (last[5] - layerY) / layerHeight, NaN, NaN, NaN, NaN, lastTopX, lastTopY, NaN, NaN, NaN, NaN, lastBottomX, lastBottomY, NaN, NaN, NaN, NaN, (last[16] - layerX) / layerWidth, (last[17] - layerY) / layerHeight, NaN, NaN, NaN, NaN, (last[14] - layerX) / layerWidth, (last[15] - layerY) / layerHeight], 0);\n    return this.newFreeDrawOutline(outline, points, this.#box, this.#scaleFactor, this.#innerMargin, this.#isLTR);\n  }\n  #getOutlineStart(outline, pos) {\n    const bottom = this.#bottom;\n    outline.set([NaN, NaN, NaN, NaN, bottom[4], bottom[5]], pos);\n    return pos += 6;\n  }\n  #getOutlineEnd(outline, pos) {\n    const lastTop = this.#last.subarray(4, 6);\n    const lastBottom = this.#last.subarray(16, 18);\n    const [layerX, layerY, layerWidth, layerHeight] = this.#box;\n    const [lastTopX, lastTopY, lastBottomX, lastBottomY] = this.#getLastCoords();\n    outline.set([NaN, NaN, NaN, NaN, (lastTop[0] - layerX) / layerWidth, (lastTop[1] - layerY) / layerHeight, NaN, NaN, NaN, NaN, lastTopX, lastTopY, NaN, NaN, NaN, NaN, lastBottomX, lastBottomY, NaN, NaN, NaN, NaN, (lastBottom[0] - layerX) / layerWidth, (lastBottom[1] - layerY) / layerHeight], pos);\n    return pos += 24;\n  }\n}\nclass FreeDrawOutline extends Outline {\n  #box;\n  #bbox = new Float32Array(4);\n  #innerMargin;\n  #isLTR;\n  #points;\n  #scaleFactor;\n  #outline;\n  constructor(outline, points, box, scaleFactor, innerMargin, isLTR) {\n    super();\n    this.#outline = outline;\n    this.#points = points;\n    this.#box = box;\n    this.#scaleFactor = scaleFactor;\n    this.#innerMargin = innerMargin;\n    this.#isLTR = isLTR;\n    this.firstPoint = [NaN, NaN];\n    this.lastPoint = [NaN, NaN];\n    this.#computeMinMax(isLTR);\n    const [x, y, width, height] = this.#bbox;\n    for (let i = 0, ii = outline.length; i < ii; i += 2) {\n      outline[i] = (outline[i] - x) / width;\n      outline[i + 1] = (outline[i + 1] - y) / height;\n    }\n    for (let i = 0, ii = points.length; i < ii; i += 2) {\n      points[i] = (points[i] - x) / width;\n      points[i + 1] = (points[i + 1] - y) / height;\n    }\n  }\n  toSVGPath() {\n    const buffer = [`M${this.#outline[4]} ${this.#outline[5]}`];\n    for (let i = 6, ii = this.#outline.length; i < ii; i += 6) {\n      if (isNaN(this.#outline[i])) {\n        buffer.push(`L${this.#outline[i + 4]} ${this.#outline[i + 5]}`);\n        continue;\n      }\n      buffer.push(`C${this.#outline[i]} ${this.#outline[i + 1]} ${this.#outline[i + 2]} ${this.#outline[i + 3]} ${this.#outline[i + 4]} ${this.#outline[i + 5]}`);\n    }\n    buffer.push(\"Z\");\n    return buffer.join(\" \");\n  }\n  serialize([blX, blY, trX, trY], rotation) {\n    const width = trX - blX;\n    const height = trY - blY;\n    let outline;\n    let points;\n    switch (rotation) {\n      case 0:\n        outline = Outline._rescale(this.#outline, blX, trY, width, -height);\n        points = Outline._rescale(this.#points, blX, trY, width, -height);\n        break;\n      case 90:\n        outline = Outline._rescaleAndSwap(this.#outline, blX, blY, width, height);\n        points = Outline._rescaleAndSwap(this.#points, blX, blY, width, height);\n        break;\n      case 180:\n        outline = Outline._rescale(this.#outline, trX, blY, -width, height);\n        points = Outline._rescale(this.#points, trX, blY, -width, height);\n        break;\n      case 270:\n        outline = Outline._rescaleAndSwap(this.#outline, trX, trY, -width, -height);\n        points = Outline._rescaleAndSwap(this.#points, trX, trY, -width, -height);\n        break;\n    }\n    return {\n      outline: Array.from(outline),\n      points: [Array.from(points)]\n    };\n  }\n  #computeMinMax(isLTR) {\n    const outline = this.#outline;\n    let lastX = outline[4];\n    let lastY = outline[5];\n    const minMax = [lastX, lastY, lastX, lastY];\n    let firstPointX = lastX;\n    let firstPointY = lastY;\n    let lastPointX = lastX;\n    let lastPointY = lastY;\n    const ltrCallback = isLTR ? Math.max : Math.min;\n    const bezierBbox = new Float32Array(4);\n    for (let i = 6, ii = outline.length; i < ii; i += 6) {\n      const x = outline[i + 4],\n        y = outline[i + 5];\n      if (isNaN(outline[i])) {\n        Util.pointBoundingBox(x, y, minMax);\n        if (firstPointY > y) {\n          firstPointX = x;\n          firstPointY = y;\n        } else if (firstPointY === y) {\n          firstPointX = ltrCallback(firstPointX, x);\n        }\n        if (lastPointY < y) {\n          lastPointX = x;\n          lastPointY = y;\n        } else if (lastPointY === y) {\n          lastPointX = ltrCallback(lastPointX, x);\n        }\n      } else {\n        bezierBbox[0] = bezierBbox[1] = Infinity;\n        bezierBbox[2] = bezierBbox[3] = -Infinity;\n        Util.bezierBoundingBox(lastX, lastY, ...outline.slice(i, i + 6), bezierBbox);\n        Util.rectBoundingBox(bezierBbox[0], bezierBbox[1], bezierBbox[2], bezierBbox[3], minMax);\n        if (firstPointY > bezierBbox[1]) {\n          firstPointX = bezierBbox[0];\n          firstPointY = bezierBbox[1];\n        } else if (firstPointY === bezierBbox[1]) {\n          firstPointX = ltrCallback(firstPointX, bezierBbox[0]);\n        }\n        if (lastPointY < bezierBbox[3]) {\n          lastPointX = bezierBbox[2];\n          lastPointY = bezierBbox[3];\n        } else if (lastPointY === bezierBbox[3]) {\n          lastPointX = ltrCallback(lastPointX, bezierBbox[2]);\n        }\n      }\n      lastX = x;\n      lastY = y;\n    }\n    const bbox = this.#bbox;\n    bbox[0] = minMax[0] - this.#innerMargin;\n    bbox[1] = minMax[1] - this.#innerMargin;\n    bbox[2] = minMax[2] - minMax[0] + 2 * this.#innerMargin;\n    bbox[3] = minMax[3] - minMax[1] + 2 * this.#innerMargin;\n    this.firstPoint = [firstPointX, firstPointY];\n    this.lastPoint = [lastPointX, lastPointY];\n  }\n  get box() {\n    return this.#bbox;\n  }\n  newOutliner(point, box, scaleFactor, thickness, isLTR, innerMargin = 0) {\n    return new FreeDrawOutliner(point, box, scaleFactor, thickness, isLTR, innerMargin);\n  }\n  getNewOutline(thickness, innerMargin) {\n    const [x, y, width, height] = this.#bbox;\n    const [layerX, layerY, layerWidth, layerHeight] = this.#box;\n    const sx = width * layerWidth;\n    const sy = height * layerHeight;\n    const tx = x * layerWidth + layerX;\n    const ty = y * layerHeight + layerY;\n    const outliner = this.newOutliner({\n      x: this.#points[0] * sx + tx,\n      y: this.#points[1] * sy + ty\n    }, this.#box, this.#scaleFactor, thickness, this.#isLTR, innerMargin ?? this.#innerMargin);\n    for (let i = 2; i < this.#points.length; i += 2) {\n      outliner.add({\n        x: this.#points[i] * sx + tx,\n        y: this.#points[i + 1] * sy + ty\n      });\n    }\n    return outliner.getOutlines();\n  }\n}\n\n;// ./src/display/editor/drawers/highlight.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass HighlightOutliner {\n  #box;\n  #firstPoint;\n  #lastPoint;\n  #verticalEdges = [];\n  #intervals = [];\n  constructor(boxes, borderWidth = 0, innerMargin = 0, isLTR = true) {\n    const minMax = [Infinity, Infinity, -Infinity, -Infinity];\n    const NUMBER_OF_DIGITS = 4;\n    const EPSILON = 10 ** -NUMBER_OF_DIGITS;\n    for (const {\n      x,\n      y,\n      width,\n      height\n    } of boxes) {\n      const x1 = Math.floor((x - borderWidth) / EPSILON) * EPSILON;\n      const x2 = Math.ceil((x + width + borderWidth) / EPSILON) * EPSILON;\n      const y1 = Math.floor((y - borderWidth) / EPSILON) * EPSILON;\n      const y2 = Math.ceil((y + height + borderWidth) / EPSILON) * EPSILON;\n      const left = [x1, y1, y2, true];\n      const right = [x2, y1, y2, false];\n      this.#verticalEdges.push(left, right);\n      Util.rectBoundingBox(x1, y1, x2, y2, minMax);\n    }\n    const bboxWidth = minMax[2] - minMax[0] + 2 * innerMargin;\n    const bboxHeight = minMax[3] - minMax[1] + 2 * innerMargin;\n    const shiftedMinX = minMax[0] - innerMargin;\n    const shiftedMinY = minMax[1] - innerMargin;\n    let firstPointX = isLTR ? -Infinity : Infinity;\n    let firstPointY = Infinity;\n    const lastEdge = this.#verticalEdges.at(isLTR ? -1 : -2);\n    const lastPoint = [lastEdge[0], lastEdge[2]];\n    for (const edge of this.#verticalEdges) {\n      const [x, y1, y2, left] = edge;\n      if (!left && isLTR) {\n        if (y1 < firstPointY) {\n          firstPointY = y1;\n          firstPointX = x;\n        } else if (y1 === firstPointY) {\n          firstPointX = Math.max(firstPointX, x);\n        }\n      } else if (left && !isLTR) {\n        if (y1 < firstPointY) {\n          firstPointY = y1;\n          firstPointX = x;\n        } else if (y1 === firstPointY) {\n          firstPointX = Math.min(firstPointX, x);\n        }\n      }\n      edge[0] = (x - shiftedMinX) / bboxWidth;\n      edge[1] = (y1 - shiftedMinY) / bboxHeight;\n      edge[2] = (y2 - shiftedMinY) / bboxHeight;\n    }\n    this.#box = new Float32Array([shiftedMinX, shiftedMinY, bboxWidth, bboxHeight]);\n    this.#firstPoint = [firstPointX, firstPointY];\n    this.#lastPoint = lastPoint;\n  }\n  getOutlines() {\n    this.#verticalEdges.sort((a, b) => a[0] - b[0] || a[1] - b[1] || a[2] - b[2]);\n    const outlineVerticalEdges = [];\n    for (const edge of this.#verticalEdges) {\n      if (edge[3]) {\n        outlineVerticalEdges.push(...this.#breakEdge(edge));\n        this.#insert(edge);\n      } else {\n        this.#remove(edge);\n        outlineVerticalEdges.push(...this.#breakEdge(edge));\n      }\n    }\n    return this.#getOutlines(outlineVerticalEdges);\n  }\n  #getOutlines(outlineVerticalEdges) {\n    const edges = [];\n    const allEdges = new Set();\n    for (const edge of outlineVerticalEdges) {\n      const [x, y1, y2] = edge;\n      edges.push([x, y1, edge], [x, y2, edge]);\n    }\n    edges.sort((a, b) => a[1] - b[1] || a[0] - b[0]);\n    for (let i = 0, ii = edges.length; i < ii; i += 2) {\n      const edge1 = edges[i][2];\n      const edge2 = edges[i + 1][2];\n      edge1.push(edge2);\n      edge2.push(edge1);\n      allEdges.add(edge1);\n      allEdges.add(edge2);\n    }\n    const outlines = [];\n    let outline;\n    while (allEdges.size > 0) {\n      const edge = allEdges.values().next().value;\n      let [x, y1, y2, edge1, edge2] = edge;\n      allEdges.delete(edge);\n      let lastPointX = x;\n      let lastPointY = y1;\n      outline = [x, y2];\n      outlines.push(outline);\n      while (true) {\n        let e;\n        if (allEdges.has(edge1)) {\n          e = edge1;\n        } else if (allEdges.has(edge2)) {\n          e = edge2;\n        } else {\n          break;\n        }\n        allEdges.delete(e);\n        [x, y1, y2, edge1, edge2] = e;\n        if (lastPointX !== x) {\n          outline.push(lastPointX, lastPointY, x, lastPointY === y1 ? y1 : y2);\n          lastPointX = x;\n        }\n        lastPointY = lastPointY === y1 ? y2 : y1;\n      }\n      outline.push(lastPointX, lastPointY);\n    }\n    return new HighlightOutline(outlines, this.#box, this.#firstPoint, this.#lastPoint);\n  }\n  #binarySearch(y) {\n    const array = this.#intervals;\n    let start = 0;\n    let end = array.length - 1;\n    while (start <= end) {\n      const middle = start + end >> 1;\n      const y1 = array[middle][0];\n      if (y1 === y) {\n        return middle;\n      }\n      if (y1 < y) {\n        start = middle + 1;\n      } else {\n        end = middle - 1;\n      }\n    }\n    return end + 1;\n  }\n  #insert([, y1, y2]) {\n    const index = this.#binarySearch(y1);\n    this.#intervals.splice(index, 0, [y1, y2]);\n  }\n  #remove([, y1, y2]) {\n    const index = this.#binarySearch(y1);\n    for (let i = index; i < this.#intervals.length; i++) {\n      const [start, end] = this.#intervals[i];\n      if (start !== y1) {\n        break;\n      }\n      if (start === y1 && end === y2) {\n        this.#intervals.splice(i, 1);\n        return;\n      }\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      const [start, end] = this.#intervals[i];\n      if (start !== y1) {\n        break;\n      }\n      if (start === y1 && end === y2) {\n        this.#intervals.splice(i, 1);\n        return;\n      }\n    }\n  }\n  #breakEdge(edge) {\n    const [x, y1, y2] = edge;\n    const results = [[x, y1, y2]];\n    const index = this.#binarySearch(y2);\n    for (let i = 0; i < index; i++) {\n      const [start, end] = this.#intervals[i];\n      for (let j = 0, jj = results.length; j < jj; j++) {\n        const [, y3, y4] = results[j];\n        if (end <= y3 || y4 <= start) {\n          continue;\n        }\n        if (y3 >= start) {\n          if (y4 > end) {\n            results[j][1] = end;\n          } else {\n            if (jj === 1) {\n              return [];\n            }\n            results.splice(j, 1);\n            j--;\n            jj--;\n          }\n          continue;\n        }\n        results[j][2] = start;\n        if (y4 > end) {\n          results.push([x, end, y4]);\n        }\n      }\n    }\n    return results;\n  }\n}\nclass HighlightOutline extends Outline {\n  #box;\n  #outlines;\n  constructor(outlines, box, firstPoint, lastPoint) {\n    super();\n    this.#outlines = outlines;\n    this.#box = box;\n    this.firstPoint = firstPoint;\n    this.lastPoint = lastPoint;\n  }\n  toSVGPath() {\n    const buffer = [];\n    for (const polygon of this.#outlines) {\n      let [prevX, prevY] = polygon;\n      buffer.push(`M${prevX} ${prevY}`);\n      for (let i = 2; i < polygon.length; i += 2) {\n        const x = polygon[i];\n        const y = polygon[i + 1];\n        if (x === prevX) {\n          buffer.push(`V${y}`);\n          prevY = y;\n        } else if (y === prevY) {\n          buffer.push(`H${x}`);\n          prevX = x;\n        }\n      }\n      buffer.push(\"Z\");\n    }\n    return buffer.join(\" \");\n  }\n  serialize([blX, blY, trX, trY], _rotation) {\n    const outlines = [];\n    const width = trX - blX;\n    const height = trY - blY;\n    for (const outline of this.#outlines) {\n      const points = new Array(outline.length);\n      for (let i = 0; i < outline.length; i += 2) {\n        points[i] = blX + outline[i] * width;\n        points[i + 1] = trY - outline[i + 1] * height;\n      }\n      outlines.push(points);\n    }\n    return outlines;\n  }\n  get box() {\n    return this.#box;\n  }\n  get classNamesForOutlining() {\n    return [\"highlightOutline\"];\n  }\n}\nclass FreeHighlightOutliner extends FreeDrawOutliner {\n  newFreeDrawOutline(outline, points, box, scaleFactor, innerMargin, isLTR) {\n    return new FreeHighlightOutline(outline, points, box, scaleFactor, innerMargin, isLTR);\n  }\n}\nclass FreeHighlightOutline extends FreeDrawOutline {\n  newOutliner(point, box, scaleFactor, thickness, isLTR, innerMargin = 0) {\n    return new FreeHighlightOutliner(point, box, scaleFactor, thickness, isLTR, innerMargin);\n  }\n}\n\n;// ./src/display/editor/highlight.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass HighlightEditor extends AnnotationEditor {\n  #anchorNode = null;\n  #anchorOffset = 0;\n  #boxes;\n  #clipPathId = null;\n  #colorPicker = null;\n  #focusOutlines = null;\n  #focusNode = null;\n  #focusOffset = 0;\n  #highlightDiv = null;\n  #highlightOutlines = null;\n  #id = null;\n  #isFreeHighlight = false;\n  #firstPoint = null;\n  #lastPoint = null;\n  #outlineId = null;\n  #text = \"\";\n  #thickness;\n  #methodOfCreation = \"\";\n  static _defaultColor = null;\n  static _defaultOpacity = 1;\n  static _defaultThickness = 12;\n  static _type = \"highlight\";\n  static _editorType = AnnotationEditorType.HIGHLIGHT;\n  static _freeHighlightId = -1;\n  static _freeHighlight = null;\n  static _freeHighlightClipId = \"\";\n  static get _keyboardManager() {\n    const proto = HighlightEditor.prototype;\n    return shadow(this, \"_keyboardManager\", new KeyboardManager([[[\"ArrowLeft\", \"mac+ArrowLeft\"], proto._moveCaret, {\n      args: [0]\n    }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto._moveCaret, {\n      args: [1]\n    }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto._moveCaret, {\n      args: [2]\n    }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto._moveCaret, {\n      args: [3]\n    }]]));\n  }\n  constructor(params) {\n    super({\n      ...params,\n      name: \"highlightEditor\"\n    });\n    this.color = params.color || HighlightEditor._defaultColor;\n    this.#thickness = params.thickness || HighlightEditor._defaultThickness;\n    this.opacity = params.opacity || HighlightEditor._defaultOpacity;\n    this.#boxes = params.boxes || null;\n    this.#methodOfCreation = params.methodOfCreation || \"\";\n    this.#text = params.text || \"\";\n    this._isDraggable = false;\n    this.defaultL10nId = \"pdfjs-editor-highlight-editor\";\n    if (params.highlightId > -1) {\n      this.#isFreeHighlight = true;\n      this.#createFreeOutlines(params);\n      this.#addToDrawLayer();\n    } else if (this.#boxes) {\n      this.#anchorNode = params.anchorNode;\n      this.#anchorOffset = params.anchorOffset;\n      this.#focusNode = params.focusNode;\n      this.#focusOffset = params.focusOffset;\n      this.#createOutlines();\n      this.#addToDrawLayer();\n      this.rotate(this.rotation);\n    }\n    if (!this.annotationElementId) {\n      this._uiManager.a11yAlert(\"pdfjs-editor-highlight-added-alert\");\n    }\n  }\n  get telemetryInitialData() {\n    return {\n      action: \"added\",\n      type: this.#isFreeHighlight ? \"free_highlight\" : \"highlight\",\n      color: this._uiManager.getNonHCMColorName(this.color),\n      thickness: this.#thickness,\n      methodOfCreation: this.#methodOfCreation\n    };\n  }\n  get telemetryFinalData() {\n    return {\n      type: \"highlight\",\n      color: this._uiManager.getNonHCMColorName(this.color)\n    };\n  }\n  static computeTelemetryFinalData(data) {\n    return {\n      numberOfColors: data.get(\"color\").size\n    };\n  }\n  #createOutlines() {\n    const outliner = new HighlightOutliner(this.#boxes, 0.001);\n    this.#highlightOutlines = outliner.getOutlines();\n    [this.x, this.y, this.width, this.height] = this.#highlightOutlines.box;\n    const outlinerForOutline = new HighlightOutliner(this.#boxes, 0.0025, 0.001, this._uiManager.direction === \"ltr\");\n    this.#focusOutlines = outlinerForOutline.getOutlines();\n    const {\n      firstPoint\n    } = this.#highlightOutlines;\n    this.#firstPoint = [(firstPoint[0] - this.x) / this.width, (firstPoint[1] - this.y) / this.height];\n    const {\n      lastPoint\n    } = this.#focusOutlines;\n    this.#lastPoint = [(lastPoint[0] - this.x) / this.width, (lastPoint[1] - this.y) / this.height];\n  }\n  #createFreeOutlines({\n    highlightOutlines,\n    highlightId,\n    clipPathId\n  }) {\n    this.#highlightOutlines = highlightOutlines;\n    const extraThickness = 1.5;\n    this.#focusOutlines = highlightOutlines.getNewOutline(this.#thickness / 2 + extraThickness, 0.0025);\n    if (highlightId >= 0) {\n      this.#id = highlightId;\n      this.#clipPathId = clipPathId;\n      this.parent.drawLayer.finalizeDraw(highlightId, {\n        bbox: highlightOutlines.box,\n        path: {\n          d: highlightOutlines.toSVGPath()\n        }\n      });\n      this.#outlineId = this.parent.drawLayer.drawOutline({\n        rootClass: {\n          highlightOutline: true,\n          free: true\n        },\n        bbox: this.#focusOutlines.box,\n        path: {\n          d: this.#focusOutlines.toSVGPath()\n        }\n      }, true);\n    } else if (this.parent) {\n      const angle = this.parent.viewport.rotation;\n      this.parent.drawLayer.updateProperties(this.#id, {\n        bbox: HighlightEditor.#rotateBbox(this.#highlightOutlines.box, (angle - this.rotation + 360) % 360),\n        path: {\n          d: highlightOutlines.toSVGPath()\n        }\n      });\n      this.parent.drawLayer.updateProperties(this.#outlineId, {\n        bbox: HighlightEditor.#rotateBbox(this.#focusOutlines.box, angle),\n        path: {\n          d: this.#focusOutlines.toSVGPath()\n        }\n      });\n    }\n    const [x, y, width, height] = highlightOutlines.box;\n    switch (this.rotation) {\n      case 0:\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        break;\n      case 90:\n        {\n          const [pageWidth, pageHeight] = this.parentDimensions;\n          this.x = y;\n          this.y = 1 - x;\n          this.width = width * pageHeight / pageWidth;\n          this.height = height * pageWidth / pageHeight;\n          break;\n        }\n      case 180:\n        this.x = 1 - x;\n        this.y = 1 - y;\n        this.width = width;\n        this.height = height;\n        break;\n      case 270:\n        {\n          const [pageWidth, pageHeight] = this.parentDimensions;\n          this.x = 1 - y;\n          this.y = x;\n          this.width = width * pageHeight / pageWidth;\n          this.height = height * pageWidth / pageHeight;\n          break;\n        }\n    }\n    const {\n      firstPoint\n    } = highlightOutlines;\n    this.#firstPoint = [(firstPoint[0] - x) / width, (firstPoint[1] - y) / height];\n    const {\n      lastPoint\n    } = this.#focusOutlines;\n    this.#lastPoint = [(lastPoint[0] - x) / width, (lastPoint[1] - y) / height];\n  }\n  static initialize(l10n, uiManager) {\n    AnnotationEditor.initialize(l10n, uiManager);\n    HighlightEditor._defaultColor ||= uiManager.highlightColors?.values().next().value || \"#fff066\";\n  }\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.HIGHLIGHT_COLOR:\n        HighlightEditor._defaultColor = value;\n        break;\n      case AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:\n        HighlightEditor._defaultThickness = value;\n        break;\n    }\n  }\n  translateInPage(x, y) {}\n  get toolbarPosition() {\n    return this.#lastPoint;\n  }\n  get commentButtonPosition() {\n    return this.#firstPoint;\n  }\n  updateParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.HIGHLIGHT_COLOR:\n        this.#updateColor(value);\n        break;\n      case AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:\n        this.#updateThickness(value);\n        break;\n    }\n  }\n  static get defaultPropertiesToUpdate() {\n    return [[AnnotationEditorParamsType.HIGHLIGHT_COLOR, HighlightEditor._defaultColor], [AnnotationEditorParamsType.HIGHLIGHT_THICKNESS, HighlightEditor._defaultThickness]];\n  }\n  get propertiesToUpdate() {\n    return [[AnnotationEditorParamsType.HIGHLIGHT_COLOR, this.color || HighlightEditor._defaultColor], [AnnotationEditorParamsType.HIGHLIGHT_THICKNESS, this.#thickness || HighlightEditor._defaultThickness], [AnnotationEditorParamsType.HIGHLIGHT_FREE, this.#isFreeHighlight]];\n  }\n  onUpdatedColor() {\n    this.parent?.drawLayer.updateProperties(this.#id, {\n      root: {\n        fill: this.color,\n        \"fill-opacity\": this.opacity\n      }\n    });\n    this.#colorPicker?.updateColor(this.color);\n    super.onUpdatedColor();\n  }\n  #updateColor(color) {\n    const setColorAndOpacity = (col, opa) => {\n      this.color = col;\n      this.opacity = opa;\n      this.onUpdatedColor();\n    };\n    const savedColor = this.color;\n    const savedOpacity = this.opacity;\n    this.addCommands({\n      cmd: setColorAndOpacity.bind(this, color, HighlightEditor._defaultOpacity),\n      undo: setColorAndOpacity.bind(this, savedColor, savedOpacity),\n      post: this._uiManager.updateUI.bind(this._uiManager, this),\n      mustExec: true,\n      type: AnnotationEditorParamsType.HIGHLIGHT_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n    this._reportTelemetry({\n      action: \"color_changed\",\n      color: this._uiManager.getNonHCMColorName(color)\n    }, true);\n  }\n  #updateThickness(thickness) {\n    const savedThickness = this.#thickness;\n    const setThickness = th => {\n      this.#thickness = th;\n      this.#changeThickness(th);\n    };\n    this.addCommands({\n      cmd: setThickness.bind(this, thickness),\n      undo: setThickness.bind(this, savedThickness),\n      post: this._uiManager.updateUI.bind(this._uiManager, this),\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_THICKNESS,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n    this._reportTelemetry({\n      action: \"thickness_changed\",\n      thickness\n    }, true);\n  }\n  get toolbarButtons() {\n    if (this._uiManager.highlightColors) {\n      const colorPicker = this.#colorPicker = new ColorPicker({\n        editor: this\n      });\n      return [[\"colorPicker\", colorPicker]];\n    }\n    return super.toolbarButtons;\n  }\n  disableEditing() {\n    super.disableEditing();\n    this.div.classList.toggle(\"disabled\", true);\n  }\n  enableEditing() {\n    super.enableEditing();\n    this.div.classList.toggle(\"disabled\", false);\n  }\n  fixAndSetPosition() {\n    return super.fixAndSetPosition(this.#getRotation());\n  }\n  getBaseTranslation() {\n    return [0, 0];\n  }\n  getRect(tx, ty) {\n    return super.getRect(tx, ty, this.#getRotation());\n  }\n  onceAdded(focus) {\n    if (!this.annotationElementId) {\n      this.parent.addUndoableEditor(this);\n    }\n    if (focus) {\n      this.div.focus();\n    }\n  }\n  remove() {\n    this.#cleanDrawLayer();\n    this._reportTelemetry({\n      action: \"deleted\"\n    });\n    super.remove();\n  }\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n    this.#addToDrawLayer();\n    if (!this.isAttachedToDOM) {\n      this.parent.add(this);\n    }\n  }\n  setParent(parent) {\n    let mustBeSelected = false;\n    if (this.parent && !parent) {\n      this.#cleanDrawLayer();\n    } else if (parent) {\n      this.#addToDrawLayer(parent);\n      mustBeSelected = !this.parent && this.div?.classList.contains(\"selectedEditor\");\n    }\n    super.setParent(parent);\n    this.show(this._isVisible);\n    if (mustBeSelected) {\n      this.select();\n    }\n  }\n  #changeThickness(thickness) {\n    if (!this.#isFreeHighlight) {\n      return;\n    }\n    this.#createFreeOutlines({\n      highlightOutlines: this.#highlightOutlines.getNewOutline(thickness / 2)\n    });\n    this.fixAndSetPosition();\n    this.setDims(this.width, this.height);\n  }\n  #cleanDrawLayer() {\n    if (this.#id === null || !this.parent) {\n      return;\n    }\n    this.parent.drawLayer.remove(this.#id);\n    this.#id = null;\n    this.parent.drawLayer.remove(this.#outlineId);\n    this.#outlineId = null;\n  }\n  #addToDrawLayer(parent = this.parent) {\n    if (this.#id !== null) {\n      return;\n    }\n    ({\n      id: this.#id,\n      clipPathId: this.#clipPathId\n    } = parent.drawLayer.draw({\n      bbox: this.#highlightOutlines.box,\n      root: {\n        viewBox: \"0 0 1 1\",\n        fill: this.color,\n        \"fill-opacity\": this.opacity\n      },\n      rootClass: {\n        highlight: true,\n        free: this.#isFreeHighlight\n      },\n      path: {\n        d: this.#highlightOutlines.toSVGPath()\n      }\n    }, false, true));\n    this.#outlineId = parent.drawLayer.drawOutline({\n      rootClass: {\n        highlightOutline: true,\n        free: this.#isFreeHighlight\n      },\n      bbox: this.#focusOutlines.box,\n      path: {\n        d: this.#focusOutlines.toSVGPath()\n      }\n    }, this.#isFreeHighlight);\n    if (this.#highlightDiv) {\n      this.#highlightDiv.style.clipPath = this.#clipPathId;\n    }\n  }\n  static #rotateBbox([x, y, width, height], angle) {\n    switch (angle) {\n      case 90:\n        return [1 - y - height, x, height, width];\n      case 180:\n        return [1 - x - width, 1 - y - height, width, height];\n      case 270:\n        return [y, 1 - x - width, height, width];\n    }\n    return [x, y, width, height];\n  }\n  rotate(angle) {\n    const {\n      drawLayer\n    } = this.parent;\n    let box;\n    if (this.#isFreeHighlight) {\n      angle = (angle - this.rotation + 360) % 360;\n      box = HighlightEditor.#rotateBbox(this.#highlightOutlines.box, angle);\n    } else {\n      box = HighlightEditor.#rotateBbox([this.x, this.y, this.width, this.height], angle);\n    }\n    drawLayer.updateProperties(this.#id, {\n      bbox: box,\n      root: {\n        \"data-main-rotation\": angle\n      }\n    });\n    drawLayer.updateProperties(this.#outlineId, {\n      bbox: HighlightEditor.#rotateBbox(this.#focusOutlines.box, angle),\n      root: {\n        \"data-main-rotation\": angle\n      }\n    });\n  }\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n    const div = super.render();\n    if (this.#text) {\n      div.setAttribute(\"aria-label\", this.#text);\n      div.setAttribute(\"role\", \"mark\");\n    }\n    if (this.#isFreeHighlight) {\n      div.classList.add(\"free\");\n    } else {\n      this.div.addEventListener(\"keydown\", this.#keydown.bind(this), {\n        signal: this._uiManager._signal\n      });\n    }\n    const highlightDiv = this.#highlightDiv = document.createElement(\"div\");\n    div.append(highlightDiv);\n    highlightDiv.setAttribute(\"aria-hidden\", \"true\");\n    highlightDiv.className = \"internal\";\n    highlightDiv.style.clipPath = this.#clipPathId;\n    this.setDims(this.width, this.height);\n    bindEvents(this, this.#highlightDiv, [\"pointerover\", \"pointerleave\"]);\n    this.enableEditing();\n    return div;\n  }\n  pointerover() {\n    if (!this.isSelected) {\n      this.parent?.drawLayer.updateProperties(this.#outlineId, {\n        rootClass: {\n          hovered: true\n        }\n      });\n    }\n  }\n  pointerleave() {\n    if (!this.isSelected) {\n      this.parent?.drawLayer.updateProperties(this.#outlineId, {\n        rootClass: {\n          hovered: false\n        }\n      });\n    }\n  }\n  #keydown(event) {\n    HighlightEditor._keyboardManager.exec(this, event);\n  }\n  _moveCaret(direction) {\n    this.parent.unselect(this);\n    switch (direction) {\n      case 0:\n      case 2:\n        this.#setCaret(true);\n        break;\n      case 1:\n      case 3:\n        this.#setCaret(false);\n        break;\n    }\n  }\n  #setCaret(start) {\n    if (!this.#anchorNode) {\n      return;\n    }\n    const selection = window.getSelection();\n    if (start) {\n      selection.setPosition(this.#anchorNode, this.#anchorOffset);\n    } else {\n      selection.setPosition(this.#focusNode, this.#focusOffset);\n    }\n  }\n  select() {\n    super.select();\n    if (!this.#outlineId) {\n      return;\n    }\n    this.parent?.drawLayer.updateProperties(this.#outlineId, {\n      rootClass: {\n        hovered: false,\n        selected: true\n      }\n    });\n  }\n  unselect() {\n    super.unselect();\n    if (!this.#outlineId) {\n      return;\n    }\n    this.parent?.drawLayer.updateProperties(this.#outlineId, {\n      rootClass: {\n        selected: false\n      }\n    });\n    if (!this.#isFreeHighlight) {\n      this.#setCaret(false);\n    }\n  }\n  get _mustFixPosition() {\n    return !this.#isFreeHighlight;\n  }\n  show(visible = this._isVisible) {\n    super.show(visible);\n    if (this.parent) {\n      this.parent.drawLayer.updateProperties(this.#id, {\n        rootClass: {\n          hidden: !visible\n        }\n      });\n      this.parent.drawLayer.updateProperties(this.#outlineId, {\n        rootClass: {\n          hidden: !visible\n        }\n      });\n    }\n  }\n  #getRotation() {\n    return this.#isFreeHighlight ? this.rotation : 0;\n  }\n  #serializeBoxes() {\n    if (this.#isFreeHighlight) {\n      return null;\n    }\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const [pageX, pageY] = this.pageTranslation;\n    const boxes = this.#boxes;\n    const quadPoints = new Float32Array(boxes.length * 8);\n    let i = 0;\n    for (const {\n      x,\n      y,\n      width,\n      height\n    } of boxes) {\n      const sx = x * pageWidth + pageX;\n      const sy = (1 - y) * pageHeight + pageY;\n      quadPoints[i] = quadPoints[i + 4] = sx;\n      quadPoints[i + 1] = quadPoints[i + 3] = sy;\n      quadPoints[i + 2] = quadPoints[i + 6] = sx + width * pageWidth;\n      quadPoints[i + 5] = quadPoints[i + 7] = sy - height * pageHeight;\n      i += 8;\n    }\n    return quadPoints;\n  }\n  #serializeOutlines(rect) {\n    return this.#highlightOutlines.serialize(rect, this.#getRotation());\n  }\n  static startHighlighting(parent, isLTR, {\n    target: textLayer,\n    x,\n    y\n  }) {\n    const {\n      x: layerX,\n      y: layerY,\n      width: parentWidth,\n      height: parentHeight\n    } = textLayer.getBoundingClientRect();\n    const ac = new AbortController();\n    const signal = parent.combinedSignal(ac);\n    const pointerUpCallback = e => {\n      ac.abort();\n      this.#endHighlight(parent, e);\n    };\n    window.addEventListener(\"blur\", pointerUpCallback, {\n      signal\n    });\n    window.addEventListener(\"pointerup\", pointerUpCallback, {\n      signal\n    });\n    window.addEventListener(\"pointerdown\", stopEvent, {\n      capture: true,\n      passive: false,\n      signal\n    });\n    window.addEventListener(\"contextmenu\", noContextMenu, {\n      signal\n    });\n    textLayer.addEventListener(\"pointermove\", this.#highlightMove.bind(this, parent), {\n      signal\n    });\n    this._freeHighlight = new FreeHighlightOutliner({\n      x,\n      y\n    }, [layerX, layerY, parentWidth, parentHeight], parent.scale, this._defaultThickness / 2, isLTR, 0.001);\n    ({\n      id: this._freeHighlightId,\n      clipPathId: this._freeHighlightClipId\n    } = parent.drawLayer.draw({\n      bbox: [0, 0, 1, 1],\n      root: {\n        viewBox: \"0 0 1 1\",\n        fill: this._defaultColor,\n        \"fill-opacity\": this._defaultOpacity\n      },\n      rootClass: {\n        highlight: true,\n        free: true\n      },\n      path: {\n        d: this._freeHighlight.toSVGPath()\n      }\n    }, true, true));\n  }\n  static #highlightMove(parent, event) {\n    if (this._freeHighlight.add(event)) {\n      parent.drawLayer.updateProperties(this._freeHighlightId, {\n        path: {\n          d: this._freeHighlight.toSVGPath()\n        }\n      });\n    }\n  }\n  static #endHighlight(parent, event) {\n    if (!this._freeHighlight.isEmpty()) {\n      parent.createAndAddNewEditor(event, false, {\n        highlightId: this._freeHighlightId,\n        highlightOutlines: this._freeHighlight.getOutlines(),\n        clipPathId: this._freeHighlightClipId,\n        methodOfCreation: \"main_toolbar\"\n      });\n    } else {\n      parent.drawLayer.remove(this._freeHighlightId);\n    }\n    this._freeHighlightId = -1;\n    this._freeHighlight = null;\n    this._freeHighlightClipId = \"\";\n  }\n  static async deserialize(data, parent, uiManager) {\n    let initialData = null;\n    if (data instanceof HighlightAnnotationElement) {\n      const {\n        data: {\n          quadPoints,\n          rect,\n          rotation,\n          id,\n          color,\n          opacity,\n          popupRef,\n          richText,\n          contentsObj,\n          creationDate,\n          modificationDate\n        },\n        parent: {\n          page: {\n            pageNumber\n          }\n        }\n      } = data;\n      initialData = data = {\n        annotationType: AnnotationEditorType.HIGHLIGHT,\n        color: Array.from(color),\n        opacity,\n        quadPoints,\n        boxes: null,\n        pageIndex: pageNumber - 1,\n        rect: rect.slice(0),\n        rotation,\n        annotationElementId: id,\n        id,\n        deleted: false,\n        popupRef,\n        richText,\n        comment: contentsObj?.str || null,\n        creationDate,\n        modificationDate\n      };\n    } else if (data instanceof InkAnnotationElement) {\n      const {\n        data: {\n          inkLists,\n          rect,\n          rotation,\n          id,\n          color,\n          borderStyle: {\n            rawWidth: thickness\n          },\n          popupRef,\n          richText,\n          contentsObj,\n          creationDate,\n          modificationDate\n        },\n        parent: {\n          page: {\n            pageNumber\n          }\n        }\n      } = data;\n      initialData = data = {\n        annotationType: AnnotationEditorType.HIGHLIGHT,\n        color: Array.from(color),\n        thickness,\n        inkLists,\n        boxes: null,\n        pageIndex: pageNumber - 1,\n        rect: rect.slice(0),\n        rotation,\n        annotationElementId: id,\n        id,\n        deleted: false,\n        popupRef,\n        richText,\n        comment: contentsObj?.str || null,\n        creationDate,\n        modificationDate\n      };\n    }\n    const {\n      color,\n      quadPoints,\n      inkLists,\n      opacity\n    } = data;\n    const editor = await super.deserialize(data, parent, uiManager);\n    editor.color = Util.makeHexColor(...color);\n    editor.opacity = opacity || 1;\n    if (inkLists) {\n      editor.#thickness = data.thickness;\n    }\n    editor._initialData = initialData;\n    if (data.comment) {\n      editor.setCommentData(data);\n    }\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const [pageX, pageY] = editor.pageTranslation;\n    if (quadPoints) {\n      const boxes = editor.#boxes = [];\n      for (let i = 0; i < quadPoints.length; i += 8) {\n        boxes.push({\n          x: (quadPoints[i] - pageX) / pageWidth,\n          y: 1 - (quadPoints[i + 1] - pageY) / pageHeight,\n          width: (quadPoints[i + 2] - quadPoints[i]) / pageWidth,\n          height: (quadPoints[i + 1] - quadPoints[i + 5]) / pageHeight\n        });\n      }\n      editor.#createOutlines();\n      editor.#addToDrawLayer();\n      editor.rotate(editor.rotation);\n    } else if (inkLists) {\n      editor.#isFreeHighlight = true;\n      const points = inkLists[0];\n      const point = {\n        x: points[0] - pageX,\n        y: pageHeight - (points[1] - pageY)\n      };\n      const outliner = new FreeHighlightOutliner(point, [0, 0, pageWidth, pageHeight], 1, editor.#thickness / 2, true, 0.001);\n      for (let i = 0, ii = points.length; i < ii; i += 2) {\n        point.x = points[i] - pageX;\n        point.y = pageHeight - (points[i + 1] - pageY);\n        outliner.add(point);\n      }\n      const {\n        id,\n        clipPathId\n      } = parent.drawLayer.draw({\n        bbox: [0, 0, 1, 1],\n        root: {\n          viewBox: \"0 0 1 1\",\n          fill: editor.color,\n          \"fill-opacity\": editor._defaultOpacity\n        },\n        rootClass: {\n          highlight: true,\n          free: true\n        },\n        path: {\n          d: outliner.toSVGPath()\n        }\n      }, true, true);\n      editor.#createFreeOutlines({\n        highlightOutlines: outliner.getOutlines(),\n        highlightId: id,\n        clipPathId\n      });\n      editor.#addToDrawLayer();\n      editor.rotate(editor.parentRotation);\n    }\n    return editor;\n  }\n  serialize(isForCopying = false) {\n    if (this.isEmpty() || isForCopying) {\n      return null;\n    }\n    if (this.deleted) {\n      return this.serializeDeleted();\n    }\n    const color = AnnotationEditor._colorManager.convert(this._uiManager.getNonHCMColor(this.color));\n    const serialized = super.serialize(isForCopying);\n    Object.assign(serialized, {\n      color,\n      opacity: this.opacity,\n      thickness: this.#thickness,\n      quadPoints: this.#serializeBoxes(),\n      outlines: this.#serializeOutlines(serialized.rect)\n    });\n    this.addComment(serialized);\n    if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n      return null;\n    }\n    serialized.id = this.annotationElementId;\n    return serialized;\n  }\n  #hasElementChanged(serialized) {\n    const {\n      color\n    } = this._initialData;\n    return this.hasEditedComment || serialized.color.some((c, i) => c !== color[i]);\n  }\n  renderAnnotationElement(annotation) {\n    if (this.deleted) {\n      annotation.hide();\n      return null;\n    }\n    annotation.updateEdited({\n      rect: this.getPDFRect(),\n      popup: this.comment\n    });\n    return null;\n  }\n  static canCreateNewEmptyEditor() {\n    return false;\n  }\n}\n\n;// ./src/display/editor/draw.js\n\n\n\n\n\n\n\n\n\n\n\nclass DrawingOptions {\n  #svgProperties = Object.create(null);\n  updateProperty(name, value) {\n    this[name] = value;\n    this.updateSVGProperty(name, value);\n  }\n  updateProperties(properties) {\n    if (!properties) {\n      return;\n    }\n    for (const [name, value] of Object.entries(properties)) {\n      if (!name.startsWith(\"_\")) {\n        this.updateProperty(name, value);\n      }\n    }\n  }\n  updateSVGProperty(name, value) {\n    this.#svgProperties[name] = value;\n  }\n  toSVGProperties() {\n    const root = this.#svgProperties;\n    this.#svgProperties = Object.create(null);\n    return {\n      root\n    };\n  }\n  reset() {\n    this.#svgProperties = Object.create(null);\n  }\n  updateAll(options = this) {\n    this.updateProperties(options);\n  }\n  clone() {\n    unreachable(\"Not implemented\");\n  }\n}\nclass DrawingEditor extends AnnotationEditor {\n  #drawOutlines = null;\n  #mustBeCommitted;\n  _colorPicker = null;\n  _drawId = null;\n  static _currentDrawId = -1;\n  static _currentParent = null;\n  static #currentDraw = null;\n  static #currentDrawingAC = null;\n  static #currentDrawingOptions = null;\n  static #currentPointerId = NaN;\n  static #currentPointerType = null;\n  static #currentPointerIds = null;\n  static #currentMoveTimestamp = NaN;\n  static _INNER_MARGIN = 3;\n  constructor(params) {\n    super(params);\n    this.#mustBeCommitted = params.mustBeCommitted || false;\n    this._addOutlines(params);\n  }\n  onUpdatedColor() {\n    this._colorPicker?.update(this.color);\n    super.onUpdatedColor();\n  }\n  _addOutlines(params) {\n    if (params.drawOutlines) {\n      this.#createDrawOutlines(params);\n      this.#addToDrawLayer();\n    }\n  }\n  #createDrawOutlines({\n    drawOutlines,\n    drawId,\n    drawingOptions\n  }) {\n    this.#drawOutlines = drawOutlines;\n    this._drawingOptions ||= drawingOptions;\n    if (!this.annotationElementId) {\n      this._uiManager.a11yAlert(`pdfjs-editor-${this.editorType}-added-alert`);\n    }\n    if (drawId >= 0) {\n      this._drawId = drawId;\n      this.parent.drawLayer.finalizeDraw(drawId, drawOutlines.defaultProperties);\n    } else {\n      this._drawId = this.#createDrawing(drawOutlines, this.parent);\n    }\n    this.#updateBbox(drawOutlines.box);\n  }\n  #createDrawing(drawOutlines, parent) {\n    const {\n      id\n    } = parent.drawLayer.draw(DrawingEditor._mergeSVGProperties(this._drawingOptions.toSVGProperties(), drawOutlines.defaultSVGProperties), false, false);\n    return id;\n  }\n  static _mergeSVGProperties(p1, p2) {\n    const p1Keys = new Set(Object.keys(p1));\n    for (const [key, value] of Object.entries(p2)) {\n      if (p1Keys.has(key)) {\n        Object.assign(p1[key], value);\n      } else {\n        p1[key] = value;\n      }\n    }\n    return p1;\n  }\n  static getDefaultDrawingOptions(_options) {\n    unreachable(\"Not implemented\");\n  }\n  static get typesMap() {\n    unreachable(\"Not implemented\");\n  }\n  static get isDrawer() {\n    return true;\n  }\n  static get supportMultipleDrawings() {\n    return false;\n  }\n  static updateDefaultParams(type, value) {\n    const propertyName = this.typesMap.get(type);\n    if (propertyName) {\n      this._defaultDrawingOptions.updateProperty(propertyName, value);\n    }\n    if (this._currentParent) {\n      DrawingEditor.#currentDraw.updateProperty(propertyName, value);\n      this._currentParent.drawLayer.updateProperties(this._currentDrawId, this._defaultDrawingOptions.toSVGProperties());\n    }\n  }\n  updateParams(type, value) {\n    const propertyName = this.constructor.typesMap.get(type);\n    if (propertyName) {\n      this._updateProperty(type, propertyName, value);\n    }\n  }\n  static get defaultPropertiesToUpdate() {\n    const properties = [];\n    const options = this._defaultDrawingOptions;\n    for (const [type, name] of this.typesMap) {\n      properties.push([type, options[name]]);\n    }\n    return properties;\n  }\n  get propertiesToUpdate() {\n    const properties = [];\n    const {\n      _drawingOptions\n    } = this;\n    for (const [type, name] of this.constructor.typesMap) {\n      properties.push([type, _drawingOptions[name]]);\n    }\n    return properties;\n  }\n  _updateProperty(type, name, value) {\n    const options = this._drawingOptions;\n    const savedValue = options[name];\n    const setter = val => {\n      options.updateProperty(name, val);\n      const bbox = this.#drawOutlines.updateProperty(name, val);\n      if (bbox) {\n        this.#updateBbox(bbox);\n      }\n      this.parent?.drawLayer.updateProperties(this._drawId, options.toSVGProperties());\n      if (type === this.colorType) {\n        this.onUpdatedColor();\n      }\n    };\n    this.addCommands({\n      cmd: setter.bind(this, value),\n      undo: setter.bind(this, savedValue),\n      post: this._uiManager.updateUI.bind(this._uiManager, this),\n      mustExec: true,\n      type,\n      overwriteIfSameType: true,\n      keepUndo: true\n    });\n  }\n  _onResizing() {\n    this.parent?.drawLayer.updateProperties(this._drawId, DrawingEditor._mergeSVGProperties(this.#drawOutlines.getPathResizingSVGProperties(this.#convertToDrawSpace()), {\n      bbox: this.#rotateBox()\n    }));\n  }\n  _onResized() {\n    this.parent?.drawLayer.updateProperties(this._drawId, DrawingEditor._mergeSVGProperties(this.#drawOutlines.getPathResizedSVGProperties(this.#convertToDrawSpace()), {\n      bbox: this.#rotateBox()\n    }));\n  }\n  _onTranslating(_x, _y) {\n    this.parent?.drawLayer.updateProperties(this._drawId, {\n      bbox: this.#rotateBox()\n    });\n  }\n  _onTranslated() {\n    this.parent?.drawLayer.updateProperties(this._drawId, DrawingEditor._mergeSVGProperties(this.#drawOutlines.getPathTranslatedSVGProperties(this.#convertToDrawSpace(), this.parentDimensions), {\n      bbox: this.#rotateBox()\n    }));\n  }\n  _onStartDragging() {\n    this.parent?.drawLayer.updateProperties(this._drawId, {\n      rootClass: {\n        moving: true\n      }\n    });\n  }\n  _onStopDragging() {\n    this.parent?.drawLayer.updateProperties(this._drawId, {\n      rootClass: {\n        moving: false\n      }\n    });\n  }\n  commit() {\n    super.commit();\n    this.disableEditMode();\n    this.disableEditing();\n  }\n  disableEditing() {\n    super.disableEditing();\n    this.div.classList.toggle(\"disabled\", true);\n  }\n  enableEditing() {\n    super.enableEditing();\n    this.div.classList.toggle(\"disabled\", false);\n  }\n  getBaseTranslation() {\n    return [0, 0];\n  }\n  get isResizable() {\n    return true;\n  }\n  onceAdded(focus) {\n    if (!this.annotationElementId) {\n      this.parent.addUndoableEditor(this);\n    }\n    this._isDraggable = true;\n    if (this.#mustBeCommitted) {\n      this.#mustBeCommitted = false;\n      this.commit();\n      this.parent.setSelected(this);\n      if (focus && this.isOnScreen) {\n        this.div.focus();\n      }\n    }\n  }\n  remove() {\n    this.#cleanDrawLayer();\n    super.remove();\n  }\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n    this.#addToDrawLayer();\n    this.#updateBbox(this.#drawOutlines.box);\n    if (!this.isAttachedToDOM) {\n      this.parent.add(this);\n    }\n  }\n  setParent(parent) {\n    let mustBeSelected = false;\n    if (this.parent && !parent) {\n      this._uiManager.removeShouldRescale(this);\n      this.#cleanDrawLayer();\n    } else if (parent) {\n      this._uiManager.addShouldRescale(this);\n      this.#addToDrawLayer(parent);\n      mustBeSelected = !this.parent && this.div?.classList.contains(\"selectedEditor\");\n    }\n    super.setParent(parent);\n    if (mustBeSelected) {\n      this.select();\n    }\n  }\n  #cleanDrawLayer() {\n    if (this._drawId === null || !this.parent) {\n      return;\n    }\n    this.parent.drawLayer.remove(this._drawId);\n    this._drawId = null;\n    this._drawingOptions.reset();\n  }\n  #addToDrawLayer(parent = this.parent) {\n    if (this._drawId !== null && this.parent === parent) {\n      return;\n    }\n    if (this._drawId !== null) {\n      this.parent.drawLayer.updateParent(this._drawId, parent.drawLayer);\n      return;\n    }\n    this._drawingOptions.updateAll();\n    this._drawId = this.#createDrawing(this.#drawOutlines, parent);\n  }\n  #convertToParentSpace([x, y, width, height]) {\n    const {\n      parentDimensions: [pW, pH],\n      rotation\n    } = this;\n    switch (rotation) {\n      case 90:\n        return [y, 1 - x, width * (pH / pW), height * (pW / pH)];\n      case 180:\n        return [1 - x, 1 - y, width, height];\n      case 270:\n        return [1 - y, x, width * (pH / pW), height * (pW / pH)];\n      default:\n        return [x, y, width, height];\n    }\n  }\n  #convertToDrawSpace() {\n    const {\n      x,\n      y,\n      width,\n      height,\n      parentDimensions: [pW, pH],\n      rotation\n    } = this;\n    switch (rotation) {\n      case 90:\n        return [1 - y, x, width * (pW / pH), height * (pH / pW)];\n      case 180:\n        return [1 - x, 1 - y, width, height];\n      case 270:\n        return [y, 1 - x, width * (pW / pH), height * (pH / pW)];\n      default:\n        return [x, y, width, height];\n    }\n  }\n  #updateBbox(bbox) {\n    [this.x, this.y, this.width, this.height] = this.#convertToParentSpace(bbox);\n    if (this.div) {\n      this.fixAndSetPosition();\n      this.setDims();\n    }\n    this._onResized();\n  }\n  #rotateBox() {\n    const {\n      x,\n      y,\n      width,\n      height,\n      rotation,\n      parentRotation,\n      parentDimensions: [pW, pH]\n    } = this;\n    switch ((rotation * 4 + parentRotation) / 90) {\n      case 1:\n        return [1 - y - height, x, height, width];\n      case 2:\n        return [1 - x - width, 1 - y - height, width, height];\n      case 3:\n        return [y, 1 - x - width, height, width];\n      case 4:\n        return [x, y - width * (pW / pH), height * (pH / pW), width * (pW / pH)];\n      case 5:\n        return [1 - y, x, width * (pW / pH), height * (pH / pW)];\n      case 6:\n        return [1 - x - height * (pH / pW), 1 - y, height * (pH / pW), width * (pW / pH)];\n      case 7:\n        return [y - width * (pW / pH), 1 - x - height * (pH / pW), width * (pW / pH), height * (pH / pW)];\n      case 8:\n        return [x - width, y - height, width, height];\n      case 9:\n        return [1 - y, x - width, height, width];\n      case 10:\n        return [1 - x, 1 - y, width, height];\n      case 11:\n        return [y - height, 1 - x, height, width];\n      case 12:\n        return [x - height * (pH / pW), y, height * (pH / pW), width * (pW / pH)];\n      case 13:\n        return [1 - y - width * (pW / pH), x - height * (pH / pW), width * (pW / pH), height * (pH / pW)];\n      case 14:\n        return [1 - x, 1 - y - width * (pW / pH), height * (pH / pW), width * (pW / pH)];\n      case 15:\n        return [y, 1 - x, width * (pW / pH), height * (pH / pW)];\n      default:\n        return [x, y, width, height];\n    }\n  }\n  rotate() {\n    if (!this.parent) {\n      return;\n    }\n    this.parent.drawLayer.updateProperties(this._drawId, DrawingEditor._mergeSVGProperties({\n      bbox: this.#rotateBox()\n    }, this.#drawOutlines.updateRotation((this.parentRotation - this.rotation + 360) % 360)));\n  }\n  onScaleChanging() {\n    if (!this.parent) {\n      return;\n    }\n    this.#updateBbox(this.#drawOutlines.updateParentDimensions(this.parentDimensions, this.parent.scale));\n  }\n  static onScaleChangingWhenDrawing() {}\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n    let baseX, baseY;\n    if (this._isCopy) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n    const div = super.render();\n    div.classList.add(\"draw\");\n    const drawDiv = document.createElement(\"div\");\n    div.append(drawDiv);\n    drawDiv.setAttribute(\"aria-hidden\", \"true\");\n    drawDiv.className = \"internal\";\n    this.setDims();\n    this._uiManager.addShouldRescale(this);\n    this.disableEditing();\n    if (this._isCopy) {\n      this._moveAfterPaste(baseX, baseY);\n    }\n    return div;\n  }\n  static createDrawerInstance(_x, _y, _parentWidth, _parentHeight, _rotation) {\n    unreachable(\"Not implemented\");\n  }\n  static startDrawing(parent, uiManager, _isLTR, event) {\n    const {\n      target,\n      offsetX: x,\n      offsetY: y,\n      pointerId,\n      pointerType\n    } = event;\n    if (DrawingEditor.#currentPointerType && DrawingEditor.#currentPointerType !== pointerType) {\n      return;\n    }\n    const {\n      viewport: {\n        rotation\n      }\n    } = parent;\n    const {\n      width: parentWidth,\n      height: parentHeight\n    } = target.getBoundingClientRect();\n    const ac = DrawingEditor.#currentDrawingAC = new AbortController();\n    const signal = parent.combinedSignal(ac);\n    DrawingEditor.#currentPointerId ||= pointerId;\n    DrawingEditor.#currentPointerType ??= pointerType;\n    window.addEventListener(\"pointerup\", e => {\n      if (DrawingEditor.#currentPointerId === e.pointerId) {\n        this._endDraw(e);\n      } else {\n        DrawingEditor.#currentPointerIds?.delete(e.pointerId);\n      }\n    }, {\n      signal\n    });\n    window.addEventListener(\"pointercancel\", e => {\n      if (DrawingEditor.#currentPointerId === e.pointerId) {\n        this._currentParent.endDrawingSession();\n      } else {\n        DrawingEditor.#currentPointerIds?.delete(e.pointerId);\n      }\n    }, {\n      signal\n    });\n    window.addEventListener(\"pointerdown\", e => {\n      if (DrawingEditor.#currentPointerType !== e.pointerType) {\n        return;\n      }\n      (DrawingEditor.#currentPointerIds ||= new Set()).add(e.pointerId);\n      if (DrawingEditor.#currentDraw.isCancellable()) {\n        DrawingEditor.#currentDraw.removeLastElement();\n        if (DrawingEditor.#currentDraw.isEmpty()) {\n          this._currentParent.endDrawingSession(true);\n        } else {\n          this._endDraw(null);\n        }\n      }\n    }, {\n      capture: true,\n      passive: false,\n      signal\n    });\n    window.addEventListener(\"contextmenu\", noContextMenu, {\n      signal\n    });\n    target.addEventListener(\"pointermove\", this._drawMove.bind(this), {\n      signal\n    });\n    target.addEventListener(\"touchmove\", e => {\n      if (e.timeStamp === DrawingEditor.#currentMoveTimestamp) {\n        stopEvent(e);\n      }\n    }, {\n      signal\n    });\n    parent.toggleDrawing();\n    uiManager._editorUndoBar?.hide();\n    if (DrawingEditor.#currentDraw) {\n      parent.drawLayer.updateProperties(this._currentDrawId, DrawingEditor.#currentDraw.startNew(x, y, parentWidth, parentHeight, rotation));\n      return;\n    }\n    uiManager.updateUIForDefaultProperties(this);\n    DrawingEditor.#currentDraw = this.createDrawerInstance(x, y, parentWidth, parentHeight, rotation);\n    DrawingEditor.#currentDrawingOptions = this.getDefaultDrawingOptions();\n    this._currentParent = parent;\n    ({\n      id: this._currentDrawId\n    } = parent.drawLayer.draw(this._mergeSVGProperties(DrawingEditor.#currentDrawingOptions.toSVGProperties(), DrawingEditor.#currentDraw.defaultSVGProperties), true, false));\n  }\n  static _drawMove(event) {\n    DrawingEditor.#currentMoveTimestamp = -1;\n    if (!DrawingEditor.#currentDraw) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY,\n      pointerId\n    } = event;\n    if (DrawingEditor.#currentPointerId !== pointerId) {\n      return;\n    }\n    if (DrawingEditor.#currentPointerIds?.size >= 1) {\n      this._endDraw(event);\n      return;\n    }\n    this._currentParent.drawLayer.updateProperties(this._currentDrawId, DrawingEditor.#currentDraw.add(offsetX, offsetY));\n    DrawingEditor.#currentMoveTimestamp = event.timeStamp;\n    stopEvent(event);\n  }\n  static _cleanup(all) {\n    if (all) {\n      this._currentDrawId = -1;\n      this._currentParent = null;\n      DrawingEditor.#currentDraw = null;\n      DrawingEditor.#currentDrawingOptions = null;\n      DrawingEditor.#currentPointerType = null;\n      DrawingEditor.#currentMoveTimestamp = NaN;\n    }\n    if (DrawingEditor.#currentDrawingAC) {\n      DrawingEditor.#currentDrawingAC.abort();\n      DrawingEditor.#currentDrawingAC = null;\n      DrawingEditor.#currentPointerId = NaN;\n      DrawingEditor.#currentPointerIds = null;\n    }\n  }\n  static _endDraw(event) {\n    const parent = this._currentParent;\n    if (!parent) {\n      return;\n    }\n    parent.toggleDrawing(true);\n    this._cleanup(false);\n    if (event?.target === parent.div) {\n      parent.drawLayer.updateProperties(this._currentDrawId, DrawingEditor.#currentDraw.end(event.offsetX, event.offsetY));\n    }\n    if (this.supportMultipleDrawings) {\n      const draw = DrawingEditor.#currentDraw;\n      const drawId = this._currentDrawId;\n      const lastElement = draw.getLastElement();\n      parent.addCommands({\n        cmd: () => {\n          parent.drawLayer.updateProperties(drawId, draw.setLastElement(lastElement));\n        },\n        undo: () => {\n          parent.drawLayer.updateProperties(drawId, draw.removeLastElement());\n        },\n        mustExec: false,\n        type: AnnotationEditorParamsType.DRAW_STEP\n      });\n      return;\n    }\n    this.endDrawing(false);\n  }\n  static endDrawing(isAborted) {\n    const parent = this._currentParent;\n    if (!parent) {\n      return null;\n    }\n    parent.toggleDrawing(true);\n    parent.cleanUndoStack(AnnotationEditorParamsType.DRAW_STEP);\n    if (!DrawingEditor.#currentDraw.isEmpty()) {\n      const {\n        pageDimensions: [pageWidth, pageHeight],\n        scale\n      } = parent;\n      const editor = parent.createAndAddNewEditor({\n        offsetX: 0,\n        offsetY: 0\n      }, false, {\n        drawId: this._currentDrawId,\n        drawOutlines: DrawingEditor.#currentDraw.getOutlines(pageWidth * scale, pageHeight * scale, scale, this._INNER_MARGIN),\n        drawingOptions: DrawingEditor.#currentDrawingOptions,\n        mustBeCommitted: !isAborted\n      });\n      this._cleanup(true);\n      return editor;\n    }\n    parent.drawLayer.remove(this._currentDrawId);\n    this._cleanup(true);\n    return null;\n  }\n  createDrawingOptions(_data) {}\n  static deserializeDraw(_pageX, _pageY, _pageWidth, _pageHeight, _innerWidth, _data) {\n    unreachable(\"Not implemented\");\n  }\n  static async deserialize(data, parent, uiManager) {\n    const {\n      rawDims: {\n        pageWidth,\n        pageHeight,\n        pageX,\n        pageY\n      }\n    } = parent.viewport;\n    const drawOutlines = this.deserializeDraw(pageX, pageY, pageWidth, pageHeight, this._INNER_MARGIN, data);\n    const editor = await super.deserialize(data, parent, uiManager);\n    editor.createDrawingOptions(data);\n    editor.#createDrawOutlines({\n      drawOutlines\n    });\n    editor.#addToDrawLayer();\n    editor.onScaleChanging();\n    editor.rotate();\n    return editor;\n  }\n  serializeDraw(isForCopying) {\n    const [pageX, pageY] = this.pageTranslation;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    return this.#drawOutlines.serialize([pageX, pageY, pageWidth, pageHeight], isForCopying);\n  }\n  renderAnnotationElement(annotation) {\n    annotation.updateEdited({\n      rect: this.getPDFRect()\n    });\n    return null;\n  }\n  static canCreateNewEmptyEditor() {\n    return false;\n  }\n}\n\n;// ./src/display/editor/drawers/inkdraw.js\n\n\n\n\n\n\n\n\n\nclass InkDrawOutliner {\n  #last = new Float64Array(6);\n  #line;\n  #lines;\n  #rotation;\n  #thickness;\n  #points;\n  #lastSVGPath = \"\";\n  #lastIndex = 0;\n  #outlines = new InkDrawOutline();\n  #parentWidth;\n  #parentHeight;\n  constructor(x, y, parentWidth, parentHeight, rotation, thickness) {\n    this.#parentWidth = parentWidth;\n    this.#parentHeight = parentHeight;\n    this.#rotation = rotation;\n    this.#thickness = thickness;\n    [x, y] = this.#normalizePoint(x, y);\n    const line = this.#line = [NaN, NaN, NaN, NaN, x, y];\n    this.#points = [x, y];\n    this.#lines = [{\n      line,\n      points: this.#points\n    }];\n    this.#last.set(line, 0);\n  }\n  updateProperty(name, value) {\n    if (name === \"stroke-width\") {\n      this.#thickness = value;\n    }\n  }\n  #normalizePoint(x, y) {\n    return Outline._normalizePoint(x, y, this.#parentWidth, this.#parentHeight, this.#rotation);\n  }\n  isEmpty() {\n    return !this.#lines || this.#lines.length === 0;\n  }\n  isCancellable() {\n    return this.#points.length <= 10;\n  }\n  add(x, y) {\n    [x, y] = this.#normalizePoint(x, y);\n    const [x1, y1, x2, y2] = this.#last.subarray(2, 6);\n    const diffX = x - x2;\n    const diffY = y - y2;\n    const d = Math.hypot(this.#parentWidth * diffX, this.#parentHeight * diffY);\n    if (d <= 2) {\n      return null;\n    }\n    this.#points.push(x, y);\n    if (isNaN(x1)) {\n      this.#last.set([x2, y2, x, y], 2);\n      this.#line.push(NaN, NaN, NaN, NaN, x, y);\n      return {\n        path: {\n          d: this.toSVGPath()\n        }\n      };\n    }\n    if (isNaN(this.#last[0])) {\n      this.#line.splice(6, 6);\n    }\n    this.#last.set([x1, y1, x2, y2, x, y], 0);\n    this.#line.push(...Outline.createBezierPoints(x1, y1, x2, y2, x, y));\n    return {\n      path: {\n        d: this.toSVGPath()\n      }\n    };\n  }\n  end(x, y) {\n    const change = this.add(x, y);\n    if (change) {\n      return change;\n    }\n    if (this.#points.length === 2) {\n      return {\n        path: {\n          d: this.toSVGPath()\n        }\n      };\n    }\n    return null;\n  }\n  startNew(x, y, parentWidth, parentHeight, rotation) {\n    this.#parentWidth = parentWidth;\n    this.#parentHeight = parentHeight;\n    this.#rotation = rotation;\n    [x, y] = this.#normalizePoint(x, y);\n    const line = this.#line = [NaN, NaN, NaN, NaN, x, y];\n    this.#points = [x, y];\n    const last = this.#lines.at(-1);\n    if (last) {\n      last.line = new Float32Array(last.line);\n      last.points = new Float32Array(last.points);\n    }\n    this.#lines.push({\n      line,\n      points: this.#points\n    });\n    this.#last.set(line, 0);\n    this.#lastIndex = 0;\n    this.toSVGPath();\n    return null;\n  }\n  getLastElement() {\n    return this.#lines.at(-1);\n  }\n  setLastElement(element) {\n    if (!this.#lines) {\n      return this.#outlines.setLastElement(element);\n    }\n    this.#lines.push(element);\n    this.#line = element.line;\n    this.#points = element.points;\n    this.#lastIndex = 0;\n    return {\n      path: {\n        d: this.toSVGPath()\n      }\n    };\n  }\n  removeLastElement() {\n    if (!this.#lines) {\n      return this.#outlines.removeLastElement();\n    }\n    this.#lines.pop();\n    this.#lastSVGPath = \"\";\n    for (let i = 0, ii = this.#lines.length; i < ii; i++) {\n      const {\n        line,\n        points\n      } = this.#lines[i];\n      this.#line = line;\n      this.#points = points;\n      this.#lastIndex = 0;\n      this.toSVGPath();\n    }\n    return {\n      path: {\n        d: this.#lastSVGPath\n      }\n    };\n  }\n  toSVGPath() {\n    const firstX = Outline.svgRound(this.#line[4]);\n    const firstY = Outline.svgRound(this.#line[5]);\n    if (this.#points.length === 2) {\n      this.#lastSVGPath = `${this.#lastSVGPath} M ${firstX} ${firstY} Z`;\n      return this.#lastSVGPath;\n    }\n    if (this.#points.length <= 6) {\n      const i = this.#lastSVGPath.lastIndexOf(\"M\");\n      this.#lastSVGPath = `${this.#lastSVGPath.slice(0, i)} M ${firstX} ${firstY}`;\n      this.#lastIndex = 6;\n    }\n    if (this.#points.length === 4) {\n      const secondX = Outline.svgRound(this.#line[10]);\n      const secondY = Outline.svgRound(this.#line[11]);\n      this.#lastSVGPath = `${this.#lastSVGPath} L ${secondX} ${secondY}`;\n      this.#lastIndex = 12;\n      return this.#lastSVGPath;\n    }\n    const buffer = [];\n    if (this.#lastIndex === 0) {\n      buffer.push(`M ${firstX} ${firstY}`);\n      this.#lastIndex = 6;\n    }\n    for (let i = this.#lastIndex, ii = this.#line.length; i < ii; i += 6) {\n      const [c1x, c1y, c2x, c2y, x, y] = this.#line.slice(i, i + 6).map(Outline.svgRound);\n      buffer.push(`C${c1x} ${c1y} ${c2x} ${c2y} ${x} ${y}`);\n    }\n    this.#lastSVGPath += buffer.join(\" \");\n    this.#lastIndex = this.#line.length;\n    return this.#lastSVGPath;\n  }\n  getOutlines(parentWidth, parentHeight, scale, innerMargin) {\n    const last = this.#lines.at(-1);\n    last.line = new Float32Array(last.line);\n    last.points = new Float32Array(last.points);\n    this.#outlines.build(this.#lines, parentWidth, parentHeight, scale, this.#rotation, this.#thickness, innerMargin);\n    this.#last = null;\n    this.#line = null;\n    this.#lines = null;\n    this.#lastSVGPath = null;\n    return this.#outlines;\n  }\n  get defaultSVGProperties() {\n    return {\n      root: {\n        viewBox: \"0 0 10000 10000\"\n      },\n      rootClass: {\n        draw: true\n      },\n      bbox: [0, 0, 1, 1]\n    };\n  }\n}\nclass InkDrawOutline extends Outline {\n  #bbox;\n  #currentRotation = 0;\n  #innerMargin;\n  #lines;\n  #parentWidth;\n  #parentHeight;\n  #parentScale;\n  #rotation;\n  #thickness;\n  build(lines, parentWidth, parentHeight, parentScale, rotation, thickness, innerMargin) {\n    this.#parentWidth = parentWidth;\n    this.#parentHeight = parentHeight;\n    this.#parentScale = parentScale;\n    this.#rotation = rotation;\n    this.#thickness = thickness;\n    this.#innerMargin = innerMargin ?? 0;\n    this.#lines = lines;\n    this.#computeBbox();\n  }\n  get thickness() {\n    return this.#thickness;\n  }\n  setLastElement(element) {\n    this.#lines.push(element);\n    return {\n      path: {\n        d: this.toSVGPath()\n      }\n    };\n  }\n  removeLastElement() {\n    this.#lines.pop();\n    return {\n      path: {\n        d: this.toSVGPath()\n      }\n    };\n  }\n  toSVGPath() {\n    const buffer = [];\n    for (const {\n      line\n    } of this.#lines) {\n      buffer.push(`M${Outline.svgRound(line[4])} ${Outline.svgRound(line[5])}`);\n      if (line.length === 6) {\n        buffer.push(\"Z\");\n        continue;\n      }\n      if (line.length === 12 && isNaN(line[6])) {\n        buffer.push(`L${Outline.svgRound(line[10])} ${Outline.svgRound(line[11])}`);\n        continue;\n      }\n      for (let i = 6, ii = line.length; i < ii; i += 6) {\n        const [c1x, c1y, c2x, c2y, x, y] = line.subarray(i, i + 6).map(Outline.svgRound);\n        buffer.push(`C${c1x} ${c1y} ${c2x} ${c2y} ${x} ${y}`);\n      }\n    }\n    return buffer.join(\"\");\n  }\n  serialize([pageX, pageY, pageWidth, pageHeight], isForCopying) {\n    const serializedLines = [];\n    const serializedPoints = [];\n    const [x, y, width, height] = this.#getBBoxWithNoMargin();\n    let tx, ty, sx, sy, x1, y1, x2, y2, rescaleFn;\n    switch (this.#rotation) {\n      case 0:\n        rescaleFn = Outline._rescale;\n        tx = pageX;\n        ty = pageY + pageHeight;\n        sx = pageWidth;\n        sy = -pageHeight;\n        x1 = pageX + x * pageWidth;\n        y1 = pageY + (1 - y - height) * pageHeight;\n        x2 = pageX + (x + width) * pageWidth;\n        y2 = pageY + (1 - y) * pageHeight;\n        break;\n      case 90:\n        rescaleFn = Outline._rescaleAndSwap;\n        tx = pageX;\n        ty = pageY;\n        sx = pageWidth;\n        sy = pageHeight;\n        x1 = pageX + y * pageWidth;\n        y1 = pageY + x * pageHeight;\n        x2 = pageX + (y + height) * pageWidth;\n        y2 = pageY + (x + width) * pageHeight;\n        break;\n      case 180:\n        rescaleFn = Outline._rescale;\n        tx = pageX + pageWidth;\n        ty = pageY;\n        sx = -pageWidth;\n        sy = pageHeight;\n        x1 = pageX + (1 - x - width) * pageWidth;\n        y1 = pageY + y * pageHeight;\n        x2 = pageX + (1 - x) * pageWidth;\n        y2 = pageY + (y + height) * pageHeight;\n        break;\n      case 270:\n        rescaleFn = Outline._rescaleAndSwap;\n        tx = pageX + pageWidth;\n        ty = pageY + pageHeight;\n        sx = -pageWidth;\n        sy = -pageHeight;\n        x1 = pageX + (1 - y - height) * pageWidth;\n        y1 = pageY + (1 - x - width) * pageHeight;\n        x2 = pageX + (1 - y) * pageWidth;\n        y2 = pageY + (1 - x) * pageHeight;\n        break;\n    }\n    for (const {\n      line,\n      points\n    } of this.#lines) {\n      serializedLines.push(rescaleFn(line, tx, ty, sx, sy, isForCopying ? new Array(line.length) : null));\n      serializedPoints.push(rescaleFn(points, tx, ty, sx, sy, isForCopying ? new Array(points.length) : null));\n    }\n    return {\n      lines: serializedLines,\n      points: serializedPoints,\n      rect: [x1, y1, x2, y2]\n    };\n  }\n  static deserialize(pageX, pageY, pageWidth, pageHeight, innerMargin, {\n    paths: {\n      lines,\n      points\n    },\n    rotation,\n    thickness\n  }) {\n    const newLines = [];\n    let tx, ty, sx, sy, rescaleFn;\n    switch (rotation) {\n      case 0:\n        rescaleFn = Outline._rescale;\n        tx = -pageX / pageWidth;\n        ty = pageY / pageHeight + 1;\n        sx = 1 / pageWidth;\n        sy = -1 / pageHeight;\n        break;\n      case 90:\n        rescaleFn = Outline._rescaleAndSwap;\n        tx = -pageY / pageHeight;\n        ty = -pageX / pageWidth;\n        sx = 1 / pageHeight;\n        sy = 1 / pageWidth;\n        break;\n      case 180:\n        rescaleFn = Outline._rescale;\n        tx = pageX / pageWidth + 1;\n        ty = -pageY / pageHeight;\n        sx = -1 / pageWidth;\n        sy = 1 / pageHeight;\n        break;\n      case 270:\n        rescaleFn = Outline._rescaleAndSwap;\n        tx = pageY / pageHeight + 1;\n        ty = pageX / pageWidth + 1;\n        sx = -1 / pageHeight;\n        sy = -1 / pageWidth;\n        break;\n    }\n    if (!lines) {\n      lines = [];\n      for (const point of points) {\n        const len = point.length;\n        if (len === 2) {\n          lines.push(new Float32Array([NaN, NaN, NaN, NaN, point[0], point[1]]));\n          continue;\n        }\n        if (len === 4) {\n          lines.push(new Float32Array([NaN, NaN, NaN, NaN, point[0], point[1], NaN, NaN, NaN, NaN, point[2], point[3]]));\n          continue;\n        }\n        const line = new Float32Array(3 * (len - 2));\n        lines.push(line);\n        let [x1, y1, x2, y2] = point.subarray(0, 4);\n        line.set([NaN, NaN, NaN, NaN, x1, y1], 0);\n        for (let i = 4; i < len; i += 2) {\n          const x = point[i];\n          const y = point[i + 1];\n          line.set(Outline.createBezierPoints(x1, y1, x2, y2, x, y), (i - 2) * 3);\n          [x1, y1, x2, y2] = [x2, y2, x, y];\n        }\n      }\n    }\n    for (let i = 0, ii = lines.length; i < ii; i++) {\n      newLines.push({\n        line: rescaleFn(lines[i].map(x => x ?? NaN), tx, ty, sx, sy),\n        points: rescaleFn(points[i].map(x => x ?? NaN), tx, ty, sx, sy)\n      });\n    }\n    const outlines = new this.prototype.constructor();\n    outlines.build(newLines, pageWidth, pageHeight, 1, rotation, thickness, innerMargin);\n    return outlines;\n  }\n  #getMarginComponents(thickness = this.#thickness) {\n    const margin = this.#innerMargin + thickness / 2 * this.#parentScale;\n    return this.#rotation % 180 === 0 ? [margin / this.#parentWidth, margin / this.#parentHeight] : [margin / this.#parentHeight, margin / this.#parentWidth];\n  }\n  #getBBoxWithNoMargin() {\n    const [x, y, width, height] = this.#bbox;\n    const [marginX, marginY] = this.#getMarginComponents(0);\n    return [x + marginX, y + marginY, width - 2 * marginX, height - 2 * marginY];\n  }\n  #computeBbox() {\n    const bbox = this.#bbox = new Float32Array([Infinity, Infinity, -Infinity, -Infinity]);\n    for (const {\n      line\n    } of this.#lines) {\n      if (line.length <= 12) {\n        for (let i = 4, ii = line.length; i < ii; i += 6) {\n          Util.pointBoundingBox(line[i], line[i + 1], bbox);\n        }\n        continue;\n      }\n      let lastX = line[4],\n        lastY = line[5];\n      for (let i = 6, ii = line.length; i < ii; i += 6) {\n        const [c1x, c1y, c2x, c2y, x, y] = line.subarray(i, i + 6);\n        Util.bezierBoundingBox(lastX, lastY, c1x, c1y, c2x, c2y, x, y, bbox);\n        lastX = x;\n        lastY = y;\n      }\n    }\n    const [marginX, marginY] = this.#getMarginComponents();\n    bbox[0] = MathClamp(bbox[0] - marginX, 0, 1);\n    bbox[1] = MathClamp(bbox[1] - marginY, 0, 1);\n    bbox[2] = MathClamp(bbox[2] + marginX, 0, 1);\n    bbox[3] = MathClamp(bbox[3] + marginY, 0, 1);\n    bbox[2] -= bbox[0];\n    bbox[3] -= bbox[1];\n  }\n  get box() {\n    return this.#bbox;\n  }\n  updateProperty(name, value) {\n    if (name === \"stroke-width\") {\n      return this.#updateThickness(value);\n    }\n    return null;\n  }\n  #updateThickness(thickness) {\n    const [oldMarginX, oldMarginY] = this.#getMarginComponents();\n    this.#thickness = thickness;\n    const [newMarginX, newMarginY] = this.#getMarginComponents();\n    const [diffMarginX, diffMarginY] = [newMarginX - oldMarginX, newMarginY - oldMarginY];\n    const bbox = this.#bbox;\n    bbox[0] -= diffMarginX;\n    bbox[1] -= diffMarginY;\n    bbox[2] += 2 * diffMarginX;\n    bbox[3] += 2 * diffMarginY;\n    return bbox;\n  }\n  updateParentDimensions([width, height], scale) {\n    const [oldMarginX, oldMarginY] = this.#getMarginComponents();\n    this.#parentWidth = width;\n    this.#parentHeight = height;\n    this.#parentScale = scale;\n    const [newMarginX, newMarginY] = this.#getMarginComponents();\n    const diffMarginX = newMarginX - oldMarginX;\n    const diffMarginY = newMarginY - oldMarginY;\n    const bbox = this.#bbox;\n    bbox[0] -= diffMarginX;\n    bbox[1] -= diffMarginY;\n    bbox[2] += 2 * diffMarginX;\n    bbox[3] += 2 * diffMarginY;\n    return bbox;\n  }\n  updateRotation(rotation) {\n    this.#currentRotation = rotation;\n    return {\n      path: {\n        transform: this.rotationTransform\n      }\n    };\n  }\n  get viewBox() {\n    return this.#bbox.map(Outline.svgRound).join(\" \");\n  }\n  get defaultProperties() {\n    const [x, y] = this.#bbox;\n    return {\n      root: {\n        viewBox: this.viewBox\n      },\n      path: {\n        \"transform-origin\": `${Outline.svgRound(x)} ${Outline.svgRound(y)}`\n      }\n    };\n  }\n  get rotationTransform() {\n    const [,, width, height] = this.#bbox;\n    let a = 0,\n      b = 0,\n      c = 0,\n      d = 0,\n      e = 0,\n      f = 0;\n    switch (this.#currentRotation) {\n      case 90:\n        b = height / width;\n        c = -width / height;\n        e = width;\n        break;\n      case 180:\n        a = -1;\n        d = -1;\n        e = width;\n        f = height;\n        break;\n      case 270:\n        b = -height / width;\n        c = width / height;\n        f = height;\n        break;\n      default:\n        return \"\";\n    }\n    return `matrix(${a} ${b} ${c} ${d} ${Outline.svgRound(e)} ${Outline.svgRound(f)})`;\n  }\n  getPathResizingSVGProperties([newX, newY, newWidth, newHeight]) {\n    const [marginX, marginY] = this.#getMarginComponents();\n    const [x, y, width, height] = this.#bbox;\n    if (Math.abs(width - marginX) <= Outline.PRECISION || Math.abs(height - marginY) <= Outline.PRECISION) {\n      const tx = newX + newWidth / 2 - (x + width / 2);\n      const ty = newY + newHeight / 2 - (y + height / 2);\n      return {\n        path: {\n          \"transform-origin\": `${Outline.svgRound(newX)} ${Outline.svgRound(newY)}`,\n          transform: `${this.rotationTransform} translate(${tx} ${ty})`\n        }\n      };\n    }\n    const s1x = (newWidth - 2 * marginX) / (width - 2 * marginX);\n    const s1y = (newHeight - 2 * marginY) / (height - 2 * marginY);\n    const s2x = width / newWidth;\n    const s2y = height / newHeight;\n    return {\n      path: {\n        \"transform-origin\": `${Outline.svgRound(x)} ${Outline.svgRound(y)}`,\n        transform: `${this.rotationTransform} scale(${s2x} ${s2y}) ` + `translate(${Outline.svgRound(marginX)} ${Outline.svgRound(marginY)}) scale(${s1x} ${s1y}) ` + `translate(${Outline.svgRound(-marginX)} ${Outline.svgRound(-marginY)})`\n      }\n    };\n  }\n  getPathResizedSVGProperties([newX, newY, newWidth, newHeight]) {\n    const [marginX, marginY] = this.#getMarginComponents();\n    const bbox = this.#bbox;\n    const [x, y, width, height] = bbox;\n    bbox[0] = newX;\n    bbox[1] = newY;\n    bbox[2] = newWidth;\n    bbox[3] = newHeight;\n    if (Math.abs(width - marginX) <= Outline.PRECISION || Math.abs(height - marginY) <= Outline.PRECISION) {\n      const tx = newX + newWidth / 2 - (x + width / 2);\n      const ty = newY + newHeight / 2 - (y + height / 2);\n      for (const {\n        line,\n        points\n      } of this.#lines) {\n        Outline._translate(line, tx, ty, line);\n        Outline._translate(points, tx, ty, points);\n      }\n      return {\n        root: {\n          viewBox: this.viewBox\n        },\n        path: {\n          \"transform-origin\": `${Outline.svgRound(newX)} ${Outline.svgRound(newY)}`,\n          transform: this.rotationTransform || null,\n          d: this.toSVGPath()\n        }\n      };\n    }\n    const s1x = (newWidth - 2 * marginX) / (width - 2 * marginX);\n    const s1y = (newHeight - 2 * marginY) / (height - 2 * marginY);\n    const tx = -s1x * (x + marginX) + newX + marginX;\n    const ty = -s1y * (y + marginY) + newY + marginY;\n    if (s1x !== 1 || s1y !== 1 || tx !== 0 || ty !== 0) {\n      for (const {\n        line,\n        points\n      } of this.#lines) {\n        Outline._rescale(line, tx, ty, s1x, s1y, line);\n        Outline._rescale(points, tx, ty, s1x, s1y, points);\n      }\n    }\n    return {\n      root: {\n        viewBox: this.viewBox\n      },\n      path: {\n        \"transform-origin\": `${Outline.svgRound(newX)} ${Outline.svgRound(newY)}`,\n        transform: this.rotationTransform || null,\n        d: this.toSVGPath()\n      }\n    };\n  }\n  getPathTranslatedSVGProperties([newX, newY], parentDimensions) {\n    const [newParentWidth, newParentHeight] = parentDimensions;\n    const bbox = this.#bbox;\n    const tx = newX - bbox[0];\n    const ty = newY - bbox[1];\n    if (this.#parentWidth === newParentWidth && this.#parentHeight === newParentHeight) {\n      for (const {\n        line,\n        points\n      } of this.#lines) {\n        Outline._translate(line, tx, ty, line);\n        Outline._translate(points, tx, ty, points);\n      }\n    } else {\n      const sx = this.#parentWidth / newParentWidth;\n      const sy = this.#parentHeight / newParentHeight;\n      this.#parentWidth = newParentWidth;\n      this.#parentHeight = newParentHeight;\n      for (const {\n        line,\n        points\n      } of this.#lines) {\n        Outline._rescale(line, tx, ty, sx, sy, line);\n        Outline._rescale(points, tx, ty, sx, sy, points);\n      }\n      bbox[2] *= sx;\n      bbox[3] *= sy;\n    }\n    bbox[0] = newX;\n    bbox[1] = newY;\n    return {\n      root: {\n        viewBox: this.viewBox\n      },\n      path: {\n        d: this.toSVGPath(),\n        \"transform-origin\": `${Outline.svgRound(newX)} ${Outline.svgRound(newY)}`\n      }\n    };\n  }\n  get defaultSVGProperties() {\n    const bbox = this.#bbox;\n    return {\n      root: {\n        viewBox: this.viewBox\n      },\n      rootClass: {\n        draw: true\n      },\n      path: {\n        d: this.toSVGPath(),\n        \"transform-origin\": `${Outline.svgRound(bbox[0])} ${Outline.svgRound(bbox[1])}`,\n        transform: this.rotationTransform || null\n      },\n      bbox\n    };\n  }\n}\n\n;// ./src/display/editor/ink.js\n\n\n\n\n\n\n\n\nclass InkDrawingOptions extends DrawingOptions {\n  constructor(viewerParameters) {\n    super();\n    this._viewParameters = viewerParameters;\n    super.updateProperties({\n      fill: \"none\",\n      stroke: AnnotationEditor._defaultLineColor,\n      \"stroke-opacity\": 1,\n      \"stroke-width\": 1,\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"stroke-miterlimit\": 10\n    });\n  }\n  updateSVGProperty(name, value) {\n    if (name === \"stroke-width\") {\n      value ??= this[\"stroke-width\"];\n      value *= this._viewParameters.realScale;\n    }\n    super.updateSVGProperty(name, value);\n  }\n  clone() {\n    const clone = new InkDrawingOptions(this._viewParameters);\n    clone.updateAll(this);\n    return clone;\n  }\n}\nclass InkEditor extends DrawingEditor {\n  static _type = \"ink\";\n  static _editorType = AnnotationEditorType.INK;\n  static _defaultDrawingOptions = null;\n  constructor(params) {\n    super({\n      ...params,\n      name: \"inkEditor\"\n    });\n    this._willKeepAspectRatio = true;\n    this.defaultL10nId = \"pdfjs-editor-ink-editor\";\n  }\n  static initialize(l10n, uiManager) {\n    AnnotationEditor.initialize(l10n, uiManager);\n    this._defaultDrawingOptions = new InkDrawingOptions(uiManager.viewParameters);\n  }\n  static getDefaultDrawingOptions(options) {\n    const clone = this._defaultDrawingOptions.clone();\n    clone.updateProperties(options);\n    return clone;\n  }\n  static get supportMultipleDrawings() {\n    return true;\n  }\n  static get typesMap() {\n    return shadow(this, \"typesMap\", new Map([[AnnotationEditorParamsType.INK_THICKNESS, \"stroke-width\"], [AnnotationEditorParamsType.INK_COLOR, \"stroke\"], [AnnotationEditorParamsType.INK_OPACITY, \"stroke-opacity\"]]));\n  }\n  static createDrawerInstance(x, y, parentWidth, parentHeight, rotation) {\n    return new InkDrawOutliner(x, y, parentWidth, parentHeight, rotation, this._defaultDrawingOptions[\"stroke-width\"]);\n  }\n  static deserializeDraw(pageX, pageY, pageWidth, pageHeight, innerMargin, data) {\n    return InkDrawOutline.deserialize(pageX, pageY, pageWidth, pageHeight, innerMargin, data);\n  }\n  static async deserialize(data, parent, uiManager) {\n    let initialData = null;\n    if (data instanceof InkAnnotationElement) {\n      const {\n        data: {\n          inkLists,\n          rect,\n          rotation,\n          id,\n          color,\n          opacity,\n          borderStyle: {\n            rawWidth: thickness\n          },\n          popupRef,\n          richText,\n          contentsObj,\n          creationDate,\n          modificationDate\n        },\n        parent: {\n          page: {\n            pageNumber\n          }\n        }\n      } = data;\n      initialData = data = {\n        annotationType: AnnotationEditorType.INK,\n        color: Array.from(color),\n        thickness,\n        opacity,\n        paths: {\n          points: inkLists\n        },\n        boxes: null,\n        pageIndex: pageNumber - 1,\n        rect: rect.slice(0),\n        rotation,\n        annotationElementId: id,\n        id,\n        deleted: false,\n        popupRef,\n        richText,\n        comment: contentsObj?.str || null,\n        creationDate,\n        modificationDate\n      };\n    }\n    const editor = await super.deserialize(data, parent, uiManager);\n    editor._initialData = initialData;\n    if (data.comment) {\n      editor.setCommentData(data);\n    }\n    return editor;\n  }\n  get toolbarButtons() {\n    this._colorPicker ||= new BasicColorPicker(this);\n    return [[\"colorPicker\", this._colorPicker]];\n  }\n  get colorType() {\n    return AnnotationEditorParamsType.INK_COLOR;\n  }\n  get color() {\n    return this._drawingOptions.stroke;\n  }\n  get opacity() {\n    return this._drawingOptions[\"stroke-opacity\"];\n  }\n  onScaleChanging() {\n    if (!this.parent) {\n      return;\n    }\n    super.onScaleChanging();\n    const {\n      _drawId,\n      _drawingOptions,\n      parent\n    } = this;\n    _drawingOptions.updateSVGProperty(\"stroke-width\");\n    parent.drawLayer.updateProperties(_drawId, _drawingOptions.toSVGProperties());\n  }\n  static onScaleChangingWhenDrawing() {\n    const parent = this._currentParent;\n    if (!parent) {\n      return;\n    }\n    super.onScaleChangingWhenDrawing();\n    this._defaultDrawingOptions.updateSVGProperty(\"stroke-width\");\n    parent.drawLayer.updateProperties(this._currentDrawId, this._defaultDrawingOptions.toSVGProperties());\n  }\n  createDrawingOptions({\n    color,\n    thickness,\n    opacity\n  }) {\n    this._drawingOptions = InkEditor.getDefaultDrawingOptions({\n      stroke: Util.makeHexColor(...color),\n      \"stroke-width\": thickness,\n      \"stroke-opacity\": opacity\n    });\n  }\n  serialize(isForCopying = false) {\n    if (this.isEmpty()) {\n      return null;\n    }\n    if (this.deleted) {\n      return this.serializeDeleted();\n    }\n    const {\n      lines,\n      points\n    } = this.serializeDraw(isForCopying);\n    const {\n      _drawingOptions: {\n        stroke,\n        \"stroke-opacity\": opacity,\n        \"stroke-width\": thickness\n      }\n    } = this;\n    const serialized = Object.assign(super.serialize(isForCopying), {\n      color: AnnotationEditor._colorManager.convert(stroke),\n      opacity,\n      thickness,\n      paths: {\n        lines,\n        points\n      }\n    });\n    this.addComment(serialized);\n    if (isForCopying) {\n      serialized.isCopy = true;\n      return serialized;\n    }\n    if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n      return null;\n    }\n    serialized.id = this.annotationElementId;\n    return serialized;\n  }\n  #hasElementChanged(serialized) {\n    const {\n      color,\n      thickness,\n      opacity,\n      pageIndex\n    } = this._initialData;\n    return this.hasEditedComment || this._hasBeenMoved || this._hasBeenResized || serialized.color.some((c, i) => c !== color[i]) || serialized.thickness !== thickness || serialized.opacity !== opacity || serialized.pageIndex !== pageIndex;\n  }\n  renderAnnotationElement(annotation) {\n    if (this.deleted) {\n      annotation.hide();\n      return null;\n    }\n    const {\n      points,\n      rect\n    } = this.serializeDraw(false);\n    annotation.updateEdited({\n      rect,\n      thickness: this._drawingOptions[\"stroke-width\"],\n      points,\n      popup: this.comment\n    });\n    return null;\n  }\n}\n\n;// ./src/display/editor/drawers/contour.js\n\nclass ContourDrawOutline extends InkDrawOutline {\n  toSVGPath() {\n    let path = super.toSVGPath();\n    if (!path.endsWith(\"Z\")) {\n      path += \"Z\";\n    }\n    return path;\n  }\n}\n\n;// ./src/display/editor/drawers/signaturedraw.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst BASE_HEADER_LENGTH = 8;\nconst POINTS_PROPERTIES_NUMBER = 3;\nclass SignatureExtractor {\n  static #PARAMETERS = {\n    maxDim: 512,\n    sigmaSFactor: 0.02,\n    sigmaR: 25,\n    kernelSize: 16\n  };\n  static #neighborIndexToId(i0, j0, i, j) {\n    i -= i0;\n    j -= j0;\n    if (i === 0) {\n      return j > 0 ? 0 : 4;\n    }\n    if (i === 1) {\n      return j + 6;\n    }\n    return 2 - j;\n  }\n  static #neighborIdToIndex = new Int32Array([0, 1, -1, 1, -1, 0, -1, -1, 0, -1, 1, -1, 1, 0, 1, 1]);\n  static #clockwiseNonZero(buf, width, i0, j0, i, j, offset) {\n    const id = this.#neighborIndexToId(i0, j0, i, j);\n    for (let k = 0; k < 8; k++) {\n      const kk = (-k + id - offset + 16) % 8;\n      const shiftI = this.#neighborIdToIndex[2 * kk];\n      const shiftJ = this.#neighborIdToIndex[2 * kk + 1];\n      if (buf[(i0 + shiftI) * width + (j0 + shiftJ)] !== 0) {\n        return kk;\n      }\n    }\n    return -1;\n  }\n  static #counterClockwiseNonZero(buf, width, i0, j0, i, j, offset) {\n    const id = this.#neighborIndexToId(i0, j0, i, j);\n    for (let k = 0; k < 8; k++) {\n      const kk = (k + id + offset + 16) % 8;\n      const shiftI = this.#neighborIdToIndex[2 * kk];\n      const shiftJ = this.#neighborIdToIndex[2 * kk + 1];\n      if (buf[(i0 + shiftI) * width + (j0 + shiftJ)] !== 0) {\n        return kk;\n      }\n    }\n    return -1;\n  }\n  static #findContours(buf, width, height, threshold) {\n    const N = buf.length;\n    const types = new Int32Array(N);\n    for (let i = 0; i < N; i++) {\n      types[i] = buf[i] <= threshold ? 1 : 0;\n    }\n    for (let i = 1; i < height - 1; i++) {\n      types[i * width] = types[i * width + width - 1] = 0;\n    }\n    for (let i = 0; i < width; i++) {\n      types[i] = types[width * height - 1 - i] = 0;\n    }\n    let nbd = 1;\n    let lnbd;\n    const contours = [];\n    for (let i = 1; i < height - 1; i++) {\n      lnbd = 1;\n      for (let j = 1; j < width - 1; j++) {\n        const ij = i * width + j;\n        const pix = types[ij];\n        if (pix === 0) {\n          continue;\n        }\n        let i2 = i;\n        let j2 = j;\n        if (pix === 1 && types[ij - 1] === 0) {\n          nbd += 1;\n          j2 -= 1;\n        } else if (pix >= 1 && types[ij + 1] === 0) {\n          nbd += 1;\n          j2 += 1;\n          if (pix > 1) {\n            lnbd = pix;\n          }\n        } else {\n          if (pix !== 1) {\n            lnbd = Math.abs(pix);\n          }\n          continue;\n        }\n        const points = [j, i];\n        const isHole = j2 === j + 1;\n        const contour = {\n          isHole,\n          points,\n          id: nbd,\n          parent: 0\n        };\n        contours.push(contour);\n        let contour0;\n        for (const c of contours) {\n          if (c.id === lnbd) {\n            contour0 = c;\n            break;\n          }\n        }\n        if (!contour0) {\n          contour.parent = isHole ? lnbd : 0;\n        } else if (contour0.isHole) {\n          contour.parent = isHole ? contour0.parent : lnbd;\n        } else {\n          contour.parent = isHole ? lnbd : contour0.parent;\n        }\n        const k = this.#clockwiseNonZero(types, width, i, j, i2, j2, 0);\n        if (k === -1) {\n          types[ij] = -nbd;\n          if (types[ij] !== 1) {\n            lnbd = Math.abs(types[ij]);\n          }\n          continue;\n        }\n        let shiftI = this.#neighborIdToIndex[2 * k];\n        let shiftJ = this.#neighborIdToIndex[2 * k + 1];\n        const i1 = i + shiftI;\n        const j1 = j + shiftJ;\n        i2 = i1;\n        j2 = j1;\n        let i3 = i;\n        let j3 = j;\n        while (true) {\n          const kk = this.#counterClockwiseNonZero(types, width, i3, j3, i2, j2, 1);\n          shiftI = this.#neighborIdToIndex[2 * kk];\n          shiftJ = this.#neighborIdToIndex[2 * kk + 1];\n          const i4 = i3 + shiftI;\n          const j4 = j3 + shiftJ;\n          points.push(j4, i4);\n          const ij3 = i3 * width + j3;\n          if (types[ij3 + 1] === 0) {\n            types[ij3] = -nbd;\n          } else if (types[ij3] === 1) {\n            types[ij3] = nbd;\n          }\n          if (i4 === i && j4 === j && i3 === i1 && j3 === j1) {\n            if (types[ij] !== 1) {\n              lnbd = Math.abs(types[ij]);\n            }\n            break;\n          } else {\n            i2 = i3;\n            j2 = j3;\n            i3 = i4;\n            j3 = j4;\n          }\n        }\n      }\n    }\n    return contours;\n  }\n  static #douglasPeuckerHelper(points, start, end, output) {\n    if (end - start <= 4) {\n      for (let i = start; i < end - 2; i += 2) {\n        output.push(points[i], points[i + 1]);\n      }\n      return;\n    }\n    const ax = points[start];\n    const ay = points[start + 1];\n    const abx = points[end - 4] - ax;\n    const aby = points[end - 3] - ay;\n    const dist = Math.hypot(abx, aby);\n    const nabx = abx / dist;\n    const naby = aby / dist;\n    const aa = nabx * ay - naby * ax;\n    const m = aby / abx;\n    const invS = 1 / dist;\n    const phi = Math.atan(m);\n    const cosPhi = Math.cos(phi);\n    const sinPhi = Math.sin(phi);\n    const tmax = invS * (Math.abs(cosPhi) + Math.abs(sinPhi));\n    const poly = invS * (1 - tmax + tmax ** 2);\n    const partialPhi = Math.max(Math.atan(Math.abs(sinPhi + cosPhi) * poly), Math.atan(Math.abs(sinPhi - cosPhi) * poly));\n    let dmax = 0;\n    let index = start;\n    for (let i = start + 2; i < end - 2; i += 2) {\n      const d = Math.abs(aa - nabx * points[i + 1] + naby * points[i]);\n      if (d > dmax) {\n        index = i;\n        dmax = d;\n      }\n    }\n    if (dmax > (dist * partialPhi) ** 2) {\n      this.#douglasPeuckerHelper(points, start, index + 2, output);\n      this.#douglasPeuckerHelper(points, index, end, output);\n    } else {\n      output.push(ax, ay);\n    }\n  }\n  static #douglasPeucker(points) {\n    const output = [];\n    const len = points.length;\n    this.#douglasPeuckerHelper(points, 0, len, output);\n    output.push(points[len - 2], points[len - 1]);\n    return output.length <= 4 ? null : output;\n  }\n  static #bilateralFilter(buf, width, height, sigmaS, sigmaR, kernelSize) {\n    const kernel = new Float32Array(kernelSize ** 2);\n    const sigmaS2 = -2 * sigmaS ** 2;\n    const halfSize = kernelSize >> 1;\n    for (let i = 0; i < kernelSize; i++) {\n      const x = (i - halfSize) ** 2;\n      for (let j = 0; j < kernelSize; j++) {\n        kernel[i * kernelSize + j] = Math.exp((x + (j - halfSize) ** 2) / sigmaS2);\n      }\n    }\n    const rangeValues = new Float32Array(256);\n    const sigmaR2 = -2 * sigmaR ** 2;\n    for (let i = 0; i < 256; i++) {\n      rangeValues[i] = Math.exp(i ** 2 / sigmaR2);\n    }\n    const N = buf.length;\n    const out = new Uint8Array(N);\n    const histogram = new Uint32Array(256);\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const ij = i * width + j;\n        const center = buf[ij];\n        let sum = 0;\n        let norm = 0;\n        for (let k = 0; k < kernelSize; k++) {\n          const y = i + k - halfSize;\n          if (y < 0 || y >= height) {\n            continue;\n          }\n          for (let l = 0; l < kernelSize; l++) {\n            const x = j + l - halfSize;\n            if (x < 0 || x >= width) {\n              continue;\n            }\n            const neighbour = buf[y * width + x];\n            const w = kernel[k * kernelSize + l] * rangeValues[Math.abs(neighbour - center)];\n            sum += neighbour * w;\n            norm += w;\n          }\n        }\n        const pix = out[ij] = Math.round(sum / norm);\n        histogram[pix]++;\n      }\n    }\n    return [out, histogram];\n  }\n  static #getHistogram(buf) {\n    const histogram = new Uint32Array(256);\n    for (const g of buf) {\n      histogram[g]++;\n    }\n    return histogram;\n  }\n  static #toUint8(buf) {\n    const N = buf.length;\n    const out = new Uint8ClampedArray(N >> 2);\n    let max = -Infinity;\n    let min = Infinity;\n    for (let i = 0, ii = out.length; i < ii; i++) {\n      const pix = out[i] = buf[i << 2];\n      max = Math.max(max, pix);\n      min = Math.min(min, pix);\n    }\n    const ratio = 255 / (max - min);\n    for (let i = 0, ii = out.length; i < ii; i++) {\n      out[i] = (out[i] - min) * ratio;\n    }\n    return out;\n  }\n  static #guessThreshold(histogram) {\n    let i;\n    let M = -Infinity;\n    let L = -Infinity;\n    const min = histogram.findIndex(v => v !== 0);\n    let pos = min;\n    let spos = min;\n    for (i = min; i < 256; i++) {\n      const v = histogram[i];\n      if (v > M) {\n        if (i - pos > L) {\n          L = i - pos;\n          spos = i - 1;\n        }\n        M = v;\n        pos = i;\n      }\n    }\n    for (i = spos - 1; i >= 0; i--) {\n      if (histogram[i] > histogram[i + 1]) {\n        break;\n      }\n    }\n    return i;\n  }\n  static #getGrayPixels(bitmap) {\n    const originalBitmap = bitmap;\n    const {\n      width,\n      height\n    } = bitmap;\n    const {\n      maxDim\n    } = this.#PARAMETERS;\n    let newWidth = width;\n    let newHeight = height;\n    if (width > maxDim || height > maxDim) {\n      let prevWidth = width;\n      let prevHeight = height;\n      let steps = Math.log2(Math.max(width, height) / maxDim);\n      const isteps = Math.floor(steps);\n      steps = steps === isteps ? isteps - 1 : isteps;\n      for (let i = 0; i < steps; i++) {\n        newWidth = Math.ceil(prevWidth / 2);\n        newHeight = Math.ceil(prevHeight / 2);\n        const offscreen = new OffscreenCanvas(newWidth, newHeight);\n        const ctx = offscreen.getContext(\"2d\");\n        ctx.drawImage(bitmap, 0, 0, prevWidth, prevHeight, 0, 0, newWidth, newHeight);\n        prevWidth = newWidth;\n        prevHeight = newHeight;\n        if (bitmap !== originalBitmap) {\n          bitmap.close();\n        }\n        bitmap = offscreen.transferToImageBitmap();\n      }\n      const ratio = Math.min(maxDim / newWidth, maxDim / newHeight);\n      newWidth = Math.round(newWidth * ratio);\n      newHeight = Math.round(newHeight * ratio);\n    }\n    const offscreen = new OffscreenCanvas(newWidth, newHeight);\n    const ctx = offscreen.getContext(\"2d\", {\n      willReadFrequently: true\n    });\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, newWidth, newHeight);\n    ctx.filter = \"grayscale(1)\";\n    ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, newWidth, newHeight);\n    const grayImage = ctx.getImageData(0, 0, newWidth, newHeight).data;\n    const uint8Buf = this.#toUint8(grayImage);\n    return [uint8Buf, newWidth, newHeight];\n  }\n  static extractContoursFromText(text, {\n    fontFamily,\n    fontStyle,\n    fontWeight\n  }, pageWidth, pageHeight, rotation, innerMargin) {\n    let canvas = new OffscreenCanvas(1, 1);\n    let ctx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n    const fontSize = 200;\n    const font = ctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n    const {\n      actualBoundingBoxLeft,\n      actualBoundingBoxRight,\n      actualBoundingBoxAscent,\n      actualBoundingBoxDescent,\n      fontBoundingBoxAscent,\n      fontBoundingBoxDescent,\n      width\n    } = ctx.measureText(text);\n    const SCALE = 1.5;\n    const canvasWidth = Math.ceil(Math.max(Math.abs(actualBoundingBoxLeft) + Math.abs(actualBoundingBoxRight) || 0, width) * SCALE);\n    const canvasHeight = Math.ceil(Math.max(Math.abs(actualBoundingBoxAscent) + Math.abs(actualBoundingBoxDescent) || fontSize, Math.abs(fontBoundingBoxAscent) + Math.abs(fontBoundingBoxDescent) || fontSize) * SCALE);\n    canvas = new OffscreenCanvas(canvasWidth, canvasHeight);\n    ctx = canvas.getContext(\"2d\", {\n      alpha: true,\n      willReadFrequently: true\n    });\n    ctx.font = font;\n    ctx.filter = \"grayscale(1)\";\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n    ctx.fillStyle = \"black\";\n    ctx.fillText(text, canvasWidth * (SCALE - 1) / 2, canvasHeight * (3 - SCALE) / 2);\n    const uint8Buf = this.#toUint8(ctx.getImageData(0, 0, canvasWidth, canvasHeight).data);\n    const histogram = this.#getHistogram(uint8Buf);\n    const threshold = this.#guessThreshold(histogram);\n    const contourList = this.#findContours(uint8Buf, canvasWidth, canvasHeight, threshold);\n    return this.processDrawnLines({\n      lines: {\n        curves: contourList,\n        width: canvasWidth,\n        height: canvasHeight\n      },\n      pageWidth,\n      pageHeight,\n      rotation,\n      innerMargin,\n      mustSmooth: true,\n      areContours: true\n    });\n  }\n  static process(bitmap, pageWidth, pageHeight, rotation, innerMargin) {\n    const [uint8Buf, width, height] = this.#getGrayPixels(bitmap);\n    const [buffer, histogram] = this.#bilateralFilter(uint8Buf, width, height, Math.hypot(width, height) * this.#PARAMETERS.sigmaSFactor, this.#PARAMETERS.sigmaR, this.#PARAMETERS.kernelSize);\n    const threshold = this.#guessThreshold(histogram);\n    const contourList = this.#findContours(buffer, width, height, threshold);\n    return this.processDrawnLines({\n      lines: {\n        curves: contourList,\n        width,\n        height\n      },\n      pageWidth,\n      pageHeight,\n      rotation,\n      innerMargin,\n      mustSmooth: true,\n      areContours: true\n    });\n  }\n  static processDrawnLines({\n    lines,\n    pageWidth,\n    pageHeight,\n    rotation,\n    innerMargin,\n    mustSmooth,\n    areContours\n  }) {\n    if (rotation % 180 !== 0) {\n      [pageWidth, pageHeight] = [pageHeight, pageWidth];\n    }\n    const {\n      curves,\n      width,\n      height\n    } = lines;\n    const thickness = lines.thickness ?? 0;\n    const linesAndPoints = [];\n    const ratio = Math.min(pageWidth / width, pageHeight / height);\n    const xScale = ratio / pageWidth;\n    const yScale = ratio / pageHeight;\n    const newCurves = [];\n    for (const {\n      points\n    } of curves) {\n      const reducedPoints = mustSmooth ? this.#douglasPeucker(points) : points;\n      if (!reducedPoints) {\n        continue;\n      }\n      newCurves.push(reducedPoints);\n      const len = reducedPoints.length;\n      const newPoints = new Float32Array(len);\n      const line = new Float32Array(3 * (len === 2 ? 2 : len - 2));\n      linesAndPoints.push({\n        line,\n        points: newPoints\n      });\n      if (len === 2) {\n        newPoints[0] = reducedPoints[0] * xScale;\n        newPoints[1] = reducedPoints[1] * yScale;\n        line.set([NaN, NaN, NaN, NaN, newPoints[0], newPoints[1]], 0);\n        continue;\n      }\n      let [x1, y1, x2, y2] = reducedPoints;\n      x1 *= xScale;\n      y1 *= yScale;\n      x2 *= xScale;\n      y2 *= yScale;\n      newPoints.set([x1, y1, x2, y2], 0);\n      line.set([NaN, NaN, NaN, NaN, x1, y1], 0);\n      for (let i = 4; i < len; i += 2) {\n        const x = newPoints[i] = reducedPoints[i] * xScale;\n        const y = newPoints[i + 1] = reducedPoints[i + 1] * yScale;\n        line.set(Outline.createBezierPoints(x1, y1, x2, y2, x, y), (i - 2) * 3);\n        [x1, y1, x2, y2] = [x2, y2, x, y];\n      }\n    }\n    if (linesAndPoints.length === 0) {\n      return null;\n    }\n    const outline = areContours ? new ContourDrawOutline() : new InkDrawOutline();\n    outline.build(linesAndPoints, pageWidth, pageHeight, 1, rotation, areContours ? 0 : thickness, innerMargin);\n    return {\n      outline,\n      newCurves,\n      areContours,\n      thickness,\n      width,\n      height\n    };\n  }\n  static async compressSignature({\n    outlines,\n    areContours,\n    thickness,\n    width,\n    height\n  }) {\n    let minDiff = Infinity;\n    let maxDiff = -Infinity;\n    let outlinesLength = 0;\n    for (const points of outlines) {\n      outlinesLength += points.length;\n      for (let i = 2, ii = points.length; i < ii; i++) {\n        const dx = points[i] - points[i - 2];\n        minDiff = Math.min(minDiff, dx);\n        maxDiff = Math.max(maxDiff, dx);\n      }\n    }\n    let bufferType;\n    if (minDiff >= -128 && maxDiff <= 127) {\n      bufferType = Int8Array;\n    } else if (minDiff >= -32768 && maxDiff <= 32767) {\n      bufferType = Int16Array;\n    } else {\n      bufferType = Int32Array;\n    }\n    const len = outlines.length;\n    const headerLength = BASE_HEADER_LENGTH + POINTS_PROPERTIES_NUMBER * len;\n    const header = new Uint32Array(headerLength);\n    let offset = 0;\n    header[offset++] = headerLength * Uint32Array.BYTES_PER_ELEMENT + (outlinesLength - 2 * len) * bufferType.BYTES_PER_ELEMENT;\n    header[offset++] = 0;\n    header[offset++] = width;\n    header[offset++] = height;\n    header[offset++] = areContours ? 0 : 1;\n    header[offset++] = Math.max(0, Math.floor(thickness ?? 0));\n    header[offset++] = len;\n    header[offset++] = bufferType.BYTES_PER_ELEMENT;\n    for (const points of outlines) {\n      header[offset++] = points.length - 2;\n      header[offset++] = points[0];\n      header[offset++] = points[1];\n    }\n    const cs = new CompressionStream(\"deflate-raw\");\n    const writer = cs.writable.getWriter();\n    await writer.ready;\n    writer.write(header);\n    const BufferCtor = bufferType.prototype.constructor;\n    for (const points of outlines) {\n      const diffs = new BufferCtor(points.length - 2);\n      for (let i = 2, ii = points.length; i < ii; i++) {\n        diffs[i - 2] = points[i] - points[i - 2];\n      }\n      writer.write(diffs);\n    }\n    writer.close();\n    const buf = await new Response(cs.readable).arrayBuffer();\n    const bytes = new Uint8Array(buf);\n    return toBase64Util(bytes);\n  }\n  static async decompressSignature(signatureData) {\n    try {\n      const bytes = fromBase64Util(signatureData);\n      const {\n        readable,\n        writable\n      } = new DecompressionStream(\"deflate-raw\");\n      const writer = writable.getWriter();\n      await writer.ready;\n      writer.write(bytes).then(async () => {\n        await writer.ready;\n        await writer.close();\n      }).catch(() => {});\n      let data = null;\n      let offset = 0;\n      for await (const chunk of readable) {\n        data ||= new Uint8Array(new Uint32Array(chunk.buffer, 0, 4)[0]);\n        data.set(chunk, offset);\n        offset += chunk.length;\n      }\n      const header = new Uint32Array(data.buffer, 0, data.length >> 2);\n      const version = header[1];\n      if (version !== 0) {\n        throw new Error(`Invalid version: ${version}`);\n      }\n      const width = header[2];\n      const height = header[3];\n      const areContours = header[4] === 0;\n      const thickness = header[5];\n      const numberOfDrawings = header[6];\n      const bufferType = header[7];\n      const outlines = [];\n      const diffsOffset = (BASE_HEADER_LENGTH + POINTS_PROPERTIES_NUMBER * numberOfDrawings) * Uint32Array.BYTES_PER_ELEMENT;\n      let diffs;\n      switch (bufferType) {\n        case Int8Array.BYTES_PER_ELEMENT:\n          diffs = new Int8Array(data.buffer, diffsOffset);\n          break;\n        case Int16Array.BYTES_PER_ELEMENT:\n          diffs = new Int16Array(data.buffer, diffsOffset);\n          break;\n        case Int32Array.BYTES_PER_ELEMENT:\n          diffs = new Int32Array(data.buffer, diffsOffset);\n          break;\n      }\n      offset = 0;\n      for (let i = 0; i < numberOfDrawings; i++) {\n        const len = header[POINTS_PROPERTIES_NUMBER * i + BASE_HEADER_LENGTH];\n        const points = new Float32Array(len + 2);\n        outlines.push(points);\n        for (let j = 0; j < POINTS_PROPERTIES_NUMBER - 1; j++) {\n          points[j] = header[POINTS_PROPERTIES_NUMBER * i + BASE_HEADER_LENGTH + j + 1];\n        }\n        for (let j = 0; j < len; j++) {\n          points[j + 2] = points[j] + diffs[offset++];\n        }\n      }\n      return {\n        areContours,\n        thickness,\n        outlines,\n        width,\n        height\n      };\n    } catch (e) {\n      warn(`decompressSignature: ${e}`);\n      return null;\n    }\n  }\n}\n\n;// ./src/display/editor/signature.js\n\n\n\n\n\n\n\n\n\nclass SignatureOptions extends DrawingOptions {\n  constructor() {\n    super();\n    super.updateProperties({\n      fill: AnnotationEditor._defaultLineColor,\n      \"stroke-width\": 0\n    });\n  }\n  clone() {\n    const clone = new SignatureOptions();\n    clone.updateAll(this);\n    return clone;\n  }\n}\nclass DrawnSignatureOptions extends InkDrawingOptions {\n  constructor(viewerParameters) {\n    super(viewerParameters);\n    super.updateProperties({\n      stroke: AnnotationEditor._defaultLineColor,\n      \"stroke-width\": 1\n    });\n  }\n  clone() {\n    const clone = new DrawnSignatureOptions(this._viewParameters);\n    clone.updateAll(this);\n    return clone;\n  }\n}\nclass SignatureEditor extends DrawingEditor {\n  #isExtracted = false;\n  #description = null;\n  #signatureData = null;\n  #signatureUUID = null;\n  static _type = \"signature\";\n  static _editorType = AnnotationEditorType.SIGNATURE;\n  static _defaultDrawingOptions = null;\n  constructor(params) {\n    super({\n      ...params,\n      mustBeCommitted: true,\n      name: \"signatureEditor\"\n    });\n    this._willKeepAspectRatio = true;\n    this.#signatureData = params.signatureData || null;\n    this.#description = null;\n    this.defaultL10nId = \"pdfjs-editor-signature-editor1\";\n  }\n  static initialize(l10n, uiManager) {\n    AnnotationEditor.initialize(l10n, uiManager);\n    this._defaultDrawingOptions = new SignatureOptions();\n    this._defaultDrawnSignatureOptions = new DrawnSignatureOptions(uiManager.viewParameters);\n  }\n  static getDefaultDrawingOptions(options) {\n    const clone = this._defaultDrawingOptions.clone();\n    clone.updateProperties(options);\n    return clone;\n  }\n  static get supportMultipleDrawings() {\n    return false;\n  }\n  static get typesMap() {\n    return shadow(this, \"typesMap\", new Map());\n  }\n  static get isDrawer() {\n    return false;\n  }\n  get telemetryFinalData() {\n    return {\n      type: \"signature\",\n      hasDescription: !!this.#description\n    };\n  }\n  static computeTelemetryFinalData(data) {\n    const hasDescriptionStats = data.get(\"hasDescription\");\n    return {\n      hasAltText: hasDescriptionStats.get(true) ?? 0,\n      hasNoAltText: hasDescriptionStats.get(false) ?? 0\n    };\n  }\n  get isResizable() {\n    return true;\n  }\n  onScaleChanging() {\n    if (this._drawId === null) {\n      return;\n    }\n    super.onScaleChanging();\n  }\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n    let baseX, baseY;\n    const {\n      _isCopy\n    } = this;\n    if (_isCopy) {\n      this._isCopy = false;\n      baseX = this.x;\n      baseY = this.y;\n    }\n    super.render();\n    if (this._drawId === null) {\n      if (this.#signatureData) {\n        const {\n          lines,\n          mustSmooth,\n          areContours,\n          description,\n          uuid,\n          heightInPage\n        } = this.#signatureData;\n        const {\n          rawDims: {\n            pageWidth,\n            pageHeight\n          },\n          rotation\n        } = this.parent.viewport;\n        const outline = SignatureExtractor.processDrawnLines({\n          lines,\n          pageWidth,\n          pageHeight,\n          rotation,\n          innerMargin: SignatureEditor._INNER_MARGIN,\n          mustSmooth,\n          areContours\n        });\n        this.addSignature(outline, heightInPage, description, uuid);\n      } else {\n        this.div.setAttribute(\"data-l10n-args\", JSON.stringify({\n          description: \"\"\n        }));\n        this.div.hidden = true;\n        this._uiManager.getSignature(this);\n      }\n    } else {\n      this.div.setAttribute(\"data-l10n-args\", JSON.stringify({\n        description: this.#description || \"\"\n      }));\n    }\n    if (_isCopy) {\n      this._isCopy = true;\n      this._moveAfterPaste(baseX, baseY);\n    }\n    return this.div;\n  }\n  setUuid(uuid) {\n    this.#signatureUUID = uuid;\n    this.addEditToolbar();\n  }\n  getUuid() {\n    return this.#signatureUUID;\n  }\n  get description() {\n    return this.#description;\n  }\n  set description(description) {\n    this.#description = description;\n    if (!this.div) {\n      return;\n    }\n    this.div.setAttribute(\"data-l10n-args\", JSON.stringify({\n      description\n    }));\n    super.addEditToolbar().then(toolbar => {\n      toolbar?.updateEditSignatureButton(description);\n    });\n  }\n  getSignaturePreview() {\n    const {\n      newCurves,\n      areContours,\n      thickness,\n      width,\n      height\n    } = this.#signatureData;\n    const maxDim = Math.max(width, height);\n    const outlineData = SignatureExtractor.processDrawnLines({\n      lines: {\n        curves: newCurves.map(points => ({\n          points\n        })),\n        thickness,\n        width,\n        height\n      },\n      pageWidth: maxDim,\n      pageHeight: maxDim,\n      rotation: 0,\n      innerMargin: 0,\n      mustSmooth: false,\n      areContours\n    });\n    return {\n      areContours,\n      outline: outlineData.outline\n    };\n  }\n  get toolbarButtons() {\n    if (this._uiManager.signatureManager) {\n      return [[\"editSignature\", this._uiManager.signatureManager]];\n    }\n    return super.toolbarButtons;\n  }\n  addSignature(data, heightInPage, description, uuid) {\n    const {\n      x: savedX,\n      y: savedY\n    } = this;\n    const {\n      outline\n    } = this.#signatureData = data;\n    this.#isExtracted = outline instanceof ContourDrawOutline;\n    this.description = description;\n    let drawingOptions;\n    if (this.#isExtracted) {\n      drawingOptions = SignatureEditor.getDefaultDrawingOptions();\n    } else {\n      drawingOptions = SignatureEditor._defaultDrawnSignatureOptions.clone();\n      drawingOptions.updateProperties({\n        \"stroke-width\": outline.thickness\n      });\n    }\n    this._addOutlines({\n      drawOutlines: outline,\n      drawingOptions\n    });\n    const [, pageHeight] = this.pageDimensions;\n    let newHeight = heightInPage / pageHeight;\n    newHeight = newHeight >= 1 ? 0.5 : newHeight;\n    this.width *= newHeight / this.height;\n    if (this.width >= 1) {\n      newHeight *= 0.9 / this.width;\n      this.width = 0.9;\n    }\n    this.height = newHeight;\n    this.setDims();\n    this.x = savedX;\n    this.y = savedY;\n    this.center();\n    this._onResized();\n    this.onScaleChanging();\n    this.rotate();\n    this._uiManager.addToAnnotationStorage(this);\n    this.setUuid(uuid);\n    this._reportTelemetry({\n      action: \"pdfjs.signature.inserted\",\n      data: {\n        hasBeenSaved: !!uuid,\n        hasDescription: !!description\n      }\n    });\n    this.div.hidden = false;\n  }\n  getFromImage(bitmap) {\n    const {\n      rawDims: {\n        pageWidth,\n        pageHeight\n      },\n      rotation\n    } = this.parent.viewport;\n    return SignatureExtractor.process(bitmap, pageWidth, pageHeight, rotation, SignatureEditor._INNER_MARGIN);\n  }\n  getFromText(text, fontInfo) {\n    const {\n      rawDims: {\n        pageWidth,\n        pageHeight\n      },\n      rotation\n    } = this.parent.viewport;\n    return SignatureExtractor.extractContoursFromText(text, fontInfo, pageWidth, pageHeight, rotation, SignatureEditor._INNER_MARGIN);\n  }\n  getDrawnSignature(curves) {\n    const {\n      rawDims: {\n        pageWidth,\n        pageHeight\n      },\n      rotation\n    } = this.parent.viewport;\n    return SignatureExtractor.processDrawnLines({\n      lines: curves,\n      pageWidth,\n      pageHeight,\n      rotation,\n      innerMargin: SignatureEditor._INNER_MARGIN,\n      mustSmooth: false,\n      areContours: false\n    });\n  }\n  createDrawingOptions({\n    areContours,\n    thickness\n  }) {\n    if (areContours) {\n      this._drawingOptions = SignatureEditor.getDefaultDrawingOptions();\n    } else {\n      this._drawingOptions = SignatureEditor._defaultDrawnSignatureOptions.clone();\n      this._drawingOptions.updateProperties({\n        \"stroke-width\": thickness\n      });\n    }\n  }\n  serialize(isForCopying = false) {\n    if (this.isEmpty()) {\n      return null;\n    }\n    const {\n      lines,\n      points\n    } = this.serializeDraw(isForCopying);\n    const {\n      _drawingOptions: {\n        \"stroke-width\": thickness\n      }\n    } = this;\n    const serialized = Object.assign(super.serialize(isForCopying), {\n      isSignature: true,\n      areContours: this.#isExtracted,\n      color: [0, 0, 0],\n      thickness: this.#isExtracted ? 0 : thickness\n    });\n    this.addComment(serialized);\n    if (isForCopying) {\n      serialized.paths = {\n        lines,\n        points\n      };\n      serialized.uuid = this.#signatureUUID;\n      serialized.isCopy = true;\n    } else {\n      serialized.lines = lines;\n    }\n    if (this.#description) {\n      serialized.accessibilityData = {\n        type: \"Figure\",\n        alt: this.#description\n      };\n    }\n    return serialized;\n  }\n  static deserializeDraw(pageX, pageY, pageWidth, pageHeight, innerMargin, data) {\n    if (data.areContours) {\n      return ContourDrawOutline.deserialize(pageX, pageY, pageWidth, pageHeight, innerMargin, data);\n    }\n    return InkDrawOutline.deserialize(pageX, pageY, pageWidth, pageHeight, innerMargin, data);\n  }\n  static async deserialize(data, parent, uiManager) {\n    const editor = await super.deserialize(data, parent, uiManager);\n    editor.#isExtracted = data.areContours;\n    editor.description = data.accessibilityData?.alt || \"\";\n    editor.#signatureUUID = data.uuid;\n    return editor;\n  }\n}\n\n;// ./src/display/editor/stamp.js\n\n\n\n\n\n\n\nclass StampEditor extends AnnotationEditor {\n  #bitmap = null;\n  #bitmapId = null;\n  #bitmapPromise = null;\n  #bitmapUrl = null;\n  #bitmapFile = null;\n  #bitmapFileName = \"\";\n  #canvas = null;\n  #missingCanvas = false;\n  #resizeTimeoutId = null;\n  #isSvg = false;\n  #hasBeenAddedInUndoStack = false;\n  static _type = \"stamp\";\n  static _editorType = AnnotationEditorType.STAMP;\n  constructor(params) {\n    super({\n      ...params,\n      name: \"stampEditor\"\n    });\n    this.#bitmapUrl = params.bitmapUrl;\n    this.#bitmapFile = params.bitmapFile;\n    this.defaultL10nId = \"pdfjs-editor-stamp-editor\";\n  }\n  static initialize(l10n, uiManager) {\n    AnnotationEditor.initialize(l10n, uiManager);\n  }\n  static isHandlingMimeForPasting(mime) {\n    return SupportedImageMimeTypes.includes(mime);\n  }\n  static paste(item, parent) {\n    parent.pasteEditor({\n      mode: AnnotationEditorType.STAMP\n    }, {\n      bitmapFile: item.getAsFile()\n    });\n  }\n  altTextFinish() {\n    if (this._uiManager.useNewAltTextFlow) {\n      this.div.hidden = false;\n    }\n    super.altTextFinish();\n  }\n  get telemetryFinalData() {\n    return {\n      type: \"stamp\",\n      hasAltText: !!this.altTextData?.altText\n    };\n  }\n  static computeTelemetryFinalData(data) {\n    const hasAltTextStats = data.get(\"hasAltText\");\n    return {\n      hasAltText: hasAltTextStats.get(true) ?? 0,\n      hasNoAltText: hasAltTextStats.get(false) ?? 0\n    };\n  }\n  #getBitmapFetched(data, fromId = false) {\n    if (!data) {\n      this.remove();\n      return;\n    }\n    this.#bitmap = data.bitmap;\n    if (!fromId) {\n      this.#bitmapId = data.id;\n      this.#isSvg = data.isSvg;\n    }\n    if (data.file) {\n      this.#bitmapFileName = data.file.name;\n    }\n    this.#createCanvas();\n  }\n  #getBitmapDone() {\n    this.#bitmapPromise = null;\n    this._uiManager.enableWaiting(false);\n    if (!this.#canvas) {\n      return;\n    }\n    if (this._uiManager.useNewAltTextWhenAddingImage && this._uiManager.useNewAltTextFlow && this.#bitmap) {\n      this.addEditToolbar().then(() => {\n        this._editToolbar.hide();\n        this._uiManager.editAltText(this, true);\n      });\n      return;\n    }\n    if (!this._uiManager.useNewAltTextWhenAddingImage && this._uiManager.useNewAltTextFlow && this.#bitmap) {\n      this._reportTelemetry({\n        action: \"pdfjs.image.image_added\",\n        data: {\n          alt_text_modal: false,\n          alt_text_type: \"empty\"\n        }\n      });\n      try {\n        this.mlGuessAltText();\n      } catch {}\n    }\n    this.div.focus();\n  }\n  async mlGuessAltText(imageData = null, updateAltTextData = true) {\n    if (this.hasAltTextData()) {\n      return null;\n    }\n    const {\n      mlManager\n    } = this._uiManager;\n    if (!mlManager) {\n      throw new Error(\"No ML.\");\n    }\n    if (!(await mlManager.isEnabledFor(\"altText\"))) {\n      throw new Error(\"ML isn't enabled for alt text.\");\n    }\n    const {\n      data,\n      width,\n      height\n    } = imageData || this.copyCanvas(null, null, true).imageData;\n    const response = await mlManager.guess({\n      name: \"altText\",\n      request: {\n        data,\n        width,\n        height,\n        channels: data.length / (width * height)\n      }\n    });\n    if (!response) {\n      throw new Error(\"No response from the AI service.\");\n    }\n    if (response.error) {\n      throw new Error(\"Error from the AI service.\");\n    }\n    if (response.cancel) {\n      return null;\n    }\n    if (!response.output) {\n      throw new Error(\"No valid response from the AI service.\");\n    }\n    const altText = response.output;\n    await this.setGuessedAltText(altText);\n    if (updateAltTextData && !this.hasAltTextData()) {\n      this.altTextData = {\n        alt: altText,\n        decorative: false\n      };\n    }\n    return altText;\n  }\n  #getBitmap() {\n    if (this.#bitmapId) {\n      this._uiManager.enableWaiting(true);\n      this._uiManager.imageManager.getFromId(this.#bitmapId).then(data => this.#getBitmapFetched(data, true)).finally(() => this.#getBitmapDone());\n      return;\n    }\n    if (this.#bitmapUrl) {\n      const url = this.#bitmapUrl;\n      this.#bitmapUrl = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager.getFromUrl(url).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n      return;\n    }\n    if (this.#bitmapFile) {\n      const file = this.#bitmapFile;\n      this.#bitmapFile = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager.getFromFile(file).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n      return;\n    }\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = SupportedImageMimeTypes.join(\",\");\n    const signal = this._uiManager._signal;\n    this.#bitmapPromise = new Promise(resolve => {\n      input.addEventListener(\"change\", async () => {\n        if (!input.files || input.files.length === 0) {\n          this.remove();\n        } else {\n          this._uiManager.enableWaiting(true);\n          const data = await this._uiManager.imageManager.getFromFile(input.files[0]);\n          this._reportTelemetry({\n            action: \"pdfjs.image.image_selected\",\n            data: {\n              alt_text_modal: this._uiManager.useNewAltTextFlow\n            }\n          });\n          this.#getBitmapFetched(data);\n        }\n        resolve();\n      }, {\n        signal\n      });\n      input.addEventListener(\"cancel\", () => {\n        this.remove();\n        resolve();\n      }, {\n        signal\n      });\n    }).finally(() => this.#getBitmapDone());\n    input.click();\n  }\n  remove() {\n    if (this.#bitmapId) {\n      this.#bitmap = null;\n      this._uiManager.imageManager.deleteId(this.#bitmapId);\n      this.#canvas?.remove();\n      this.#canvas = null;\n      if (this.#resizeTimeoutId) {\n        clearTimeout(this.#resizeTimeoutId);\n        this.#resizeTimeoutId = null;\n      }\n    }\n    super.remove();\n  }\n  rebuild() {\n    if (!this.parent) {\n      if (this.#bitmapId) {\n        this.#getBitmap();\n      }\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n    if (this.#bitmapId && this.#canvas === null) {\n      this.#getBitmap();\n    }\n    if (!this.isAttachedToDOM) {\n      this.parent.add(this);\n    }\n  }\n  onceAdded(focus) {\n    this._isDraggable = true;\n    if (focus) {\n      this.div.focus();\n    }\n  }\n  isEmpty() {\n    return !(this.#bitmapPromise || this.#bitmap || this.#bitmapUrl || this.#bitmapFile || this.#bitmapId || this.#missingCanvas);\n  }\n  get toolbarButtons() {\n    return [[\"altText\", this.createAltText()]];\n  }\n  get isResizable() {\n    return true;\n  }\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n    let baseX, baseY;\n    if (this._isCopy) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n    super.render();\n    this.div.hidden = true;\n    this.createAltText();\n    if (!this.#missingCanvas) {\n      if (this.#bitmap) {\n        this.#createCanvas();\n      } else {\n        this.#getBitmap();\n      }\n    }\n    if (this._isCopy) {\n      this._moveAfterPaste(baseX, baseY);\n    }\n    this._uiManager.addShouldRescale(this);\n    return this.div;\n  }\n  setCanvas(annotationElementId, canvas) {\n    const {\n      id: bitmapId,\n      bitmap\n    } = this._uiManager.imageManager.getFromCanvas(annotationElementId, canvas);\n    canvas.remove();\n    if (bitmapId && this._uiManager.imageManager.isValidId(bitmapId)) {\n      this.#bitmapId = bitmapId;\n      if (bitmap) {\n        this.#bitmap = bitmap;\n      }\n      this.#missingCanvas = false;\n      this.#createCanvas();\n    }\n  }\n  _onResized() {\n    this.onScaleChanging();\n  }\n  onScaleChanging() {\n    if (!this.parent) {\n      return;\n    }\n    if (this.#resizeTimeoutId !== null) {\n      clearTimeout(this.#resizeTimeoutId);\n    }\n    const TIME_TO_WAIT = 200;\n    this.#resizeTimeoutId = setTimeout(() => {\n      this.#resizeTimeoutId = null;\n      this.#drawBitmap();\n    }, TIME_TO_WAIT);\n  }\n  #createCanvas() {\n    const {\n      div\n    } = this;\n    let {\n      width,\n      height\n    } = this.#bitmap;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const MAX_RATIO = 0.75;\n    if (this.width) {\n      width = this.width * pageWidth;\n      height = this.height * pageHeight;\n    } else if (width > MAX_RATIO * pageWidth || height > MAX_RATIO * pageHeight) {\n      const factor = Math.min(MAX_RATIO * pageWidth / width, MAX_RATIO * pageHeight / height);\n      width *= factor;\n      height *= factor;\n    }\n    this._uiManager.enableWaiting(false);\n    const canvas = this.#canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"role\", \"img\");\n    this.addContainer(canvas);\n    this.width = width / pageWidth;\n    this.height = height / pageHeight;\n    this.setDims();\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    } else {\n      this.fixAndSetPosition();\n    }\n    this._initialOptions = null;\n    if (!this._uiManager.useNewAltTextWhenAddingImage || !this._uiManager.useNewAltTextFlow || this.annotationElementId) {\n      div.hidden = false;\n    }\n    this.#drawBitmap();\n    if (!this.#hasBeenAddedInUndoStack) {\n      this.parent.addUndoableEditor(this);\n      this.#hasBeenAddedInUndoStack = true;\n    }\n    this._reportTelemetry({\n      action: \"inserted_image\"\n    });\n    if (this.#bitmapFileName) {\n      this.div.setAttribute(\"aria-description\", this.#bitmapFileName);\n    }\n    if (!this.annotationElementId) {\n      this._uiManager.a11yAlert(\"pdfjs-editor-stamp-added-alert\");\n    }\n  }\n  copyCanvas(maxDataDimension, maxPreviewDimension, createImageData = false) {\n    if (!maxDataDimension) {\n      maxDataDimension = 224;\n    }\n    const {\n      width: bitmapWidth,\n      height: bitmapHeight\n    } = this.#bitmap;\n    const outputScale = new OutputScale();\n    let bitmap = this.#bitmap;\n    let width = bitmapWidth,\n      height = bitmapHeight;\n    let canvas = null;\n    if (maxPreviewDimension) {\n      if (bitmapWidth > maxPreviewDimension || bitmapHeight > maxPreviewDimension) {\n        const ratio = Math.min(maxPreviewDimension / bitmapWidth, maxPreviewDimension / bitmapHeight);\n        width = Math.floor(bitmapWidth * ratio);\n        height = Math.floor(bitmapHeight * ratio);\n      }\n      canvas = document.createElement(\"canvas\");\n      const scaledWidth = canvas.width = Math.ceil(width * outputScale.sx);\n      const scaledHeight = canvas.height = Math.ceil(height * outputScale.sy);\n      if (!this.#isSvg) {\n        bitmap = this.#scaleBitmap(scaledWidth, scaledHeight);\n      }\n      const ctx = canvas.getContext(\"2d\");\n      ctx.filter = this._uiManager.hcmFilter;\n      let white = \"white\",\n        black = \"#cfcfd8\";\n      if (this._uiManager.hcmFilter !== \"none\") {\n        black = \"black\";\n      } else if (ColorScheme.isDarkMode) {\n        white = \"#8f8f9d\";\n        black = \"#42414d\";\n      }\n      const boxDim = 15;\n      const boxDimWidth = boxDim * outputScale.sx;\n      const boxDimHeight = boxDim * outputScale.sy;\n      const pattern = new OffscreenCanvas(boxDimWidth * 2, boxDimHeight * 2);\n      const patternCtx = pattern.getContext(\"2d\");\n      patternCtx.fillStyle = white;\n      patternCtx.fillRect(0, 0, boxDimWidth * 2, boxDimHeight * 2);\n      patternCtx.fillStyle = black;\n      patternCtx.fillRect(0, 0, boxDimWidth, boxDimHeight);\n      patternCtx.fillRect(boxDimWidth, boxDimHeight, boxDimWidth, boxDimHeight);\n      ctx.fillStyle = ctx.createPattern(pattern, \"repeat\");\n      ctx.fillRect(0, 0, scaledWidth, scaledHeight);\n      ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, scaledWidth, scaledHeight);\n    }\n    let imageData = null;\n    if (createImageData) {\n      let dataWidth, dataHeight;\n      if (outputScale.symmetric && bitmap.width < maxDataDimension && bitmap.height < maxDataDimension) {\n        dataWidth = bitmap.width;\n        dataHeight = bitmap.height;\n      } else {\n        bitmap = this.#bitmap;\n        if (bitmapWidth > maxDataDimension || bitmapHeight > maxDataDimension) {\n          const ratio = Math.min(maxDataDimension / bitmapWidth, maxDataDimension / bitmapHeight);\n          dataWidth = Math.floor(bitmapWidth * ratio);\n          dataHeight = Math.floor(bitmapHeight * ratio);\n          if (!this.#isSvg) {\n            bitmap = this.#scaleBitmap(dataWidth, dataHeight);\n          }\n        }\n      }\n      const offscreen = new OffscreenCanvas(dataWidth, dataHeight);\n      const offscreenCtx = offscreen.getContext(\"2d\", {\n        willReadFrequently: true\n      });\n      offscreenCtx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, dataWidth, dataHeight);\n      imageData = {\n        width: dataWidth,\n        height: dataHeight,\n        data: offscreenCtx.getImageData(0, 0, dataWidth, dataHeight).data\n      };\n    }\n    return {\n      canvas,\n      width,\n      height,\n      imageData\n    };\n  }\n  #scaleBitmap(width, height) {\n    const {\n      width: bitmapWidth,\n      height: bitmapHeight\n    } = this.#bitmap;\n    let newWidth = bitmapWidth;\n    let newHeight = bitmapHeight;\n    let bitmap = this.#bitmap;\n    while (newWidth > 2 * width || newHeight > 2 * height) {\n      const prevWidth = newWidth;\n      const prevHeight = newHeight;\n      if (newWidth > 2 * width) {\n        newWidth = newWidth >= 16384 ? Math.floor(newWidth / 2) - 1 : Math.ceil(newWidth / 2);\n      }\n      if (newHeight > 2 * height) {\n        newHeight = newHeight >= 16384 ? Math.floor(newHeight / 2) - 1 : Math.ceil(newHeight / 2);\n      }\n      const offscreen = new OffscreenCanvas(newWidth, newHeight);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(bitmap, 0, 0, prevWidth, prevHeight, 0, 0, newWidth, newHeight);\n      bitmap = offscreen.transferToImageBitmap();\n    }\n    return bitmap;\n  }\n  #drawBitmap() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const {\n      width,\n      height\n    } = this;\n    const outputScale = new OutputScale();\n    const scaledWidth = Math.ceil(width * parentWidth * outputScale.sx);\n    const scaledHeight = Math.ceil(height * parentHeight * outputScale.sy);\n    const canvas = this.#canvas;\n    if (!canvas || canvas.width === scaledWidth && canvas.height === scaledHeight) {\n      return;\n    }\n    canvas.width = scaledWidth;\n    canvas.height = scaledHeight;\n    const bitmap = this.#isSvg ? this.#bitmap : this.#scaleBitmap(scaledWidth, scaledHeight);\n    const ctx = canvas.getContext(\"2d\");\n    ctx.filter = this._uiManager.hcmFilter;\n    ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, scaledWidth, scaledHeight);\n  }\n  #serializeBitmap(toUrl) {\n    if (toUrl) {\n      if (this.#isSvg) {\n        const url = this._uiManager.imageManager.getSvgUrl(this.#bitmapId);\n        if (url) {\n          return url;\n        }\n      }\n      const canvas = document.createElement(\"canvas\");\n      ({\n        width: canvas.width,\n        height: canvas.height\n      } = this.#bitmap);\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(this.#bitmap, 0, 0);\n      return canvas.toDataURL();\n    }\n    if (this.#isSvg) {\n      const [pageWidth, pageHeight] = this.pageDimensions;\n      const width = Math.round(this.width * pageWidth * PixelsPerInch.PDF_TO_CSS_UNITS);\n      const height = Math.round(this.height * pageHeight * PixelsPerInch.PDF_TO_CSS_UNITS);\n      const offscreen = new OffscreenCanvas(width, height);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(this.#bitmap, 0, 0, this.#bitmap.width, this.#bitmap.height, 0, 0, width, height);\n      return offscreen.transferToImageBitmap();\n    }\n    return structuredClone(this.#bitmap);\n  }\n  static async deserialize(data, parent, uiManager) {\n    let initialData = null;\n    let missingCanvas = false;\n    if (data instanceof StampAnnotationElement) {\n      const {\n        data: {\n          rect,\n          rotation,\n          id,\n          structParent,\n          popupRef,\n          richText,\n          contentsObj,\n          creationDate,\n          modificationDate\n        },\n        container,\n        parent: {\n          page: {\n            pageNumber\n          }\n        },\n        canvas\n      } = data;\n      let bitmapId, bitmap;\n      if (canvas) {\n        delete data.canvas;\n        ({\n          id: bitmapId,\n          bitmap\n        } = uiManager.imageManager.getFromCanvas(container.id, canvas));\n        canvas.remove();\n      } else {\n        missingCanvas = true;\n        data._hasNoCanvas = true;\n      }\n      const altText = (await parent._structTree.getAriaAttributes(`${AnnotationPrefix}${id}`))?.get(\"aria-label\") || \"\";\n      initialData = data = {\n        annotationType: AnnotationEditorType.STAMP,\n        bitmapId,\n        bitmap,\n        pageIndex: pageNumber - 1,\n        rect: rect.slice(0),\n        rotation,\n        annotationElementId: id,\n        id,\n        deleted: false,\n        accessibilityData: {\n          decorative: false,\n          altText\n        },\n        isSvg: false,\n        structParent,\n        popupRef,\n        richText,\n        comment: contentsObj?.str || null,\n        creationDate,\n        modificationDate\n      };\n    }\n    const editor = await super.deserialize(data, parent, uiManager);\n    const {\n      rect,\n      bitmap,\n      bitmapUrl,\n      bitmapId,\n      isSvg,\n      accessibilityData\n    } = data;\n    if (missingCanvas) {\n      uiManager.addMissingCanvas(data.id, editor);\n      editor.#missingCanvas = true;\n    } else if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) {\n      editor.#bitmapId = bitmapId;\n      if (bitmap) {\n        editor.#bitmap = bitmap;\n      }\n    } else {\n      editor.#bitmapUrl = bitmapUrl;\n    }\n    editor.#isSvg = isSvg;\n    const [parentWidth, parentHeight] = editor.pageDimensions;\n    editor.width = (rect[2] - rect[0]) / parentWidth;\n    editor.height = (rect[3] - rect[1]) / parentHeight;\n    if (accessibilityData) {\n      editor.altTextData = accessibilityData;\n    }\n    editor._initialData = initialData;\n    if (data.comment) {\n      editor.setCommentData(data);\n    }\n    editor.#hasBeenAddedInUndoStack = !!initialData;\n    return editor;\n  }\n  serialize(isForCopying = false, context = null) {\n    if (this.isEmpty()) {\n      return null;\n    }\n    if (this.deleted) {\n      return this.serializeDeleted();\n    }\n    const serialized = Object.assign(super.serialize(isForCopying), {\n      bitmapId: this.#bitmapId,\n      isSvg: this.#isSvg\n    });\n    this.addComment(serialized);\n    if (isForCopying) {\n      serialized.bitmapUrl = this.#serializeBitmap(true);\n      serialized.accessibilityData = this.serializeAltText(true);\n      serialized.isCopy = true;\n      return serialized;\n    }\n    const {\n      decorative,\n      altText\n    } = this.serializeAltText(false);\n    if (!decorative && altText) {\n      serialized.accessibilityData = {\n        type: \"Figure\",\n        alt: altText\n      };\n    }\n    if (this.annotationElementId) {\n      const changes = this.#hasElementChanged(serialized);\n      if (changes.isSame) {\n        return null;\n      }\n      if (changes.isSameAltText) {\n        delete serialized.accessibilityData;\n      } else {\n        serialized.accessibilityData.structParent = this._initialData.structParent ?? -1;\n      }\n      serialized.id = this.annotationElementId;\n      delete serialized.bitmapId;\n      return serialized;\n    }\n    if (context === null) {\n      return serialized;\n    }\n    context.stamps ||= new Map();\n    const area = this.#isSvg ? (serialized.rect[2] - serialized.rect[0]) * (serialized.rect[3] - serialized.rect[1]) : null;\n    if (!context.stamps.has(this.#bitmapId)) {\n      context.stamps.set(this.#bitmapId, {\n        area,\n        serialized\n      });\n      serialized.bitmap = this.#serializeBitmap(false);\n    } else if (this.#isSvg) {\n      const prevData = context.stamps.get(this.#bitmapId);\n      if (area > prevData.area) {\n        prevData.area = area;\n        prevData.serialized.bitmap.close();\n        prevData.serialized.bitmap = this.#serializeBitmap(false);\n      }\n    }\n    return serialized;\n  }\n  #hasElementChanged(serialized) {\n    const {\n      pageIndex,\n      accessibilityData: {\n        altText\n      }\n    } = this._initialData;\n    const isSamePageIndex = serialized.pageIndex === pageIndex;\n    const isSameAltText = (serialized.accessibilityData?.alt || \"\") === altText;\n    return {\n      isSame: !this.hasEditedComment && !this._hasBeenMoved && !this._hasBeenResized && isSamePageIndex && isSameAltText,\n      isSameAltText\n    };\n  }\n  renderAnnotationElement(annotation) {\n    if (this.deleted) {\n      annotation.hide();\n      return null;\n    }\n    annotation.updateEdited({\n      rect: this.getPDFRect(),\n      popup: this.comment\n    });\n    return null;\n  }\n}\n\n;// ./src/display/editor/annotation_editor_layer.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass AnnotationEditorLayer {\n  #accessibilityManager;\n  #allowClick = false;\n  #annotationLayer = null;\n  #clickAC = null;\n  #editorFocusTimeoutId = null;\n  #editors = new Map();\n  #hadPointerDown = false;\n  #isDisabling = false;\n  #isEnabling = false;\n  #drawingAC = null;\n  #focusedElement = null;\n  #textLayer = null;\n  #textSelectionAC = null;\n  #textLayerDblClickAC = null;\n  #lastPointerDownTimestamp = -1;\n  #uiManager;\n  static _initialized = false;\n  static #editorTypes = new Map([FreeTextEditor, InkEditor, StampEditor, HighlightEditor, SignatureEditor].map(type => [type._editorType, type]));\n  constructor({\n    uiManager,\n    pageIndex,\n    div,\n    structTreeLayer,\n    accessibilityManager,\n    annotationLayer,\n    drawLayer,\n    textLayer,\n    viewport,\n    l10n\n  }) {\n    const editorTypes = [...AnnotationEditorLayer.#editorTypes.values()];\n    if (!AnnotationEditorLayer._initialized) {\n      AnnotationEditorLayer._initialized = true;\n      for (const editorType of editorTypes) {\n        editorType.initialize(l10n, uiManager);\n      }\n    }\n    uiManager.registerEditorTypes(editorTypes);\n    this.#uiManager = uiManager;\n    this.pageIndex = pageIndex;\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationLayer = annotationLayer;\n    this.viewport = viewport;\n    this.#textLayer = textLayer;\n    this.drawLayer = drawLayer;\n    this._structTree = structTreeLayer;\n    this.#uiManager.addLayer(this);\n  }\n  get isEmpty() {\n    return this.#editors.size === 0;\n  }\n  get isInvisible() {\n    return this.isEmpty && this.#uiManager.getMode() === AnnotationEditorType.NONE;\n  }\n  updateToolbar(options) {\n    this.#uiManager.updateToolbar(options);\n  }\n  updateMode(mode = this.#uiManager.getMode()) {\n    this.#cleanup();\n    switch (mode) {\n      case AnnotationEditorType.NONE:\n        this.div.classList.toggle(\"nonEditing\", true);\n        this.disableTextSelection();\n        this.togglePointerEvents(false);\n        this.toggleAnnotationLayerPointerEvents(true);\n        this.disableClick();\n        return;\n      case AnnotationEditorType.INK:\n        this.disableTextSelection();\n        this.togglePointerEvents(true);\n        this.enableClick();\n        break;\n      case AnnotationEditorType.HIGHLIGHT:\n        this.enableTextSelection();\n        this.togglePointerEvents(false);\n        this.disableClick();\n        break;\n      default:\n        this.disableTextSelection();\n        this.togglePointerEvents(true);\n        this.enableClick();\n    }\n    this.toggleAnnotationLayerPointerEvents(false);\n    const {\n      classList\n    } = this.div;\n    classList.toggle(\"nonEditing\", false);\n    if (mode === AnnotationEditorType.POPUP) {\n      classList.toggle(\"commentEditing\", true);\n    } else {\n      classList.toggle(\"commentEditing\", false);\n      for (const editorType of AnnotationEditorLayer.#editorTypes.values()) {\n        classList.toggle(`${editorType._type}Editing`, mode === editorType._editorType);\n      }\n    }\n    this.div.hidden = false;\n  }\n  hasTextLayer(textLayer) {\n    return textLayer === this.#textLayer?.div;\n  }\n  setEditingState(isEditing) {\n    this.#uiManager.setEditingState(isEditing);\n  }\n  addCommands(params) {\n    this.#uiManager.addCommands(params);\n  }\n  cleanUndoStack(type) {\n    this.#uiManager.cleanUndoStack(type);\n  }\n  toggleDrawing(enabled = false) {\n    this.div.classList.toggle(\"drawing\", !enabled);\n  }\n  togglePointerEvents(enabled = false) {\n    this.div.classList.toggle(\"disabled\", !enabled);\n  }\n  toggleAnnotationLayerPointerEvents(enabled = false) {\n    this.#annotationLayer?.div.classList.toggle(\"disabled\", !enabled);\n  }\n  get #allEditorsIterator() {\n    return this.#editors.size !== 0 ? this.#editors.values() : this.#uiManager.getEditors(this.pageIndex);\n  }\n  async enable() {\n    this.#isEnabling = true;\n    this.div.tabIndex = 0;\n    this.togglePointerEvents(true);\n    this.div.classList.toggle(\"nonEditing\", false);\n    this.#textLayerDblClickAC?.abort();\n    this.#textLayerDblClickAC = null;\n    const annotationElementIds = new Set();\n    for (const editor of this.#allEditorsIterator) {\n      editor.enableEditing();\n      editor.show(true);\n      if (editor.annotationElementId) {\n        this.#uiManager.removeChangedExistingAnnotation(editor);\n        annotationElementIds.add(editor.annotationElementId);\n      }\n    }\n    const annotationLayer = this.#annotationLayer;\n    if (annotationLayer) {\n      for (const editable of annotationLayer.getEditableAnnotations()) {\n        editable.hide();\n        if (this.#uiManager.isDeletedAnnotationElement(editable.data.id)) {\n          continue;\n        }\n        if (annotationElementIds.has(editable.data.id)) {\n          continue;\n        }\n        const editor = await this.deserialize(editable);\n        if (!editor) {\n          continue;\n        }\n        this.addOrRebuild(editor);\n        editor.enableEditing();\n      }\n    }\n    this.#isEnabling = false;\n    this.#uiManager._eventBus.dispatch(\"editorsrendered\", {\n      source: this,\n      pageNumber: this.pageIndex + 1\n    });\n  }\n  disable() {\n    this.#isDisabling = true;\n    this.div.tabIndex = -1;\n    this.togglePointerEvents(false);\n    this.div.classList.toggle(\"nonEditing\", true);\n    if (this.#textLayer && !this.#textLayerDblClickAC) {\n      this.#textLayerDblClickAC = new AbortController();\n      const signal = this.#uiManager.combinedSignal(this.#textLayerDblClickAC);\n      this.#textLayer.div.addEventListener(\"pointerdown\", e => {\n        const DBL_CLICK_THRESHOLD = 500;\n        const {\n          clientX,\n          clientY,\n          timeStamp\n        } = e;\n        const lastPointerDownTimestamp = this.#lastPointerDownTimestamp;\n        if (timeStamp - lastPointerDownTimestamp > DBL_CLICK_THRESHOLD) {\n          this.#lastPointerDownTimestamp = timeStamp;\n          return;\n        }\n        this.#lastPointerDownTimestamp = -1;\n        const {\n          classList\n        } = this.div;\n        classList.toggle(\"getElements\", true);\n        const elements = document.elementsFromPoint(clientX, clientY);\n        classList.toggle(\"getElements\", false);\n        if (!this.div.contains(elements[0])) {\n          return;\n        }\n        let id;\n        const regex = new RegExp(`^${AnnotationEditorPrefix}[0-9]+$`);\n        for (const element of elements) {\n          if (regex.test(element.id)) {\n            id = element.id;\n            break;\n          }\n        }\n        if (!id) {\n          return;\n        }\n        const editor = this.#editors.get(id);\n        if (editor?.annotationElementId === null) {\n          e.stopPropagation();\n          e.preventDefault();\n          editor.dblclick(e);\n        }\n      }, {\n        signal,\n        capture: true\n      });\n    }\n    const annotationLayer = this.#annotationLayer;\n    if (annotationLayer) {\n      const changedAnnotations = new Map();\n      const resetAnnotations = new Map();\n      for (const editor of this.#allEditorsIterator) {\n        editor.disableEditing();\n        if (!editor.annotationElementId) {\n          editor.updateFakeAnnotationElement(annotationLayer);\n          continue;\n        }\n        if (editor.serialize() !== null) {\n          changedAnnotations.set(editor.annotationElementId, editor);\n          continue;\n        } else {\n          resetAnnotations.set(editor.annotationElementId, editor);\n        }\n        this.getEditableAnnotation(editor.annotationElementId)?.show();\n        editor.remove();\n      }\n      const editables = annotationLayer.getEditableAnnotations();\n      for (const editable of editables) {\n        const {\n          id\n        } = editable.data;\n        if (this.#uiManager.isDeletedAnnotationElement(id)) {\n          editable.updateEdited({\n            deleted: true\n          });\n          continue;\n        }\n        let editor = resetAnnotations.get(id);\n        if (editor) {\n          editor.resetAnnotationElement(editable);\n          editor.show(false);\n          editable.show();\n          continue;\n        }\n        editor = changedAnnotations.get(id);\n        if (editor) {\n          this.#uiManager.addChangedExistingAnnotation(editor);\n          if (editor.renderAnnotationElement(editable)) {\n            editor.show(false);\n          }\n        }\n        editable.show();\n      }\n    }\n    this.#cleanup();\n    if (this.isEmpty) {\n      this.div.hidden = true;\n    }\n    const {\n      classList\n    } = this.div;\n    for (const editorType of AnnotationEditorLayer.#editorTypes.values()) {\n      classList.remove(`${editorType._type}Editing`);\n    }\n    this.disableTextSelection();\n    this.toggleAnnotationLayerPointerEvents(true);\n    this.#isDisabling = false;\n  }\n  getEditableAnnotation(id) {\n    return this.#annotationLayer?.getEditableAnnotation(id) || null;\n  }\n  setActiveEditor(editor) {\n    const currentActive = this.#uiManager.getActive();\n    if (currentActive === editor) {\n      return;\n    }\n    this.#uiManager.setActiveEditor(editor);\n  }\n  enableTextSelection() {\n    this.div.tabIndex = -1;\n    if (this.#textLayer?.div && !this.#textSelectionAC) {\n      this.#textSelectionAC = new AbortController();\n      const signal = this.#uiManager.combinedSignal(this.#textSelectionAC);\n      this.#textLayer.div.addEventListener(\"pointerdown\", this.#textLayerPointerDown.bind(this), {\n        signal\n      });\n      this.#textLayer.div.classList.add(\"highlighting\");\n    }\n  }\n  disableTextSelection() {\n    this.div.tabIndex = 0;\n    if (this.#textLayer?.div && this.#textSelectionAC) {\n      this.#textSelectionAC.abort();\n      this.#textSelectionAC = null;\n      this.#textLayer.div.classList.remove(\"highlighting\");\n    }\n  }\n  #textLayerPointerDown(event) {\n    this.#uiManager.unselectAll();\n    const {\n      target\n    } = event;\n    if (target === this.#textLayer.div || (target.getAttribute(\"role\") === \"img\" || target.classList.contains(\"endOfContent\")) && this.#textLayer.div.contains(target)) {\n      const {\n        isMac\n      } = util_FeatureTest.platform;\n      if (event.button !== 0 || event.ctrlKey && isMac) {\n        return;\n      }\n      this.#uiManager.showAllEditors(\"highlight\", true, true);\n      this.#textLayer.div.classList.add(\"free\");\n      this.toggleDrawing();\n      HighlightEditor.startHighlighting(this, this.#uiManager.direction === \"ltr\", {\n        target: this.#textLayer.div,\n        x: event.x,\n        y: event.y\n      });\n      this.#textLayer.div.addEventListener(\"pointerup\", () => {\n        this.#textLayer.div.classList.remove(\"free\");\n        this.toggleDrawing(true);\n      }, {\n        once: true,\n        signal: this.#uiManager._signal\n      });\n      event.preventDefault();\n    }\n  }\n  enableClick() {\n    if (this.#clickAC) {\n      return;\n    }\n    this.#clickAC = new AbortController();\n    const signal = this.#uiManager.combinedSignal(this.#clickAC);\n    this.div.addEventListener(\"pointerdown\", this.pointerdown.bind(this), {\n      signal\n    });\n    const pointerup = this.pointerup.bind(this);\n    this.div.addEventListener(\"pointerup\", pointerup, {\n      signal\n    });\n    this.div.addEventListener(\"pointercancel\", pointerup, {\n      signal\n    });\n  }\n  disableClick() {\n    this.#clickAC?.abort();\n    this.#clickAC = null;\n  }\n  attach(editor) {\n    this.#editors.set(editor.id, editor);\n    const {\n      annotationElementId\n    } = editor;\n    if (annotationElementId && this.#uiManager.isDeletedAnnotationElement(annotationElementId)) {\n      this.#uiManager.removeDeletedAnnotationElement(editor);\n    }\n  }\n  detach(editor) {\n    this.#editors.delete(editor.id);\n    this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n    if (!this.#isDisabling && editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor);\n    }\n  }\n  remove(editor) {\n    this.detach(editor);\n    this.#uiManager.removeEditor(editor);\n    editor.div.remove();\n    editor.isAttachedToDOM = false;\n  }\n  changeParent(editor) {\n    if (editor.parent === this) {\n      return;\n    }\n    if (editor.parent && editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);\n      AnnotationEditor.deleteAnnotationElement(editor);\n      editor.annotationElementId = null;\n    }\n    this.attach(editor);\n    editor.parent?.detach(editor);\n    editor.setParent(this);\n    if (editor.div && editor.isAttachedToDOM) {\n      editor.div.remove();\n      this.div.append(editor.div);\n    }\n  }\n  add(editor) {\n    if (editor.parent === this && editor.isAttachedToDOM) {\n      return;\n    }\n    this.changeParent(editor);\n    this.#uiManager.addEditor(editor);\n    this.attach(editor);\n    if (!editor.isAttachedToDOM) {\n      const div = editor.render();\n      this.div.append(div);\n      editor.isAttachedToDOM = true;\n    }\n    editor.fixAndSetPosition();\n    editor.onceAdded(!this.#isEnabling);\n    this.#uiManager.addToAnnotationStorage(editor);\n    editor._reportTelemetry(editor.telemetryInitialData);\n  }\n  moveEditorInDOM(editor) {\n    if (!editor.isAttachedToDOM) {\n      return;\n    }\n    const {\n      activeElement\n    } = document;\n    if (editor.div.contains(activeElement) && !this.#editorFocusTimeoutId) {\n      editor._focusEventsAllowed = false;\n      this.#editorFocusTimeoutId = setTimeout(() => {\n        this.#editorFocusTimeoutId = null;\n        if (!editor.div.contains(document.activeElement)) {\n          editor.div.addEventListener(\"focusin\", () => {\n            editor._focusEventsAllowed = true;\n          }, {\n            once: true,\n            signal: this.#uiManager._signal\n          });\n          activeElement.focus();\n        } else {\n          editor._focusEventsAllowed = true;\n        }\n      }, 0);\n    }\n    editor._structTreeParentId = this.#accessibilityManager?.moveElementInDOM(this.div, editor.div, editor.contentDiv, true);\n  }\n  addOrRebuild(editor) {\n    if (editor.needsToBeRebuilt()) {\n      editor.parent ||= this;\n      editor.rebuild();\n      editor.show();\n    } else {\n      this.add(editor);\n    }\n  }\n  addUndoableEditor(editor) {\n    const cmd = () => editor._uiManager.rebuild(editor);\n    const undo = () => {\n      editor.remove();\n    };\n    this.addCommands({\n      cmd,\n      undo,\n      mustExec: false\n    });\n  }\n  getEditorByUID(uid) {\n    for (const editor of this.#editors.values()) {\n      if (editor.uid === uid) {\n        return editor;\n      }\n    }\n    return null;\n  }\n  getNextId() {\n    return this.#uiManager.getId();\n  }\n  get #currentEditorType() {\n    return AnnotationEditorLayer.#editorTypes.get(this.#uiManager.getMode());\n  }\n  combinedSignal(ac) {\n    return this.#uiManager.combinedSignal(ac);\n  }\n  #createNewEditor(params) {\n    const editorType = this.#currentEditorType;\n    return editorType ? new editorType.prototype.constructor(params) : null;\n  }\n  canCreateNewEmptyEditor() {\n    return this.#currentEditorType?.canCreateNewEmptyEditor();\n  }\n  async pasteEditor(options, params) {\n    this.updateToolbar(options);\n    await this.#uiManager.updateMode(options.mode);\n    const {\n      offsetX,\n      offsetY\n    } = this.#getCenterPoint();\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: offsetX,\n      y: offsetY,\n      uiManager: this.#uiManager,\n      isCentered: true,\n      ...params\n    });\n    if (editor) {\n      this.add(editor);\n    }\n  }\n  async deserialize(data) {\n    return (await AnnotationEditorLayer.#editorTypes.get(data.annotationType ?? data.annotationEditorType)?.deserialize(data, this, this.#uiManager)) || null;\n  }\n  createAndAddNewEditor(event, isCentered, data = {}) {\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: event.offsetX,\n      y: event.offsetY,\n      uiManager: this.#uiManager,\n      isCentered,\n      ...data\n    });\n    if (editor) {\n      this.add(editor);\n    }\n    return editor;\n  }\n  get boundingClientRect() {\n    return this.div.getBoundingClientRect();\n  }\n  #getCenterPoint() {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.boundingClientRect;\n    const tlX = Math.max(0, x);\n    const tlY = Math.max(0, y);\n    const brX = Math.min(window.innerWidth, x + width);\n    const brY = Math.min(window.innerHeight, y + height);\n    const centerX = (tlX + brX) / 2 - x;\n    const centerY = (tlY + brY) / 2 - y;\n    const [offsetX, offsetY] = this.viewport.rotation % 180 === 0 ? [centerX, centerY] : [centerY, centerX];\n    return {\n      offsetX,\n      offsetY\n    };\n  }\n  addNewEditor(data = {}) {\n    this.createAndAddNewEditor(this.#getCenterPoint(), true, data);\n  }\n  setSelected(editor) {\n    this.#uiManager.setSelected(editor);\n  }\n  toggleSelected(editor) {\n    this.#uiManager.toggleSelected(editor);\n  }\n  unselect(editor) {\n    this.#uiManager.unselect(editor);\n  }\n  pointerup(event) {\n    const {\n      isMac\n    } = util_FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      return;\n    }\n    if (event.target !== this.div) {\n      return;\n    }\n    if (!this.#hadPointerDown) {\n      return;\n    }\n    this.#hadPointerDown = false;\n    if (this.#currentEditorType?.isDrawer && this.#currentEditorType.supportMultipleDrawings) {\n      return;\n    }\n    if (!this.#allowClick) {\n      this.#allowClick = true;\n      return;\n    }\n    const currentMode = this.#uiManager.getMode();\n    if (currentMode === AnnotationEditorType.STAMP || currentMode === AnnotationEditorType.SIGNATURE) {\n      this.#uiManager.unselectAll();\n      return;\n    }\n    this.createAndAddNewEditor(event, false);\n  }\n  pointerdown(event) {\n    if (this.#uiManager.getMode() === AnnotationEditorType.HIGHLIGHT) {\n      this.enableTextSelection();\n    }\n    if (this.#hadPointerDown) {\n      this.#hadPointerDown = false;\n      return;\n    }\n    const {\n      isMac\n    } = util_FeatureTest.platform;\n    if (event.button !== 0 || event.ctrlKey && isMac) {\n      return;\n    }\n    if (event.target !== this.div) {\n      return;\n    }\n    this.#hadPointerDown = true;\n    if (this.#currentEditorType?.isDrawer) {\n      this.startDrawingSession(event);\n      return;\n    }\n    const editor = this.#uiManager.getActive();\n    this.#allowClick = !editor || editor.isEmpty();\n  }\n  startDrawingSession(event) {\n    this.div.focus({\n      preventScroll: true\n    });\n    if (this.#drawingAC) {\n      this.#currentEditorType.startDrawing(this, this.#uiManager, false, event);\n      return;\n    }\n    this.#uiManager.setCurrentDrawingSession(this);\n    this.#drawingAC = new AbortController();\n    const signal = this.#uiManager.combinedSignal(this.#drawingAC);\n    this.div.addEventListener(\"blur\", ({\n      relatedTarget\n    }) => {\n      if (relatedTarget && !this.div.contains(relatedTarget)) {\n        this.#focusedElement = null;\n        this.commitOrRemove();\n      }\n    }, {\n      signal\n    });\n    this.#currentEditorType.startDrawing(this, this.#uiManager, false, event);\n  }\n  pause(on) {\n    if (on) {\n      const {\n        activeElement\n      } = document;\n      if (this.div.contains(activeElement)) {\n        this.#focusedElement = activeElement;\n      }\n      return;\n    }\n    if (this.#focusedElement) {\n      setTimeout(() => {\n        this.#focusedElement?.focus();\n        this.#focusedElement = null;\n      }, 0);\n    }\n  }\n  endDrawingSession(isAborted = false) {\n    if (!this.#drawingAC) {\n      return null;\n    }\n    this.#uiManager.setCurrentDrawingSession(null);\n    this.#drawingAC.abort();\n    this.#drawingAC = null;\n    this.#focusedElement = null;\n    return this.#currentEditorType.endDrawing(isAborted);\n  }\n  findNewParent(editor, x, y) {\n    const layer = this.#uiManager.findParent(x, y);\n    if (layer === null || layer === this) {\n      return false;\n    }\n    layer.changeParent(editor);\n    return true;\n  }\n  commitOrRemove() {\n    if (this.#drawingAC) {\n      this.endDrawingSession();\n      return true;\n    }\n    return false;\n  }\n  onScaleChanging() {\n    if (!this.#drawingAC) {\n      return;\n    }\n    this.#currentEditorType.onScaleChangingWhenDrawing(this);\n  }\n  destroy() {\n    this.commitOrRemove();\n    if (this.#uiManager.getActive()?.parent === this) {\n      this.#uiManager.commitOrRemove();\n      this.#uiManager.setActiveEditor(null);\n    }\n    if (this.#editorFocusTimeoutId) {\n      clearTimeout(this.#editorFocusTimeoutId);\n      this.#editorFocusTimeoutId = null;\n    }\n    for (const editor of this.#editors.values()) {\n      this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n      editor.setParent(null);\n      editor.isAttachedToDOM = false;\n      editor.div.remove();\n    }\n    this.div = null;\n    this.#editors.clear();\n    this.#uiManager.removeLayer(this);\n  }\n  #cleanup() {\n    for (const editor of this.#editors.values()) {\n      if (editor.isEmpty()) {\n        editor.remove();\n      }\n    }\n  }\n  render({\n    viewport\n  }) {\n    this.viewport = viewport;\n    setLayerDimensions(this.div, viewport);\n    for (const editor of this.#uiManager.getEditors(this.pageIndex)) {\n      this.add(editor);\n      editor.rebuild();\n    }\n    this.updateMode();\n  }\n  update({\n    viewport\n  }) {\n    this.#uiManager.commitOrRemove();\n    this.#cleanup();\n    const oldRotation = this.viewport.rotation;\n    const rotation = viewport.rotation;\n    this.viewport = viewport;\n    setLayerDimensions(this.div, {\n      rotation\n    });\n    if (oldRotation !== rotation) {\n      for (const editor of this.#editors.values()) {\n        editor.rotate(rotation);\n      }\n    }\n  }\n  get pageDimensions() {\n    const {\n      pageWidth,\n      pageHeight\n    } = this.viewport.rawDims;\n    return [pageWidth, pageHeight];\n  }\n  get scale() {\n    return this.#uiManager.viewParameters.realScale;\n  }\n}\n\n;// ./src/display/draw_layer.js\n\n\nclass DrawLayer {\n  #parent = null;\n  #mapping = new Map();\n  #toUpdate = new Map();\n  static #id = 0;\n  constructor({\n    pageIndex\n  }) {\n    this.pageIndex = pageIndex;\n  }\n  setParent(parent) {\n    if (!this.#parent) {\n      this.#parent = parent;\n      return;\n    }\n    if (this.#parent !== parent) {\n      if (this.#mapping.size > 0) {\n        for (const root of this.#mapping.values()) {\n          root.remove();\n          parent.append(root);\n        }\n      }\n      this.#parent = parent;\n    }\n  }\n  static get _svgFactory() {\n    return shadow(this, \"_svgFactory\", new DOMSVGFactory());\n  }\n  static #setBox(element, [x, y, width, height]) {\n    const {\n      style\n    } = element;\n    style.top = `${100 * y}%`;\n    style.left = `${100 * x}%`;\n    style.width = `${100 * width}%`;\n    style.height = `${100 * height}%`;\n  }\n  #createSVG() {\n    const svg = DrawLayer._svgFactory.create(1, 1, true);\n    this.#parent.append(svg);\n    svg.setAttribute(\"aria-hidden\", true);\n    return svg;\n  }\n  #createClipPath(defs, pathId) {\n    const clipPath = DrawLayer._svgFactory.createElement(\"clipPath\");\n    defs.append(clipPath);\n    const clipPathId = `clip_${pathId}`;\n    clipPath.setAttribute(\"id\", clipPathId);\n    clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n    const clipPathUse = DrawLayer._svgFactory.createElement(\"use\");\n    clipPath.append(clipPathUse);\n    clipPathUse.setAttribute(\"href\", `#${pathId}`);\n    clipPathUse.classList.add(\"clip\");\n    return clipPathId;\n  }\n  #updateProperties(element, properties) {\n    for (const [key, value] of Object.entries(properties)) {\n      if (value === null) {\n        element.removeAttribute(key);\n      } else {\n        element.setAttribute(key, value);\n      }\n    }\n  }\n  draw(properties, isPathUpdatable = false, hasClip = false) {\n    const id = DrawLayer.#id++;\n    const root = this.#createSVG();\n    const defs = DrawLayer._svgFactory.createElement(\"defs\");\n    root.append(defs);\n    const path = DrawLayer._svgFactory.createElement(\"path\");\n    defs.append(path);\n    const pathId = `path_p${this.pageIndex}_${id}`;\n    path.setAttribute(\"id\", pathId);\n    path.setAttribute(\"vector-effect\", \"non-scaling-stroke\");\n    if (isPathUpdatable) {\n      this.#toUpdate.set(id, path);\n    }\n    const clipPathId = hasClip ? this.#createClipPath(defs, pathId) : null;\n    const use = DrawLayer._svgFactory.createElement(\"use\");\n    root.append(use);\n    use.setAttribute(\"href\", `#${pathId}`);\n    this.updateProperties(root, properties);\n    this.#mapping.set(id, root);\n    return {\n      id,\n      clipPathId: `url(#${clipPathId})`\n    };\n  }\n  drawOutline(properties, mustRemoveSelfIntersections) {\n    const id = DrawLayer.#id++;\n    const root = this.#createSVG();\n    const defs = DrawLayer._svgFactory.createElement(\"defs\");\n    root.append(defs);\n    const path = DrawLayer._svgFactory.createElement(\"path\");\n    defs.append(path);\n    const pathId = `path_p${this.pageIndex}_${id}`;\n    path.setAttribute(\"id\", pathId);\n    path.setAttribute(\"vector-effect\", \"non-scaling-stroke\");\n    let maskId;\n    if (mustRemoveSelfIntersections) {\n      const mask = DrawLayer._svgFactory.createElement(\"mask\");\n      defs.append(mask);\n      maskId = `mask_p${this.pageIndex}_${id}`;\n      mask.setAttribute(\"id\", maskId);\n      mask.setAttribute(\"maskUnits\", \"objectBoundingBox\");\n      const rect = DrawLayer._svgFactory.createElement(\"rect\");\n      mask.append(rect);\n      rect.setAttribute(\"width\", \"1\");\n      rect.setAttribute(\"height\", \"1\");\n      rect.setAttribute(\"fill\", \"white\");\n      const use = DrawLayer._svgFactory.createElement(\"use\");\n      mask.append(use);\n      use.setAttribute(\"href\", `#${pathId}`);\n      use.setAttribute(\"stroke\", \"none\");\n      use.setAttribute(\"fill\", \"black\");\n      use.setAttribute(\"fill-rule\", \"nonzero\");\n      use.classList.add(\"mask\");\n    }\n    const use1 = DrawLayer._svgFactory.createElement(\"use\");\n    root.append(use1);\n    use1.setAttribute(\"href\", `#${pathId}`);\n    if (maskId) {\n      use1.setAttribute(\"mask\", `url(#${maskId})`);\n    }\n    const use2 = use1.cloneNode();\n    root.append(use2);\n    use1.classList.add(\"mainOutline\");\n    use2.classList.add(\"secondaryOutline\");\n    this.updateProperties(root, properties);\n    this.#mapping.set(id, root);\n    return id;\n  }\n  finalizeDraw(id, properties) {\n    this.#toUpdate.delete(id);\n    this.updateProperties(id, properties);\n  }\n  updateProperties(elementOrId, properties) {\n    if (!properties) {\n      return;\n    }\n    const {\n      root,\n      bbox,\n      rootClass,\n      path\n    } = properties;\n    const element = typeof elementOrId === \"number\" ? this.#mapping.get(elementOrId) : elementOrId;\n    if (!element) {\n      return;\n    }\n    if (root) {\n      this.#updateProperties(element, root);\n    }\n    if (bbox) {\n      DrawLayer.#setBox(element, bbox);\n    }\n    if (rootClass) {\n      const {\n        classList\n      } = element;\n      for (const [className, value] of Object.entries(rootClass)) {\n        classList.toggle(className, value);\n      }\n    }\n    if (path) {\n      const defs = element.firstChild;\n      const pathElement = defs.firstChild;\n      this.#updateProperties(pathElement, path);\n    }\n  }\n  updateParent(id, layer) {\n    if (layer === this) {\n      return;\n    }\n    const root = this.#mapping.get(id);\n    if (!root) {\n      return;\n    }\n    layer.#parent.append(root);\n    this.#mapping.delete(id);\n    layer.#mapping.set(id, root);\n  }\n  remove(id) {\n    this.#toUpdate.delete(id);\n    if (this.#parent === null) {\n      return;\n    }\n    this.#mapping.get(id).remove();\n    this.#mapping.delete(id);\n  }\n  destroy() {\n    this.#parent = null;\n    for (const root of this.#mapping.values()) {\n      root.remove();\n    }\n    this.#mapping.clear();\n    this.#toUpdate.clear();\n  }\n}\n\n;// ./src/pdf.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{\n  globalThis._pdfjsTestingUtils = {\n    HighlightOutliner: HighlightOutliner\n  };\n}\nglobalThis.pdfjsLib = {\n  AbortException: AbortException,\n  AnnotationEditorLayer: AnnotationEditorLayer,\n  AnnotationEditorParamsType: AnnotationEditorParamsType,\n  AnnotationEditorType: AnnotationEditorType,\n  AnnotationEditorUIManager: AnnotationEditorUIManager,\n  AnnotationLayer: AnnotationLayer,\n  AnnotationMode: AnnotationMode,\n  AnnotationType: AnnotationType,\n  applyOpacity: applyOpacity,\n  build: build,\n  ColorPicker: ColorPicker,\n  createValidAbsoluteUrl: createValidAbsoluteUrl,\n  CSSConstants: CSSConstants,\n  DOMSVGFactory: DOMSVGFactory,\n  DrawLayer: DrawLayer,\n  FeatureTest: util_FeatureTest,\n  fetchData: fetchData,\n  findContrastColor: findContrastColor,\n  getDocument: getDocument,\n  getFilenameFromUrl: getFilenameFromUrl,\n  getPdfFilenameFromUrl: getPdfFilenameFromUrl,\n  getRGB: getRGB,\n  getUuid: getUuid,\n  getXfaPageViewport: getXfaPageViewport,\n  GlobalWorkerOptions: GlobalWorkerOptions,\n  ImageKind: util_ImageKind,\n  InvalidPDFException: InvalidPDFException,\n  isDataScheme: isDataScheme,\n  isPdfFile: isPdfFile,\n  isValidExplicitDest: isValidExplicitDest,\n  MathClamp: MathClamp,\n  noContextMenu: noContextMenu,\n  normalizeUnicode: normalizeUnicode,\n  OPS: OPS,\n  OutputScale: OutputScale,\n  PasswordResponses: PasswordResponses,\n  PDFDataRangeTransport: PDFDataRangeTransport,\n  PDFDateString: PDFDateString,\n  PDFWorker: PDFWorker,\n  PermissionFlag: PermissionFlag,\n  PixelsPerInch: PixelsPerInch,\n  RenderingCancelledException: RenderingCancelledException,\n  renderRichText: renderRichText,\n  ResponseException: ResponseException,\n  setLayerDimensions: setLayerDimensions,\n  shadow: shadow,\n  SignatureExtractor: SignatureExtractor,\n  stopEvent: stopEvent,\n  SupportedImageMimeTypes: SupportedImageMimeTypes,\n  TextLayer: TextLayer,\n  TouchManager: TouchManager,\n  updateUrlHash: updateUrlHash,\n  Util: Util,\n  VerbosityLevel: VerbosityLevel,\n  version: version,\n  XfaLayer: XfaLayer\n};\n\nexport { AbortException, AnnotationEditorLayer, AnnotationEditorParamsType, AnnotationEditorType, AnnotationEditorUIManager, AnnotationLayer, AnnotationMode, AnnotationType, CSSConstants, ColorPicker, DOMSVGFactory, DrawLayer, util_FeatureTest as FeatureTest, GlobalWorkerOptions, util_ImageKind as ImageKind, InvalidPDFException, MathClamp, OPS, OutputScale, PDFDataRangeTransport, PDFDateString, PDFWorker, PasswordResponses, PermissionFlag, PixelsPerInch, RenderingCancelledException, ResponseException, SignatureExtractor, SupportedImageMimeTypes, TextLayer, TouchManager, Util, VerbosityLevel, XfaLayer, applyOpacity, build, createValidAbsoluteUrl, fetchData, findContrastColor, getDocument, getFilenameFromUrl, getPdfFilenameFromUrl, getRGB, getUuid, getXfaPageViewport, isDataScheme, isPdfFile, isValidExplicitDest, noContextMenu, normalizeUnicode, renderRichText, setLayerDimensions, shadow, stopEvent, updateUrlHash, version };\n\n//# sourceMappingURL=pdf.mjs.map","export abstract class Shape {\n\tstatic tolerance = 2;\n\tpublic abstract transform(matrix: Array<number>): this;\n\n\tstatic applyTransform(p: Array<number>, m: Array<number>): Array<number> {\n\t\tconst xt = p[0] * m[0] + p[1] * m[2] + m[4];\n\t\tconst yt = p[0] * m[1] + p[1] * m[3] + m[5];\n\t\treturn [xt, yt];\n\t}\n}\n","import { Shape } from './Shape.js';\n\nexport class Point extends Shape {\n\tpublic x: number;\n\tpublic y: number;\n\n\tconstructor(x: number, y: number) {\n\t\tsuper();\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tpublic equal(point: Point): boolean {\n\t\treturn point.x === this.x && point.y === this.y;\n\t}\n\n\tpublic transform(matrix: Array<number>): this {\n\t\tconst p = Shape.applyTransform([this.x, this.y], matrix);\n\t\tthis.x = p[0];\n\t\tthis.y = p[1];\n\t\treturn this;\n\t}\n}\n","import { Point } from './Point.js';\nimport { Shape } from './Shape.js';\n\nexport enum LineDirection {\n\tNone = 0,\n\tHorizontal = 1,\n\tVertical,\n}\n\nexport class Line extends Shape {\n\tpublic from: Point;\n\tpublic to: Point;\n\tpublic direction: LineDirection = LineDirection.None;\n\tpublic length: number = 0;\n\tpublic intersections: Array<Point> = [];\n\tpublic gaps: Array<Line> = [];\n\n\tconstructor(from: Point, to: Point) {\n\t\tsuper();\n\t\tthis.from = from;\n\t\tthis.to = to;\n\t\tthis.init();\n\t}\n\n\tprivate init(): void {\n\t\tlet from = this.from;\n\t\tlet to = this.to;\n\n\t\tif (Math.abs(from.y - to.y) < Shape.tolerance) {\n\t\t\tthis.direction = LineDirection.Horizontal;\n\t\t\tto.y = from.y;\n\t\t\tif (from.x > to.x) {\n\t\t\t\tconst temp = from;\n\t\t\t\tfrom = to;\n\t\t\t\tto = temp;\n\t\t\t}\n\t\t\tthis.length = to.x - from.x;\n\t\t} else if (Math.abs(from.x - to.x) < Shape.tolerance) {\n\t\t\tthis.direction = LineDirection.Vertical;\n\t\t\tto.x = from.x;\n\t\t\tif (from.y > to.y) {\n\t\t\t\tconst temp = from;\n\t\t\t\tfrom = to;\n\t\t\t\tto = temp;\n\t\t\t}\n\t\t\tthis.length = to.y - from.y;\n\t\t}\n\n\t\tthis.from = from;\n\t\tthis.to = to;\n\t}\n\n\tprivate _valid: boolean | undefined = undefined;\n\n\tget valid(): boolean {\n\t\tif (this._valid === undefined) {\n\t\t\tthis._valid = this.direction !== LineDirection.None && this.length > Shape.tolerance;\n\t\t}\n\t\treturn this._valid;\n\t}\n\n\tget normalized(): Line {\n\t\tif (this.direction === LineDirection.Horizontal) {\n\t\t\treturn new Line(\n\t\t\t\tnew Point(this.from.x - Shape.tolerance, this.from.y),\n\t\t\t\tnew Point(this.to.x + Shape.tolerance, this.from.y),\n\t\t\t);\n\t\t} else if (this.direction === LineDirection.Vertical) {\n\t\t\treturn new Line(\n\t\t\t\tnew Point(this.from.x, this.from.y - Shape.tolerance),\n\t\t\t\tnew Point(this.from.x, this.to.y + Shape.tolerance),\n\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic addGap(line: Line): void {\n\t\tthis.gaps.push(line);\n\t}\n\n\tpublic containsPoint(p: Point): boolean {\n\t\tif (this.direction === LineDirection.Vertical) {\n\t\t\treturn this.from.x === p.x && p.y >= this.from.y && p.y <= this.to.y;\n\t\t} else if (this.direction === LineDirection.Horizontal) {\n\t\t\treturn this.from.y === p.y && p.x >= this.from.x && p.x <= this.to.x;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// // todo implement\n\t// public containsLine(l:Line):boolean{\n\t//     if(this.direction === LineDirection.Vertical && l.direction === LineDirection.Vertical){\n\t//         return this.from.x === l.from.x\n\t//     }\n\t//     else if(this.direction === LineDirection.Horizontal && l.direction === LineDirection.Horizontal){\n\t//         return this.from.y === l.from.y\n\t//     }\n\t//     return false\n\t// }\n\n\tpublic addIntersectionPoint(point: Point): void {\n\t\tfor (const intPoint of this.intersections) {\n\t\t\tif (intPoint.equal(point)) return;\n\t\t}\n\t\tthis.intersections.push(point);\n\t}\n\n\tpublic intersection(line: Line): Point | undefined {\n\t\tlet result: Point | undefined;\n\n\t\tif (!this.valid || !line.valid) {\n\t\t\treturn result;\n\t\t}\n\n\t\tconst thisNormalized = this.normalized;\n\t\tconst lineNormalized = line.normalized;\n\n\t\tif (this.direction === LineDirection.Horizontal && line.direction === LineDirection.Vertical) {\n\t\t\tconst x = lineNormalized.from.x;\n\t\t\tconst y = thisNormalized.from.y;\n\t\t\tconst isOk =\n\t\t\t\tx > thisNormalized.from.x && x < thisNormalized.to.x && y > lineNormalized.from.y && y < lineNormalized.to.y;\n\n\t\t\tif (isOk) {\n\t\t\t\tconst intPoint = new Point(x, y);\n\t\t\t\tthis.addIntersectionPoint(intPoint);\n\t\t\t\tline.addIntersectionPoint(intPoint);\n\t\t\t\tresult = intPoint;\n\t\t\t}\n\t\t} else if (this.direction === LineDirection.Vertical && line.direction === LineDirection.Horizontal) {\n\t\t\tconst x = thisNormalized.from.x;\n\t\t\tconst y = lineNormalized.from.y;\n\t\t\tconst isOk =\n\t\t\t\tx > lineNormalized.from.x && x < lineNormalized.to.x && y > thisNormalized.from.y && y < thisNormalized.to.y;\n\n\t\t\tif (isOk) {\n\t\t\t\tconst intPoint = new Point(x, y);\n\t\t\t\tthis.addIntersectionPoint(intPoint);\n\t\t\t\tline.addIntersectionPoint(intPoint);\n\t\t\t\tresult = intPoint;\n\t\t\t}\n\t\t}\n\n\t\t// if(result){\n\t\t//     for (const gapLine of this.gaps) {\n\t\t//         if(gapLine.containsPoint(result)) return undefined\n\t\t//     }\n\t\t//\n\t\t//     for (const gapLine of line.gaps) {\n\t\t//         if(gapLine.containsPoint(result)) return undefined\n\t\t//     }\n\t\t// }\n\n\t\treturn result;\n\t}\n\n\tpublic transform(matrix: Array<number>): this {\n\t\tconst p1 = this.from.transform(matrix);\n\t\tconst p2 = this.to.transform(matrix);\n\n\t\tconst x = Math.min(p1.x, p2.x);\n\t\tconst y = Math.min(p1.y, p2.y);\n\n\t\tconst width = Math.abs(p1.x - p2.x);\n\t\tconst height = Math.abs(p1.y - p2.y);\n\n\t\tthis.from = new Point(x, y);\n\t\tthis.to = new Point(x + width, y + height);\n\t\tthis.init();\n\t\treturn this;\n\t}\n}\n","import type { Point } from './Point.js';\n\nexport type TableCell = {\n\tminXY: Point;\n\tmaxXY: Point;\n\twidth: number;\n\theight: number;\n\tcolspan?: number;\n\trowspan?: number;\n\ttext: Array<string>;\n};\n\nexport type TableRow = Array<TableCell>;\n\nexport class TableData {\n\tpublic minXY: Point;\n\tpublic maxXY: Point;\n\tpublic rows: Array<TableRow>;\n\tprivate rowPivots: Array<number>;\n\tprivate colPivots: Array<number>;\n\n\tconstructor(minXY: Point, maxXY: Point, rowPivots: Array<number>, colPivots: Array<number>) {\n\t\tthis.minXY = minXY;\n\t\tthis.maxXY = maxXY;\n\t\tthis.rows = [];\n\t\tthis.rowPivots = rowPivots;\n\t\tthis.colPivots = colPivots;\n\t}\n\n\tpublic findCell(x: number, y: number): TableCell | undefined {\n\t\tif (x >= this.minXY.x && y >= this.minXY.y && x <= this.maxXY.x && y <= this.maxXY.y) {\n\t\t\tfor (const row of this.rows) {\n\t\t\t\tfor (const cell of row) {\n\t\t\t\t\tif (cell.minXY.x <= x && cell.minXY.y <= y && cell.maxXY.x >= x && cell.maxXY.y >= y) {\n\t\t\t\t\t\treturn cell;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tpublic get cellCount() {\n\t\treturn this.rows.reduce((acc, row) => acc + row.length, 0);\n\t}\n\n\tpublic get rowCount() {\n\t\treturn this.rows.length;\n\t}\n\n\tpublic check(): boolean {\n\t\t// const cellCounts:Array<number> = []\n\t\t//\n\t\t// for (const row of this.rows) {\n\t\t//     let cellNum = 0\n\t\t//     for (const cell of row) {\n\t\t//         cellNum += cell.colspan || 1\n\t\t//     }\n\t\t//     cellCounts.push(cellNum)\n\t\t// }\n\t\t//\n\t\t// for (let i = 1; i < cellCounts.length; i++) {\n\t\t//     if (cellCounts[i] !== cellCounts[i - 1]) {\n\t\t//         return false\n\t\t//     }\n\t\t// }\n\n\t\tconst virtualCellCount = (this.colPivots.length - 1) * (this.rowPivots.length - 1);\n\t\tlet allCellCount = 0;\n\n\t\tfor (const row of this.rows) {\n\t\t\tfor (const cell of row) {\n\t\t\t\tconst count = (cell.colspan || 1) * (cell.rowspan || 1);\n\t\t\t\tallCellCount += count;\n\t\t\t}\n\t\t}\n\n\t\tif (virtualCellCount !== allCellCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic toArray(): string[][] {\n\t\tconst tableArr: string[][] = [];\n\t\tfor (const row of this.rows) {\n\t\t\tconst rowArr: string[] = [];\n\t\t\tfor (const cell of row) {\n\t\t\t\tlet text = cell.text.join('');\n\t\t\t\ttext = text.replace(/^[\\s]+|[\\s]+$/g, '');\n\t\t\t\ttext = text.trim();\n\t\t\t\trowArr.push(text);\n\t\t\t}\n\t\t\ttableArr.push(rowArr);\n\t\t}\n\t\treturn tableArr;\n\t}\n}\n","import { Line, LineDirection } from './Line.js';\nimport { Point } from './Point.js';\nimport { Shape } from './Shape.js';\nimport { type TableCell, TableData, type TableRow } from './TableData.js';\n\nexport class Table {\n\tpublic hLines: Array<Line> = [];\n\tpublic vLines: Array<Line> = [];\n\n\tconstructor(line: Line) {\n\t\tif (line.direction === LineDirection.Horizontal) {\n\t\t\tthis.hLines.push(line);\n\t\t} else if (line.direction === LineDirection.Vertical) {\n\t\t\tthis.vLines.push(line);\n\t\t}\n\t}\n\n\tpublic get isValid(): boolean {\n\t\treturn this.hLines.length + this.vLines.length > 4;\n\t}\n\n\tpublic get rowPivots(): Array<number> {\n\t\tconst rowSet: Set<number> = new Set();\n\n\t\tfor (const line of this.hLines) {\n\t\t\trowSet.add(line.from.y);\n\t\t}\n\n\t\treturn [...rowSet].sort((a, b) => a - b);\n\t}\n\n\tpublic get colPivots(): Array<number> {\n\t\tconst colSet: Set<number> = new Set();\n\n\t\tfor (const line of this.vLines) {\n\t\t\tcolSet.add(line.from.x);\n\t\t}\n\n\t\treturn [...colSet].sort((a, b) => a - b);\n\t}\n\n\tpublic add(line: Line): boolean {\n\t\tconst hasIntersection = this.intersection(line);\n\n\t\tif (hasIntersection) {\n\t\t\tif (line.direction === LineDirection.Horizontal) {\n\t\t\t\tthis.hLines.push(line);\n\t\t\t\treturn true;\n\t\t\t} else if (line.direction === LineDirection.Vertical) {\n\t\t\t\tthis.vLines.push(line);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate intersection(line: Line): boolean {\n\t\tlet flag = false;\n\t\tif (!line.valid) return flag;\n\n\t\tif (line.direction === LineDirection.Horizontal) {\n\t\t\tfor (const vLine of this.vLines) {\n\t\t\t\tconst p = line.intersection(vLine);\n\t\t\t\tif (p) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (line.direction === LineDirection.Vertical) {\n\t\t\tfor (const hLine of this.hLines) {\n\t\t\t\tconst p = line.intersection(hLine);\n\t\t\t\tif (p) {\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn flag;\n\t}\n\n\tprivate getSameHorizontal(line: Line): Array<Line> {\n\t\tconst same: Array<Line> = [line];\n\t\tconst other: Array<Line> = [];\n\n\t\twhile (this.hLines.length > 0) {\n\t\t\tconst hLine = this.hLines.shift();\n\t\t\tif (!hLine) continue;\n\n\t\t\tif (hLine.from.y === line.from.y) {\n\t\t\t\tsame.push(hLine);\n\t\t\t} else {\n\t\t\t\tother.push(hLine);\n\t\t\t}\n\t\t}\n\n\t\tthis.hLines = other;\n\t\treturn same;\n\t}\n\n\tprivate getSameVertical(line: Line): Array<Line> {\n\t\tconst same: Array<Line> = [line];\n\t\tconst other: Array<Line> = [];\n\n\t\twhile (this.vLines.length > 0) {\n\t\t\tconst vLine = this.vLines.shift();\n\t\t\tif (!vLine) continue;\n\n\t\t\tif (vLine.from.x === line.from.x) {\n\t\t\t\tsame.push(vLine);\n\t\t\t} else {\n\t\t\t\tother.push(vLine);\n\t\t\t}\n\t\t}\n\n\t\tthis.vLines = other;\n\t\treturn same;\n\t}\n\n\tprivate mergeHorizontalLines(lines: Array<Line>): Line {\n\t\tlines.sort((l1, l2) => l1.from.x - l2.from.x);\n\n\t\tconst minX = lines[0].from.x;\n\t\tconst maxX = lines[lines.length - 1].to.x;\n\n\t\tconst resultLine = new Line(new Point(minX, lines[0].from.y), new Point(maxX, lines[0].from.y));\n\n\t\tfor (let i = 1; i < lines.length; i++) {\n\t\t\tconst prevLine = lines[i - 1];\n\t\t\tconst currLine = lines[i];\n\n\t\t\tif (Math.abs(prevLine.to.x - currLine.from.x) > Shape.tolerance) {\n\t\t\t\tconst gapLine = new Line(\n\t\t\t\t\tnew Point(prevLine.to.x, prevLine.from.y),\n\t\t\t\t\tnew Point(currLine.from.x, currLine.from.y),\n\t\t\t\t);\n\t\t\t\tresultLine.addGap(gapLine);\n\t\t\t}\n\t\t}\n\n\t\treturn resultLine;\n\t}\n\n\tprivate mergeVerticalLines(lines: Array<Line>): Line {\n\t\tlines.sort((l1, l2) => l1.from.y - l2.from.y);\n\n\t\tconst minY = lines[0].from.y;\n\t\tconst maxY = lines[lines.length - 1].to.y;\n\n\t\tconst resultLine = new Line(new Point(lines[0].from.x, minY), new Point(lines[0].from.x, maxY));\n\n\t\tfor (let i = 1; i < lines.length; i++) {\n\t\t\tconst prevLine = lines[i - 1];\n\t\t\tconst currLine = lines[i];\n\n\t\t\tif (Math.abs(prevLine.to.y - currLine.from.y) > Shape.tolerance) {\n\t\t\t\tconst gapLine = new Line(new Point(prevLine.to.x, prevLine.to.y), new Point(prevLine.to.x, currLine.from.y));\n\t\t\t\tresultLine.addGap(gapLine);\n\t\t\t}\n\t\t}\n\n\t\treturn resultLine;\n\t}\n\n\tpublic normalize(): void {\n\t\tthis.hLines = this.hLines.filter((l) => l.intersections.length > 1);\n\t\tthis.vLines = this.vLines.filter((l) => l.intersections.length > 1);\n\n\t\tthis.hLines.sort((l1, l2) => l1.from.y - l2.from.y);\n\t\tthis.vLines.sort((l1, l2) => l1.from.x - l2.from.x);\n\n\t\tconst newHLines: Array<Line> = [];\n\n\t\twhile (this.hLines.length > 0) {\n\t\t\tconst line = this.hLines.shift();\n\t\t\tif (!line) continue;\n\n\t\t\tconst lines = this.getSameHorizontal(line);\n\t\t\tconst merged = this.mergeHorizontalLines(lines);\n\t\t\tnewHLines.push(merged);\n\t\t}\n\n\t\tthis.hLines = newHLines;\n\n\t\tconst newVLines: Array<Line> = [];\n\n\t\twhile (this.vLines.length > 0) {\n\t\t\tconst line = this.vLines.shift();\n\t\t\tif (!line) continue;\n\n\t\t\tconst lines = this.getSameVertical(line);\n\t\t\tconst merged = this.mergeVerticalLines(lines);\n\t\t\tnewVLines.push(merged);\n\t\t}\n\n\t\tthis.vLines = newVLines;\n\t}\n\n\tpublic verticalExists(line: Line, y1: number, y2: number): boolean {\n\t\tif (line.direction !== LineDirection.Vertical) {\n\t\t\tthrow new Error('Line is not vertical');\n\t\t}\n\n\t\tif (y1 >= y2) {\n\t\t\tthrow new Error('y1 must be less than y2');\n\t\t}\n\n\t\tif (line.from.y <= y1 && line.to.y >= y2) {\n\t\t\tfor (const gap of line.gaps) {\n\t\t\t\tif (gap.from.y <= y1 && gap.to.y >= y2) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic horizontalExists(line: Line, x1: number, x2: number): boolean {\n\t\tif (line.direction !== LineDirection.Horizontal) {\n\t\t\tthrow new Error('Line is not horizontal');\n\t\t}\n\n\t\tif (x1 >= x2) {\n\t\t\tthrow new Error('x1 must be less than x2');\n\t\t}\n\n\t\tif (line.from.x <= x1 && line.to.x >= x2) {\n\t\t\tfor (const gap of line.gaps) {\n\t\t\t\tif (gap.from.x <= x1 && gap.to.x >= x2) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate findBottomLineIndex(h2Index: number, xMiddle: number): number {\n\t\tfor (let i = h2Index; i < this.hLines.length; i++) {\n\t\t\tconst hLine = this.hLines[i];\n\t\t\tif (hLine.from.x <= xMiddle && hLine.to.x >= xMiddle) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tprivate findVerticalLineIndexs(topHLine: Line, yMiddle: number): Array<number> {\n\t\tconst result: Array<number> = [];\n\n\t\tfor (let i = 0; i < this.vLines.length; i++) {\n\t\t\tconst vLine = this.vLines[i];\n\t\t\tif (vLine.from.y <= yMiddle && vLine.to.y >= yMiddle && topHLine.intersection(vLine)) {\n\t\t\t\tresult.push(i);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate getRow(h1Index: number, h2Index: number, yMiddle: number): TableRow {\n\t\tconst tableRow: TableRow = [];\n\t\t//const colCount = this.vLines.length -1\n\t\tconst topHLine = this.hLines[h1Index];\n\t\tconst vLineIndexes = this.findVerticalLineIndexs(topHLine, yMiddle);\n\n\t\tfor (let i = 1; i < vLineIndexes.length; i++) {\n\t\t\tconst leftVLine = this.vLines[vLineIndexes[i - 1]];\n\t\t\tconst rightVLine = this.vLines[vLineIndexes[i]];\n\t\t\tconst xMiddle = (leftVLine.from.x + rightVLine.from.x) / 2;\n\t\t\tconst bottomHLineIndex = this.findBottomLineIndex(h2Index, xMiddle);\n\t\t\tconst bottomHLine = this.hLines[bottomHLineIndex];\n\t\t\t// minXY: {x:leftVLine.from.x,y:topHLine.from.y},\n\t\t\t// maxXY: {x:rightVLine.from.x,y:bottomHLine.from.y},\n\t\t\tconst tableCell: TableCell = {\n\t\t\t\tminXY: new Point(leftVLine.from.x, topHLine.from.y),\n\t\t\t\tmaxXY: new Point(rightVLine.from.x, bottomHLine.from.y),\n\t\t\t\twidth: rightVLine.from.x - leftVLine.from.x,\n\t\t\t\theight: bottomHLine.from.y - topHLine.from.y,\n\t\t\t\ttext: [],\n\t\t\t};\n\t\t\tconst colSpan = vLineIndexes[i] - vLineIndexes[i - 1];\n\t\t\tconst rowSpan = bottomHLineIndex - h1Index;\n\n\t\t\tif (colSpan > 1) {\n\t\t\t\ttableCell.colspan = colSpan;\n\t\t\t}\n\t\t\tif (rowSpan > 1) {\n\t\t\t\ttableCell.rowspan = rowSpan;\n\t\t\t}\n\n\t\t\ttableRow.push(tableCell);\n\t\t}\n\n\t\treturn tableRow;\n\t}\n\n\tpublic toData(): TableData {\n\t\tconst rowPivots = this.rowPivots;\n\t\tconst colPivots = this.colPivots;\n\n\t\tconst minXY = new Point(colPivots[0], rowPivots[0]);\n\t\tconst maxXY = new Point(colPivots[colPivots.length - 1], rowPivots[rowPivots.length - 1]);\n\n\t\tconst result: TableData = new TableData(minXY, maxXY, rowPivots, colPivots);\n\n\t\tfor (let h1 = 1; h1 < this.hLines.length; h1++) {\n\t\t\tconst prevHLine = this.hLines[h1 - 1];\n\t\t\tconst currHLine = this.hLines[h1];\n\t\t\tconst YMiddle = (prevHLine.from.y + currHLine.from.y) / 2;\n\t\t\tconst rowData = this.getRow(h1 - 1, h1, YMiddle);\n\t\t\tresult.rows.push(rowData);\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","import { Line, LineDirection } from './Line.js';\nimport { Point } from './Point.js';\nimport type { Rectangle } from './Rectangle.js';\nimport { Shape } from './Shape.js';\nimport { Table } from './Table.js';\nimport type { TableData } from './TableData.js';\n\nexport class LineStore {\n\tpublic hLines: Array<Line> = [];\n\tpublic vLines: Array<Line> = [];\n\n\tpublic add(line: Line): void {\n\t\tif (line.valid) {\n\t\t\tif (line.direction === LineDirection.Horizontal) {\n\t\t\t\tthis.hLines.push(line);\n\t\t\t} else if (line.direction === LineDirection.Vertical) {\n\t\t\t\tthis.vLines.push(line);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic addRectangle(rect: Rectangle): void {\n\t\tfor (const line of rect.getLines()) {\n\t\t\tthis.add(line);\n\t\t}\n\t}\n\n\tpublic getTableData(): Array<TableData> {\n\t\tconst result: Array<TableData> = [];\n\n\t\tconst tables = this.getTables();\n\n\t\tfor (const table of tables) {\n\t\t\tconst data = table.toData();\n\t\t\tif (data) {\n\t\t\t\tresult.push(data);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic getTables(): Array<Table> {\n\t\tconst result: Array<Table> = [];\n\n\t\twhile (this.hLines.length !== 0) {\n\t\t\tconst hLine = this.hLines.shift();\n\t\t\tif (!hLine) continue;\n\n\t\t\tconst filled = this.tryFill(result, hLine);\n\t\t\tif (filled) continue;\n\n\t\t\tconst table = new Table(hLine);\n\t\t\tthis.fillTable(table);\n\t\t\tresult.push(table);\n\t\t}\n\n\t\twhile (this.vLines.length !== 0) {\n\t\t\tconst vLine = this.vLines.shift();\n\t\t\tif (!vLine) continue;\n\n\t\t\tconst filled = this.tryFill(result, vLine);\n\t\t\tif (filled) continue;\n\n\t\t\tconst table = new Table(vLine);\n\t\t\tthis.fillTable(table);\n\t\t\tresult.push(table);\n\t\t}\n\n\t\tconst validTables = result.filter((t) => t.isValid);\n\n\t\tfor (const table of validTables) {\n\t\t\ttable.normalize();\n\t\t}\n\n\t\treturn validTables;\n\t}\n\n\tpublic normalize(): void {\n\t\tthis.normalizeHorizontal();\n\t\tthis.normalizeVertical();\n\t}\n\n\tpublic normalizeHorizontal() {\n\t\tthis.hLines.sort((l1, l2) => l1.from.y - l2.from.y);\n\n\t\tconst newLines: Array<Line> = [];\n\n\t\tlet sameY: Array<Line> = [];\n\t\tfor (const line of this.hLines) {\n\t\t\tif (sameY.length === 0) {\n\t\t\t\tsameY.push(line);\n\t\t\t} else if (Math.abs(sameY[0]?.from.y - line.from.y) < Shape.tolerance) {\n\t\t\t\tsameY.push(line);\n\t\t\t} else {\n\t\t\t\tconst merged = this.margeHorizontalLines(sameY);\n\t\t\t\tnewLines.push(...merged);\n\t\t\t\tsameY = [line];\n\t\t\t}\n\t\t}\n\n\t\tif (sameY.length > 0) {\n\t\t\tconst merged = this.margeHorizontalLines(sameY);\n\t\t\tnewLines.push(...merged);\n\t\t}\n\n\t\tthis.hLines = newLines;\n\t}\n\n\tpublic normalizeVertical() {\n\t\tthis.vLines.sort((l1, l2) => l1.from.x - l2.from.x);\n\n\t\tconst newLines: Array<Line> = [];\n\n\t\tlet sameX: Array<Line> = [];\n\t\tfor (const line of this.vLines) {\n\t\t\tif (sameX.length === 0) {\n\t\t\t\tsameX.push(line);\n\t\t\t} else if (Math.abs(sameX[0]?.from.x - line.from.x) < Shape.tolerance) {\n\t\t\t\tsameX.push(line);\n\t\t\t} else {\n\t\t\t\tconst merged = this.margeVerticalLines(sameX);\n\t\t\t\tnewLines.push(...merged);\n\t\t\t\tsameX = [line];\n\t\t\t}\n\t\t}\n\n\t\tif (sameX.length > 0) {\n\t\t\tconst merged = this.margeVerticalLines(sameX);\n\t\t\tnewLines.push(...merged);\n\t\t}\n\n\t\tthis.vLines = newLines;\n\t}\n\n\tprivate fillTable(table: Table): void {\n\t\tconst newVLines: Array<Line> = [];\n\t\tconst newHLines: Array<Line> = [];\n\n\t\tfor (const vLine of this.vLines) {\n\t\t\tif (!table.add(vLine)) {\n\t\t\t\tnewVLines.push(vLine);\n\t\t\t}\n\t\t}\n\n\t\tfor (const hLine of this.hLines) {\n\t\t\tif (!table.add(hLine)) {\n\t\t\t\tnewHLines.push(hLine);\n\t\t\t}\n\t\t}\n\n\t\tthis.hLines = newHLines;\n\t\tthis.vLines = newVLines;\n\t}\n\n\tprivate tryFill(tables: Array<Table>, line: Line): boolean {\n\t\tfor (const table of tables) {\n\t\t\tif (table.add(line)) {\n\t\t\t\tthis.fillTable(table);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate margeHorizontalLines(sameYLines: Array<Line>): Array<Line> {\n\t\tconst result: Array<Line> = [];\n\t\tsameYLines.sort((l1, l2) => l1.from.x - l2.from.x);\n\n\t\tconst sameY = sameYLines[0]?.from.y;\n\t\tif (sameY === undefined) return result;\n\n\t\tlet minX: number = Number.MAX_SAFE_INTEGER;\n\t\tlet maxX: number = Number.MIN_SAFE_INTEGER;\n\n\t\tfor (const line of sameYLines) {\n\t\t\tif (line.from.x - maxX < Shape.tolerance) {\n\t\t\t\tif (line.from.x < minX) {\n\t\t\t\t\tminX = line.from.x;\n\t\t\t\t}\n\t\t\t\tif (line.to.x > maxX) {\n\t\t\t\t\tmaxX = line.to.x;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (maxX > minX) {\n\t\t\t\t\tresult.push(new Line(new Point(minX, sameY), new Point(maxX, sameY)));\n\t\t\t\t}\n\t\t\t\tminX = line.from.x;\n\t\t\t\tmaxX = line.to.x;\n\t\t\t}\n\t\t}\n\n\t\tconst last = result[result.length - 1];\n\n\t\tif (last) {\n\t\t\tif (last.from.x !== minX && last.to.x !== maxX) {\n\t\t\t\tresult.push(new Line(new Point(minX, sameY), new Point(maxX, sameY)));\n\t\t\t}\n\t\t} else {\n\t\t\tresult.push(new Line(new Point(minX, sameY), new Point(maxX, sameY)));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate margeVerticalLines(sameXLines: Array<Line>): Array<Line> {\n\t\tconst result: Array<Line> = [];\n\t\tsameXLines.sort((l1, l2) => l1.from.y - l2.from.y);\n\n\t\tconst sameX = sameXLines[0]?.from.x;\n\t\tif (sameX === undefined) return result;\n\n\t\tlet minY: number = Number.MAX_SAFE_INTEGER;\n\t\tlet maxY: number = Number.MIN_SAFE_INTEGER;\n\n\t\tfor (const line of sameXLines) {\n\t\t\tif (line.from.y - maxY < Shape.tolerance) {\n\t\t\t\tif (line.from.y < minY) {\n\t\t\t\t\tminY = line.from.y;\n\t\t\t\t}\n\t\t\t\tif (line.to.y > maxY) {\n\t\t\t\t\tmaxY = line.to.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (maxY > minY) {\n\t\t\t\t\tresult.push(new Line(new Point(sameX, minY), new Point(sameX, maxY)));\n\t\t\t\t}\n\t\t\t\tminY = line.from.y;\n\t\t\t\tmaxY = line.to.y;\n\t\t\t}\n\t\t}\n\n\t\tconst last = result[result.length - 1];\n\n\t\tif (last) {\n\t\t\tif (last.from.y !== minY && last.to.y !== maxY) {\n\t\t\t\tresult.push(new Line(new Point(sameX, minY), new Point(sameX, maxY)));\n\t\t\t}\n\t\t} else {\n\t\t\tresult.push(new Line(new Point(sameX, minY), new Point(sameX, maxY)));\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","import { Line } from './Line.js';\nimport { Point } from './Point.js';\nimport { Shape } from './Shape.js';\n\nexport class Rectangle extends Shape {\n\tpublic from: Point;\n\tpublic width: number;\n\tpublic height: number;\n\n\tconstructor(from: Point, width: number, height: number) {\n\t\tsuper();\n\t\tthis.from = from;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\tpublic get to(): Point {\n\t\treturn new Point(this.from.x + this.width, this.from.y + this.height);\n\t}\n\n\tpublic getLines(): Line[] {\n\t\tconst to = this.to;\n\n\t\tconst lines: Array<Line> = [\n\t\t\tnew Line(this.from, new Point(to.x, this.from.y)),\n\t\t\tnew Line(this.from, new Point(this.from.x, to.y)),\n\t\t\tnew Line(new Point(to.x, this.from.y), to),\n\t\t\tnew Line(new Point(this.from.x, to.y), to),\n\t\t];\n\t\treturn lines.filter((l) => l.valid);\n\t}\n\n\tpublic transform(matrix: Array<number>): this {\n\t\tconst p1 = Shape.applyTransform([this.from.x, this.from.y], matrix);\n\t\tconst p2 = Shape.applyTransform([this.from.x + this.width, this.from.y + this.height], matrix);\n\n\t\tconst x = Math.min(p1[0], p2[0]);\n\t\tconst y = Math.min(p1[1], p2[1]);\n\n\t\tconst width = Math.abs(p1[0] - p2[0]);\n\t\tconst height = Math.abs(p1[1] - p2[1]);\n\n\t\tthis.from = new Point(x, y);\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t}\n}\n","export interface HeaderResult {\n\tok: boolean;\n\tstatus?: number;\n\tsize?: number;\n\tisPdf?: boolean;\n\theaders?: Record<string, string>;\n\terror?: Error;\n}\n\n/**\n * Perform an HTTP HEAD request to retrieve the file size and verify existence;\n * when `check` is true, fetch a small range and inspect the magic number to confirm the URL points to a valid PDF.\n * If the server does not support range requests, `isPdf` will be set to `false`.\n * @param url The URL of the PDF file to check. Can be a string or URL object.\n * @param check When `true`, download a small byte range (first 4 bytes) to validate the file signature by checking for '%PDF' magic bytes. Default: `false`.\n * @returns A Promise that resolves to a HeaderResult object containing the response status, size, headers, and PDF validation result.\n */\nexport async function getHeader(url: string | URL, check: boolean = false): Promise<HeaderResult> {\n\ttry {\n\t\t// Try using global fetch when available (browser / Node 18+)\n\t\t// biome-ignore lint/suspicious/noExplicitAny: <unsupported underline type>\n\t\tconst fetch: typeof globalThis.fetch = (globalThis as any).fetch;\n\n\t\tif (typeof fetch === 'function') {\n\t\t\tconst headResp = await fetch(url, { method: 'HEAD' });\n\t\t\tconst headersObj: Record<string, string> = {};\n\t\t\theadResp.headers.forEach((v: string, k: string) => {\n\t\t\t\theadersObj[k] = v;\n\t\t\t});\n\n\t\t\tconst size = headResp.headers.get('content-length')\n\t\t\t\t? parseInt(headResp.headers.get('content-length') as string, 10)\n\t\t\t\t: undefined;\n\n\t\t\tlet isPdf: boolean | undefined;\n\t\t\tif (check) {\n\t\t\t\t// Try range request to fetch initial bytes\n\t\t\t\tconst rangeResp = await fetch(url, { method: 'GET', headers: { Range: 'bytes=0-4' } });\n\t\t\t\tif (rangeResp.ok) {\n\t\t\t\t\tconst buf = new Uint8Array(await rangeResp.arrayBuffer());\n\t\t\t\t\tconst headerStr = Array.from(buf)\n\t\t\t\t\t\t.map((b) => String.fromCharCode(b))\n\t\t\t\t\t\t.join('');\n\t\t\t\t\tisPdf = headerStr.startsWith('%PDF');\n\t\t\t\t} else {\n\t\t\t\t\tisPdf = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { ok: headResp.ok, status: headResp.status, size, isPdf, headers: headersObj };\n\t\t}\n\n\t\tthrow new Error('Fetch API not available');\n\t} catch (error) {\n\t\treturn {\n\t\t\tok: false,\n\t\t\tstatus: undefined,\n\t\t\tsize: undefined,\n\t\t\tisPdf: false,\n\t\t\theaders: {},\n\t\t\terror: new Error(String(error)),\n\t\t};\n\t}\n}\n","import type { ImageKind } from 'pdfjs-dist/legacy/build/pdf.mjs';\n\n/**\n * ImageKindKey\n * - Represents the keys of the ImageKind enum (e.g. \"GRAYSCALE_1BPP\", \"RGB_24BPP\", \"RGBA_32BPP\").\n */\nexport type ImageKindKey = keyof typeof ImageKind;\n\n/**\n * ImageKindValue\n * - Represents the numeric values of the ImageKind enum (e.g. 1, 2, 3).\n */\nexport type ImageKindValue = (typeof ImageKind)[ImageKindKey];\n\nexport class ImageResult {\n\tpages: Array<PageImages> = [];\n\ttotal: number = 0;\n\n\tpublic getPageImage(num: number, name: string): EmbeddedImage | null {\n\t\tfor (const pageData of this.pages) {\n\t\t\tif (pageData.pageNumber === num) {\n\t\t\t\tfor (const img of pageData.images) {\n\t\t\t\t\tif (img.name === name) {\n\t\t\t\t\t\treturn img;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tconstructor(total: number) {\n\t\tthis.total = total;\n\t}\n}\n\n/**\n * PageImages\n * - Represents all embedded images found on a single PDF page.\n * - pageNumber: 1-based page index.\n * - images: Array of EmbeddedImage objects for this page.\n */\nexport interface PageImages {\n\tpageNumber: number;\n\timages: EmbeddedImage[];\n}\n\n/**\n * EmbeddedImage\n * - Normalized representation of an embedded image extracted from the PDF.\n * - `data`: Raw image bytes (e.g. PNG/JPEG) as Uint8Array. Use this for file writing or binary processing.\n * - `dataUrl`: Optional data URL (e.g. \"data:image/png;base64,...\") for directly embedding in <img> src.\n *   Storing both lets consumers choose the most convenient form; consider omitting one to save memory.\n * - `name`: Resource name for the image.\n * - `width` / `height`: Dimensions in pixels.\n * - `kind`: ImageKindValue from indicating the pixel format (e.g. GRAYSCALE_1BPP / RGB_24BPP / RGBA_32BPP).\n */\nexport interface EmbeddedImage {\n\t// Raw binary image data (PNG/JPEG) normalized to Uint8Array.\n\tdata: Uint8Array;\n\n\t// Optional base64 data URL for easy embedding in HTML.\n\tdataUrl: string;\n\n\t// Resource identifier for the image.\n\tname: string;\n\n\t// Image dimensions in pixels.\n\twidth: number;\n\theight: number;\n\n\t// Color format as defined by pdfjs ImageKind numeric values.\n\tkind: ImageKindValue;\n}\n","import * as pdfjs from 'pdfjs-dist/legacy/build/pdf.mjs';\nimport type { Metadata } from 'pdfjs-dist/types/src/display/metadata.js';\n\nconst XMP_DATE_PROPERTIES = [\n\t'xmp:createdate',\n\t'xmp:modifydate',\n\t'xmp:metadatadate',\n\t'xap:createdate',\n\t'xap:modifydate',\n\t'xap:metadatadate',\n];\n\nexport type { Metadata } from 'pdfjs-dist/types/src/display/metadata.js';\n\n/**\n * Node representing a single item in the PDF outline (bookmarks).\n * This mirrors the structure returned by PDF.js' getOutline() API.\n */\nexport interface OutlineNode {\n\t// The visible title of the bookmark / outline entry.\n\ttitle: string;\n\n\t// If true, the title should be rendered in bold.\n\tbold: boolean;\n\n\t// If true, the title should be rendered in italic.\n\titalic: boolean;\n\n\t// Optional RGBA color for the title as a clamped byte array.\n\tcolor: Uint8ClampedArray;\n\n\t// Destination for the outline item. PDF.js may return a named\n\t// destination (string) or an array representing an explicit destination.\n\t// Can be null when no explicit destination is available.\n\t// biome-ignore lint/suspicious/noExplicitAny: <unsupported underline type>\n\tdest: string | Array<any> | null;\n\n\t// If the outline entry points to an external URL, it will be here.\n\turl: string | null;\n\n\t// When PDF.js flags a URL as unsafe the raw value is available here.\n\tunsafeUrl?: string;\n\n\t// Whether the link should open in a new window/tab if rendered.\n\tnewWindow?: boolean;\n\n\t// Number of child entries (if provided by the PDF). May be undefined.\n\tcount?: number;\n\n\t// Child outline items. Type is kept loose to match PDF.js returns.\n\t// biome-ignore lint/suspicious/noExplicitAny: <unsupported underline type>\n\titems: Array<any>;\n}\n\n/**\n * Consolidated date information gathered from different PDF sources.\n * The PDF 'Info' dictionary contains CreationDate / ModDate and\n * the XMP/XAP metadata can contain several timestamps as well. This\n * structure collects those values (if present) as JavaScript Date objects\n * or null when the property exists but cannot be parsed.\n */\nexport type DateNode = {\n\tCreationDate?: Date | null;\n\tModDate?: Date | null;\n\tXmpCreateDate?: Date | null;\n\tXmpModifyDate?: Date | null;\n\tXmpMetadataDate?: Date | null;\n\tXapCreateDate?: Date | null;\n\tXapModifyDate?: Date | null;\n\tXapMetadataDate?: Date | null;\n};\n\n/**\n * Per-page link extraction result.\n * - pageNumber: the physical page index (1-based) within the PDF document.\n * - pageLabel: optional printed page label shown by PDF viewers (e.g. \"iii\", \"1\", \"A-1\");\n *              this can differ from the physical page number and may be undefined\n *              when the document does not provide labels.\n * - links: array of text->URL mappings that were found/overlaid on the page.\n * - width/height: page dimensions in PDF units for the viewport used.\n */\nexport type PageLinkResult = {\n\t// Physical page number (1-based index inside the PDF document).\n\tpageNumber: number;\n\n\t// Optional printed page label as displayed by PDF viewers. May be null/undefined\n\t// if the document does not provide explicit labels for pages.\n\tpageLabel?: string | null;\n\n\t// Hyperlinks that were overlaid or embedded on the page surface. Each entry\n\t// contains the visible text (if any) and the resolved URL.\n\tlinks: Array<{ text: string; url: string }>;\n\n\t// Page width and height for the page viewport that was used when extracting links.\n\twidth: number;\n\theight: number;\n};\n\n/**\n * Aggregated information about a PDF document returned by getInfo().\n * The object contains high-level metadata, outline/bookmark structure,\n * per-page extracted hyperlinks and utility helpers for parsing dates.\n */\nexport class InfoResult {\n\t// Total number of pages in the PDF document (count of physical pages).\n\ttotal: number;\n\n\t/**\n\t * The PDF 'Info' dictionary. Typical fields include title, author, subject,\n\t * Creator, Producer and Creation/Modification dates. The exact structure is\n\t * determined by the PDF and as returned by PDF.js.\n\t */\n\t// biome-ignore lint/suspicious/noExplicitAny: <unsupported underline type>\n\tinfo?: any;\n\n\t// Low-level document metadata object (XMP). Use this to access extended\n\t// properties that are not present in the Info dictionary.\n\tmetadata?: Metadata;\n\n\t/**\n\t * An array of document fingerprint strings provided by PDF.js. Useful\n\t * for caching, de-duplication or identifying a document across runs.\n\t */\n\tfingerprints?: Array<string | null>;\n\n\t/**\n\t * Permission flags for the document as returned by PDF.js (or null).\n\t * These flags indicate capabilities such as printing, copying and\n\t * other restrictions imposed by the PDF security settings.\n\t */\n\tpermission?: number[] | null;\n\n\t/**\n\t * Optional document outline (bookmarks). When present this is the\n\t * hierarchical navigation structure which viewers use for quick access.\n\t */\n\toutline?: Array<OutlineNode> | null;\n\n\t// Results with per-page hyperlink extraction. Empty array by default.\n\tpages: Array<PageLinkResult> = [];\n\n\t/**\n\t * Collects dates from different sources (Info dictionary and XMP/XAP metadata)\n\t * and returns them as a DateNode where available. This helps callers compare\n\t * and choose the most relevant timestamp (for example a creation date vs XMP date).\n\t */\n\tpublic getDateNode(): DateNode {\n\t\tconst result: DateNode = {};\n\n\t\t// The Info dictionary may contain CreationDate/ModDate in PDF date string format.\n\t\t// biome-ignore lint/suspicious/noExplicitAny: <unsupported underline type>\n\t\tconst CreationDate = (this.info as any)?.CreationDate;\n\n\t\tif (CreationDate) {\n\t\t\tresult.CreationDate = pdfjs.PDFDateString.toDateObject(CreationDate);\n\t\t}\n\n\t\t// biome-ignore lint/suspicious/noExplicitAny: <unsupported underline type>\n\t\tconst ModDate = (this.info as any)?.ModDate;\n\n\t\tif (ModDate) {\n\t\t\tresult.ModDate = pdfjs.PDFDateString.toDateObject(ModDate);\n\t\t}\n\n\t\t// If no XMP metadata is present, return the Info-based dates only.\n\t\tif (!this.metadata) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// Extract several XMP/XAP date properties (if present) and attempt to\n\t\t// parse them as ISO-like strings. Parsed values are added to the\n\t\t// corresponding DateNode fields.\n\t\tfor (const prop of XMP_DATE_PROPERTIES) {\n\t\t\tconst value = this.metadata?.get(prop);\n\t\t\tconst date = this.parseISODateString(value);\n\n\t\t\tswitch (prop) {\n\t\t\t\tcase XMP_DATE_PROPERTIES[0]:\n\t\t\t\t\tresult.XmpCreateDate = date;\n\t\t\t\t\tbreak;\n\t\t\t\tcase XMP_DATE_PROPERTIES[1]:\n\t\t\t\t\tresult.XmpModifyDate = date;\n\t\t\t\t\tbreak;\n\t\t\t\tcase XMP_DATE_PROPERTIES[2]:\n\t\t\t\t\tresult.XmpMetadataDate = date;\n\t\t\t\t\tbreak;\n\t\t\t\tcase XMP_DATE_PROPERTIES[3]:\n\t\t\t\t\tresult.XapCreateDate = date;\n\t\t\t\t\tbreak;\n\t\t\t\tcase XMP_DATE_PROPERTIES[4]:\n\t\t\t\t\tresult.XapModifyDate = date;\n\t\t\t\t\tbreak;\n\t\t\t\tcase XMP_DATE_PROPERTIES[5]:\n\t\t\t\t\tresult.XapMetadataDate = date;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Try to parse an ISO-8601 date string from XMP/XAP metadata. If the\n\t * value is falsy or cannot be parsed, undefined is returned to indicate\n\t * absence or unparsable input.\n\t */\n\tprivate parseISODateString(isoDateString: string): Date | undefined {\n\t\tif (!isoDateString) return undefined;\n\n\t\tconst parsedDate = Date.parse(isoDateString);\n\t\tif (!Number.isNaN(parsedDate)) {\n\t\t\treturn new Date(parsedDate);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tconstructor(total: number) {\n\t\tthis.total = total;\n\t}\n}\n","export interface ParseParameters {\n\t/**\n\t * Array of page numbers to parse.\n\t * When provided, only these pages will be parsed and returned in the same order.\n\t * Example: [1, 3, 5]. Parse only one page: [7].\n\t * Default: `undefined`.\n\t */\n\tpartial?: Array<number>;\n\n\t/**\n\t * Parse the first N pages (pages 1..N).\n\t * Ignored when `partial` is provided. If both `first` and `last` are set, they define\n\t * an explicit inclusive page range (first..last) and this \"first N\" semantics is ignored.\n\t * Default: `undefined`.\n\t */\n\tfirst?: number;\n\n\t/**\n\t * Parse the last N pages (pages total-N+1..total).\n\t * Ignored when `partial` is provided. If both `first` and `last` are set, they define\n\t * an explicit inclusive page range (first..last) and this \"last N\" semantics is ignored.\n\t * Default: `undefined`.\n\t */\n\tlast?: number;\n\n\t/**\n\t * Collect per-page metadata such as embedded links, title, pageLabel, and dimensions;\n\t * ISBN, DOI, abstract, and references are work in progress when getInfo() is used.\n\t * Default: `false`.\n\t */\n\tparsePageInfo?: boolean;\n\n\t/**\n\t * Attempt to detect and include hyperlink annotations (e.g. URLs) associated with text.\n\t * Detected links are formatted as Markdown inline links (for example: [text](https://example.com)).\n\t * Default: `false`.\n\t */\n\tparseHyperlinks?: boolean;\n\n\t/**\n\t * Enforce logical line breaks by inserting a newline when the vertical distance\n\t * between text items exceeds `lineThreshold`.\n\t * Useful to preserve paragraph/line structure when text items are emitted as separate segments.\n\t * Default: `true`.\n\t */\n\tlineEnforce?: boolean;\n\n\t/**\n\t * Threshold to decide whether nearby text items belong to different lines.\n\t * Larger values make the parser more likely to start a new line between items.\n\t * Default: `4.6`.\n\t */\n\tlineThreshold?: number;\n\n\t/**\n\t * String inserted between text items on the same line when a sufficiently large horizontal gap is detected.\n\t * Typically used to emulate a cell/column separator (for example, \"\\\\t\" for tabs).\n\t * Default: `'\\t'`.\n\t */\n\tcellSeparator?: string;\n\n\t/**\n\t * Horizontal distance threshold to decide when two text items on the same baseline should be treated as separate cells.\n\t * Larger value produces fewer (wider) cells; smaller value creates more cell breaks.\n\t * Default: `7`.\n\t */\n\tcellThreshold?: number;\n\n\t/**\n\t * Optional string appended at the end of each page's extracted text to mark page boundaries.\n\t * Supports placeholders `page_number` and `total_number` which are substituted accordingly.\n\t * If omitted or empty, no page boundary marker is added.\n\t * Default: `'\\n-- page_number of total_number --'`.\n\t */\n\tpageJoiner?: string;\n\n\t/**\n\t * Optional string used to join text items when returning a page's text.\n\t * If provided, this value is used instead of the default empty-string joining behavior.\n\t * Default: `undefined`.\n\t */\n\titemJoiner?: string;\n\n\t/**\n\t * Minimum image dimension (in pixels) for width or height.\n\t * When set, images where width OR height are below or equal this value will be ignored by `getImage()`.\n\t * Useful for excluding tiny decorative or tracking images.\n\t * Default: `80`.\n\t * Disable: `0`.\n\t */\n\timageThreshold?: number;\n\n\t/**\n\t * Screenshot scale factor: use 1 for the original size, 1.5 for a 50% larger image, etc.\n\t * Default: `1`.\n\t */\n\tscale?: number;\n\n\t/**\n\t * Desired screenshot width in pixels.\n\t * When set, the scale option is ignored.\n\t * Default: `undefined`.\n\t */\n\tdesiredWidth?: number;\n\n\t/**\n\t * Applies to both getImage() and getScreenshot(): include the image as a base64 data URL string.\n\t * Default: `true`.\n\t */\n\timageDataUrl?: boolean;\n\n\t/**\n\t * Applies to both getImage() and getScreenshot(): include the image as a binary buffer.\n\t * Default: `true`.\n\t */\n\timageBuffer?: boolean;\n\n\t/**\n\t * Include marked content items in the items array of TextContent to capture PDF \"marked content\".\n\t * Enables tags (MCID, role/props) and structural/accessibility information useful for mapping text ↔ structure.\n\t * For plain text extraction it's usually false (trade-off: larger output).\n\t * Default: `false`.\n\t */\n\tincludeMarkedContent?: boolean;\n\n\t/**\n\t * When true, text normalization is NOT performed in the worker thread.\n\t * For plain text extraction, normalizing in the worker (false) is usually recommended.\n\t * Default: `false`.\n\t */\n\tdisableNormalization?: boolean;\n}\n\nexport type SafeParseParameters = Required<Pick<ParseParameters, 'lineThreshold' | 'cellThreshold' | 'scale'>> &\n\tParseParameters;\n\nexport function setDefaultParseParameters(params: ParseParameters): SafeParseParameters {\n\tparams.lineThreshold = params?.lineThreshold ?? 4.6;\n\tparams.cellThreshold = params?.cellThreshold ?? 7;\n\tparams.cellSeparator = params?.cellSeparator ?? '\\t';\n\tparams.lineEnforce = params?.lineEnforce ?? true;\n\tparams.pageJoiner = params?.pageJoiner ?? '\\n-- page_number of total_number --';\n\tparams.imageThreshold = params?.imageThreshold ?? 80;\n\n\tparams.imageDataUrl = params?.imageDataUrl ?? true;\n\tparams.imageBuffer = params?.imageBuffer ?? true;\n\tparams.scale = params?.scale ?? 1;\n\n\treturn params as SafeParseParameters;\n}\n","export type MinMax = [number, number, number, number];\n\nexport enum PathGeometry {\n\tundefined = 0,\n\thline = 1,\n\tvline = 2,\n\trectangle = 3,\n}\n\nexport enum DrawOPS {\n\tmoveTo = 0,\n\tlineTo = 1,\n\tcurveTo = 2,\n\tclosePath = 3,\n\trectangle = 4,\n}\n","export interface Screenshot {\n\t// Raw binary image data (PNG/JPEG) normalized to Uint8Array.\n\tdata: Uint8Array;\n\n\t// Optional base64 data URL for easy embedding in HTML.\n\tdataUrl: string;\n\n\tpageNumber: number;\n\n\twidth: number;\n\theight: number;\n\tscale: number;\n}\n\nexport class ScreenshotResult {\n\tpages: Array<Screenshot> = [];\n\ttotal: number = 0;\n\n\tconstructor(total: number) {\n\t\tthis.total = total;\n\t}\n}\n","export interface PageTableResult {\n\tnum: number;\n\ttables: Array<Array<string>>;\n}\n\nexport class TableResult {\n\tpages: Array<PageTableResult> = [];\n\tmergedTables: Array<Array<string>> = [];\n\ttotal: number = 0;\n\n\tconstructor(total: number) {\n\t\tthis.total = total;\n\t}\n}\n","export type HyperlinkPosition = {\n\trect: { left: number; top: number; right: number; bottom: number };\n\turl: string;\n\ttext: string;\n\tused: boolean;\n};\n\nexport interface PageTextResult {\n\tnum: number;\n\ttext: string;\n}\n\nexport class TextResult {\n\tpages: Array<PageTextResult> = [];\n\ttext: string = '';\n\ttotal: number = 0;\n\n\tpublic getPageText(num: number): string {\n\t\tfor (const pageData of this.pages) {\n\t\t\tif (pageData.num === num) return pageData.text;\n\t\t}\n\t\treturn '';\n\t}\n\n\tconstructor(total: number) {\n\t\tthis.total = total;\n\t}\n}\n","import type { PageViewport, PDFDocumentProxy, PDFPageProxy } from 'pdfjs-dist/legacy/build/pdf.mjs';\nimport * as pdfjs from 'pdfjs-dist/legacy/build/pdf.mjs';\nimport type { DocumentInitParameters } from 'pdfjs-dist/types/src/display/api.js';\nimport type { BaseCanvasFactory } from 'pdfjs-dist/types/src/display/canvas_factory.js';\nimport type { PDFObjects } from 'pdfjs-dist/types/src/display/pdf_objects.js';\n\nimport { Line, LineStore, Point, Rectangle } from './geometry/Geometry.js';\nimport type { TableData } from './geometry/TableData.js';\nimport { getHeader, type HeaderResult } from './HeaderResult.js';\nimport { ImageResult, type PageImages } from './ImageResult.js';\nimport { InfoResult, type PageLinkResult } from './InfoResult.js';\nimport { type ParseParameters, setDefaultParseParameters } from './ParseParameters.js';\nimport { type MinMax, PathGeometry } from './PathGeometry.js';\nimport { ScreenshotResult } from './ScreenshotResult.js';\nimport { type PageTableResult, TableResult } from './TableResult.js';\nimport { type HyperlinkPosition, TextResult } from './TextResult.js';\n\n/**\n * Loads PDF documents and exposes helpers for text, image, table, metadata, and screenshot extraction.\n */\nexport class PDFParse {\n\tprivate readonly options: DocumentInitParameters;\n\tprivate doc: PDFDocumentProxy | undefined;\n\tpublic progress: { loaded: number; total: number } = { loaded: -1, total: 0 };\n\n\t/**\n\t * Create a new parser with `DocumentInitParameters`.\n\t * Converts Node.js `Buffer` data to `Uint8Array` automatically and ensures a default verbosity level.\n\t * @param options Initialization parameters.\n\t */\n\tconstructor(options: DocumentInitParameters) {\n\t\tif (options.verbosity === undefined) {\n\t\t\toptions.verbosity = pdfjs.VerbosityLevel.ERRORS;\n\t\t}\n\n\t\tif (typeof Buffer !== 'undefined' && options.data instanceof Buffer) {\n\t\t\toptions.data = new Uint8Array(options.data);\n\t\t}\n\n\t\tthis.options = options;\n\t}\n\n\tpublic async destroy() {\n\t\tif (this.doc) {\n\t\t\tawait this.doc.destroy();\n\t\t\tthis.doc = undefined;\n\t\t}\n\t}\n\n\t// biome-ignore-start lint/suspicious/noExplicitAny: unsupported underline type\n\tpublic static get isNodeJS(): boolean {\n\t\tconst isNodeJS =\n\t\t\ttypeof process === 'object' &&\n\t\t\t`${process}` === '[object process]' &&\n\t\t\t!process.versions.nw &&\n\t\t\t!(\n\t\t\t\tprocess.versions.electron &&\n\t\t\t\ttypeof (process as any).type !== 'undefined' &&\n\t\t\t\t(process as any).type !== 'browser'\n\t\t\t);\n\n\t\treturn isNodeJS;\n\t}\n\n\tpublic static setWorker(workerSrc?: string): string {\n\t\tif (typeof (globalThis as any).pdfjs === 'undefined') {\n\t\t\t(globalThis as any).pdfjs = pdfjs;\n\t\t}\n\n\t\tif (pdfjs?.GlobalWorkerOptions === null) return '';\n\n\t\tif (workerSrc !== undefined) {\n\t\t\tpdfjs.GlobalWorkerOptions.workerSrc = workerSrc;\n\t\t\treturn pdfjs.GlobalWorkerOptions.workerSrc;\n\t\t}\n\n\t\t// if (!PDFParse.isNodeJS) {\n\t\t// \tpdfjs.GlobalWorkerOptions.workerSrc =\n\t\t// \t\t'https://cdn.jsdelivr.net/npm/pdf-parse@latest/dist/browser/pdf.worker.min.mjs';\n\t\t// \treturn pdfjs.GlobalWorkerOptions.workerSrc;\n\t\t// }\n\n\t\treturn pdfjs.GlobalWorkerOptions.workerSrc;\n\t}\n\t// biome-ignore-end lint/suspicious/noExplicitAny: unsupported underline type\n\n\t/**\n\t * Perform an HTTP HEAD request to retrieve the file size and verify existence;\n\t * when `check` is true, fetch a small range and inspect the magic number to confirm the URL points to a valid PDF.\n\t * @param check When `true`, download a small byte range to validate the file signature.\n\t * Default: `false`.\n\t */\n\tpublic async getHeader(check: boolean = false): Promise<HeaderResult> {\n\t\tif (!this.options.url) {\n\t\t\tthrow new Error('getHeader: options.url is not set');\n\t\t}\n\n\t\treturn await getHeader(this.options.url, check);\n\t}\n\n\t/**\n\t * Load document-level metadata (info, outline, permissions, page labels) and optionally gather per-page link details.\n\t * @param params Parse options; set `parsePageInfo` to collect per-page metadata described in `ParseParameters`.\n\t * @returns Aggregated document metadata in an `InfoResult`.\n\t */\n\tpublic async getInfo(params: ParseParameters = {}): Promise<InfoResult> {\n\t\tconst doc = await this.load();\n\t\tconst result = new InfoResult(doc.numPages);\n\n\t\tconst { info, metadata } = await doc.getMetadata();\n\t\tresult.info = info;\n\t\tresult.metadata = metadata;\n\n\t\tresult.fingerprints = doc.fingerprints;\n\t\tresult.outline = await doc.getOutline();\n\t\tresult.permission = await doc.getPermissions();\n\t\tconst pageLabels = await doc.getPageLabels();\n\n\t\tif (params.parsePageInfo) {\n\t\t\tfor (let i: number = 1; i <= result.total; i++) {\n\t\t\t\tif (this.shouldParse(i, result.total, params)) {\n\t\t\t\t\tconst page = await doc.getPage(i);\n\n\t\t\t\t\tconst pageLinkResult = await this.getPageLinks(page);\n\t\t\t\t\tpageLinkResult.pageLabel = pageLabels?.[page.pageNumber];\n\t\t\t\t\tresult.pages.push(pageLinkResult);\n\t\t\t\t\tpage.cleanup();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async getPageLinks(page: PDFPageProxy): Promise<PageLinkResult> {\n\t\tconst viewport = page.getViewport({ scale: 1 });\n\n\t\tconst result: PageLinkResult = {\n\t\t\tpageNumber: page.pageNumber,\n\t\t\tlinks: [],\n\t\t\twidth: viewport.width,\n\t\t\theight: viewport.height,\n\t\t};\n\n\t\t// biome-ignore lint/suspicious/noExplicitAny: <unsupported underline type>\n\t\tconst annotations: Array<any> = (await page.getAnnotations({ intent: 'display' })) || [];\n\n\t\tfor (const i of annotations) {\n\t\t\tif (i.subtype !== 'Link') continue;\n\n\t\t\tconst url: string = i.url ?? i.unsafeUrl;\n\t\t\tif (!url) continue;\n\n\t\t\tconst text: string = i.overlaidText || '';\n\n\t\t\tresult.links.push({ url, text });\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Extract plain text for each requested page, optionally enriching hyperlinks and enforcing line or cell separators.\n\t * @param params Parse options controlling pagination, link handling, and line/cell thresholds.\n\t * @returns A `TextResult` containing page-wise text and a concatenated document string.\n\t */\n\tpublic async getText(params: ParseParameters = {}): Promise<TextResult> {\n\t\tconst doc = await this.load();\n\t\tconst result = new TextResult(doc.numPages);\n\n\t\tfor (let i: number = 1; i <= result.total; i++) {\n\t\t\tif (this.shouldParse(i, result.total, params)) {\n\t\t\t\tconst page = await doc.getPage(i);\n\t\t\t\tconst text = await this.getPageText(page, params, result.total);\n\t\t\t\tresult.pages.push({\n\t\t\t\t\ttext: text,\n\t\t\t\t\tnum: i,\n\t\t\t\t});\n\t\t\t\tpage.cleanup();\n\t\t\t}\n\t\t}\n\n\t\tfor (const page of result.pages) {\n\t\t\tresult.text += `${page.text}\\n\\n`;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async load(): Promise<PDFDocumentProxy> {\n\t\tif (this.doc === undefined) {\n\t\t\tconst loadingTask = pdfjs.getDocument(this.options);\n\n\t\t\tloadingTask.onProgress = (progress: { loaded: number; total: number }) => {\n\t\t\t\tthis.progress = progress;\n\t\t\t};\n\n\t\t\tthis.doc = await loadingTask.promise;\n\t\t}\n\n\t\treturn this.doc;\n\t}\n\n\tprivate shouldParse(currentPage: number, totalPage: number, params: ParseParameters): boolean {\n\t\tparams.partial = params?.partial ?? [];\n\t\tparams.first = params?.first ?? 0;\n\t\tparams.last = params?.last ?? 0;\n\n\t\t// parse specific pages\n\t\tif (params.partial.length > 0) {\n\t\t\tif (params.partial.includes(currentPage)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// parse pagest beetween first..last\n\t\tif (params.first > 0 && params.last > 0) {\n\t\t\tif (currentPage >= params.first && currentPage <= params.last) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// parse first x page\n\t\tif (params.first > 0) {\n\t\t\tif (currentPage <= params.first) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// parse last x page\n\t\tif (params.last > 0) {\n\t\t\tif (currentPage > totalPage - params.last) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async getPageText(page: PDFPageProxy, parseParams: ParseParameters, total: number): Promise<string> {\n\t\tconst viewport = page.getViewport({ scale: 1 });\n\n\t\tconst params = setDefaultParseParameters(parseParams);\n\n\t\tconst textContent = await page.getTextContent({\n\t\t\tincludeMarkedContent: !!params.includeMarkedContent,\n\t\t\tdisableNormalization: !!params.disableNormalization,\n\t\t});\n\n\t\tlet links: Map<string, HyperlinkPosition[]> = new Map();\n\n\t\tif (params.parseHyperlinks) {\n\t\t\tlinks = await this.getHyperlinks(page, viewport);\n\t\t}\n\n\t\tconst strBuf: Array<string> = [];\n\n\t\tlet lastX: number | undefined;\n\t\tlet lastY: number | undefined;\n\n\t\tfor (const item of textContent.items) {\n\t\t\tif (!('str' in item)) continue;\n\n\t\t\tconst tm = item.transform ?? item.transform;\n\t\t\tconst [x, y] = viewport.convertToViewportPoint(tm[4], tm[5]);\n\n\t\t\tif (params.parseHyperlinks) {\n\t\t\t\tconst posArr = links.get(item.str) || [];\n\t\t\t\tconst hit = posArr.find((l) => x >= l.rect.left && x <= l.rect.right && y >= l.rect.top && y <= l.rect.bottom);\n\t\t\t\tif (hit) {\n\t\t\t\t\titem.str = `[${item.str}](${hit.url})`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (params.lineEnforce) {\n\t\t\t\tif (lastY !== undefined && Math.abs(lastY - y) > params.lineThreshold) {\n\t\t\t\t\tconst lastItem = strBuf.length ? strBuf[strBuf.length - 1] : undefined;\n\t\t\t\t\tconst isCurrentItemHasNewLine = item.str.startsWith('\\n') || (item.str.trim() === '' && item.hasEOL);\n\n\t\t\t\t\tif (lastItem?.endsWith('\\n') === false && !isCurrentItemHasNewLine) {\n\t\t\t\t\t\tstrBuf.push('\\n');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (params.cellSeparator) {\n\t\t\t\tif (lastY !== undefined && Math.abs(lastY - y) < params.lineThreshold) {\n\t\t\t\t\tif (lastX !== undefined && Math.abs(lastX - x) > params.cellThreshold) {\n\t\t\t\t\t\titem.str = `${params.cellSeparator}${item.str}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstrBuf.push(item.str);\n\t\t\tlastX = x + item.width;\n\t\t\tlastY = y;\n\n\t\t\tif (item.hasEOL) {\n\t\t\t\tstrBuf.push('\\n');\n\t\t\t}\n\t\t}\n\n\t\tif (params.pageJoiner) {\n\t\t\tlet pageNumber = params.pageJoiner.replace('page_number', `${page.pageNumber}`);\n\t\t\tpageNumber = pageNumber.replace('total_number', `${total}`);\n\t\t\tstrBuf.push(pageNumber);\n\t\t}\n\n\t\tif (params.itemJoiner) {\n\t\t\treturn strBuf.join(params.itemJoiner);\n\t\t}\n\n\t\treturn strBuf.join('');\n\t}\n\n\tprivate async getHyperlinks(page: PDFPageProxy, viewport: PageViewport): Promise<Map<string, HyperlinkPosition[]>> {\n\t\tconst result: Map<string, HyperlinkPosition[]> = new Map();\n\n\t\t// biome-ignore lint/suspicious/noExplicitAny: <unsupported underline type>\n\t\tconst annotations: Array<any> = (await page.getAnnotations({ intent: 'display' })) || [];\n\n\t\tfor (const i of annotations) {\n\t\t\tif (i.subtype !== 'Link') continue;\n\n\t\t\tconst url: string = i.url ?? i.unsafeUrl;\n\t\t\tif (!url) continue;\n\n\t\t\tconst text: string = i.overlaidText;\n\t\t\tif (!text) continue;\n\n\t\t\tconst rectVp = viewport.convertToViewportRectangle(i.rect);\n\t\t\tconst left = Math.min(rectVp[0], rectVp[2]) - 0.5;\n\t\t\tconst top = Math.min(rectVp[1], rectVp[3]) - 0.5;\n\t\t\tconst right = Math.max(rectVp[0], rectVp[2]) + 0.5;\n\t\t\tconst bottom = Math.max(rectVp[1], rectVp[3]) + 0.5;\n\n\t\t\tconst pos: HyperlinkPosition = { rect: { left, top, right, bottom }, url, text, used: false };\n\n\t\t\tconst el = result.get(text);\n\t\t\tif (el) {\n\t\t\t\tel.push(pos);\n\t\t\t} else {\n\t\t\t\tresult.set(text, [pos]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Extract embedded images from requested pages.\n\t *\n\t * Behavior notes:\n\t * - Pages are selected according to ParseParameters (partial, first, last).\n\t * - Images smaller than `params.imageThreshold` (width OR height) are skipped.\n\t * - Returned ImageResult contains per-page PageImages; each image entry includes:\n\t *     - data: Uint8Array (present when params.imageBuffer === true)\n\t *     - dataUrl: string (present when params.imageDataUrl === true)\n\t *     - width, height, kind, name\n\t * - Works in both Node.js (canvas.toBuffer) and browser (canvas.toDataURL) environments.\n\t *\n\t * @param params ParseParameters controlling page selection, thresholds and output format.\n\t * @returns Promise<ImageResult> with extracted images grouped by page.\n\t */\n\tpublic async getImage(params: ParseParameters = {}): Promise<ImageResult> {\n\t\tconst doc = await this.load();\n\t\tconst result = new ImageResult(doc.numPages);\n\t\tsetDefaultParseParameters(params);\n\n\t\tfor (let i: number = 1; i <= result.total; i++) {\n\t\t\tif (this.shouldParse(i, result.total, params)) {\n\t\t\t\tconst page = await doc.getPage(i);\n\t\t\t\tconst ops = await page.getOperatorList();\n\n\t\t\t\tconst pageImages: PageImages = { pageNumber: i, images: [] };\n\t\t\t\tresult.pages.push(pageImages);\n\n\t\t\t\tfor (let j = 0; j < ops.fnArray.length; j++) {\n\t\t\t\t\tif (ops.fnArray[j] === pdfjs.OPS.paintInlineImageXObject || ops.fnArray[j] === pdfjs.OPS.paintImageXObject) {\n\t\t\t\t\t\tconst name = ops.argsArray[j][0];\n\t\t\t\t\t\tconst isCommon = page.commonObjs.has(name);\n\t\t\t\t\t\tconst imgPromise = isCommon\n\t\t\t\t\t\t\t? this.resolveEmbeddedImage(page.commonObjs, name)\n\t\t\t\t\t\t\t: this.resolveEmbeddedImage(page.objs, name);\n\n\t\t\t\t\t\tconst { width, height, kind, data } = await imgPromise;\n\n\t\t\t\t\t\tif (params.imageThreshold) {\n\t\t\t\t\t\t\tif (params.imageThreshold >= width || params.imageThreshold >= height) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// biome-ignore lint/suspicious/noExplicitAny: <underlying library does not contain valid typedefs>\n\t\t\t\t\t\tconst canvasFactory = (doc as any).canvasFactory;\n\n\t\t\t\t\t\tconst canvasAndContext = canvasFactory.create(width, height);\n\t\t\t\t\t\tconst context = canvasAndContext.context;\n\t\t\t\t\t\tlet imgData = null;\n\t\t\t\t\t\tif (kind === pdfjs.ImageKind.RGBA_32BPP) {\n\t\t\t\t\t\t\timgData = context.createImageData(width, height);\n\t\t\t\t\t\t\timgData.data.set(data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\timgData = context.createImageData(width, height);\n\t\t\t\t\t\t\tthis.convertToRGBA({\n\t\t\t\t\t\t\t\tsrc: data,\n\t\t\t\t\t\t\t\tdest: new Uint32Array(imgData.data.buffer),\n\t\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontext.putImageData(imgData, 0, 0);\n\n\t\t\t\t\t\t// Browser and Node.js compatibility\n\t\t\t\t\t\tlet buffer: Uint8Array = new Uint8Array();\n\t\t\t\t\t\tlet dataUrl: string = '';\n\n\t\t\t\t\t\tif (typeof canvasAndContext.canvas.toBuffer === 'function') {\n\t\t\t\t\t\t\t// Node.js environment (canvas package)\n\t\t\t\t\t\t\t// biome-ignore lint/suspicious/noExplicitAny: <underline lib not support>\n\t\t\t\t\t\t\tlet nodeBuffer: any;\n\n\t\t\t\t\t\t\tif (params.imageBuffer) {\n\t\t\t\t\t\t\t\tnodeBuffer = canvasAndContext.canvas.toBuffer('image/png');\n\t\t\t\t\t\t\t\tbuffer = new Uint8Array(nodeBuffer);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (params.imageDataUrl) {\n\t\t\t\t\t\t\t\tif (nodeBuffer) {\n\t\t\t\t\t\t\t\t\tdataUrl = `data:image/png;base64,${nodeBuffer.toString('base64')}`;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnodeBuffer = canvasAndContext.canvas.toBuffer('image/png');\n\t\t\t\t\t\t\t\t\tbuffer = new Uint8Array(nodeBuffer);\n\t\t\t\t\t\t\t\t\tdataUrl = `data:image/png;base64,${nodeBuffer.toString('base64')}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Browser environment\n\t\t\t\t\t\t\tif (params.imageBuffer) {\n\t\t\t\t\t\t\t\tconst imageData = canvasAndContext.context.getImageData(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tcanvasAndContext.canvas.width,\n\t\t\t\t\t\t\t\t\tcanvasAndContext.canvas.height,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbuffer = new Uint8Array(imageData.data);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (params.imageDataUrl) {\n\t\t\t\t\t\t\t\tdataUrl = canvasAndContext.canvas.toDataURL('image/png');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpageImages.images.push({\n\t\t\t\t\t\t\tdata: buffer,\n\t\t\t\t\t\t\tdataUrl,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate convertToRGBA({\n\t\tsrc,\n\t\tdest,\n\t\twidth,\n\t\theight,\n\t\tkind,\n\t}: {\n\t\tsrc: Uint8Array;\n\t\tdest: Uint32Array;\n\t\twidth: number;\n\t\theight: number;\n\t\tkind: number;\n\t}) {\n\t\tif (kind === pdfjs.ImageKind.RGB_24BPP) {\n\t\t\t// RGB 24-bit per pixel\n\t\t\tfor (let i = 0, j = 0; i < src.length; i += 3, j++) {\n\t\t\t\tconst r = src[i];\n\t\t\t\tconst g = src[i + 1];\n\t\t\t\tconst b = src[i + 2];\n\t\t\t\tdest[j] = (255 << 24) | (b << 16) | (g << 8) | r;\n\t\t\t}\n\t\t} else if (kind === pdfjs.ImageKind.GRAYSCALE_1BPP) {\n\t\t\t// Grayscale 1-bit per pixel\n\t\t\tlet pixelIndex = 0;\n\t\t\tfor (let i = 0; i < src.length; i++) {\n\t\t\t\tconst byte = src[i];\n\t\t\t\tfor (let bit = 7; bit >= 0; bit--) {\n\t\t\t\t\tif (pixelIndex >= width * height) break;\n\t\t\t\t\tconst isWhite = ((byte >> bit) & 1) === 1;\n\t\t\t\t\tconst gray = isWhite ? 255 : 0;\n\t\t\t\t\tdest[pixelIndex++] = (255 << 24) | (gray << 16) | (gray << 8) | gray;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (kind === undefined || kind === null) {\n\t\t\t// Unknown or undefined kind - try to infer from data length\n\t\t\tconst bytesPerPixel = src.length / (width * height);\n\t\t\tif (Math.abs(bytesPerPixel - 3) < 0.1) {\n\t\t\t\t// Likely RGB 24BPP\n\t\t\t\tfor (let i = 0, j = 0; i < src.length; i += 3, j++) {\n\t\t\t\t\tconst r = src[i];\n\t\t\t\t\tconst g = src[i + 1];\n\t\t\t\t\tconst b = src[i + 2];\n\t\t\t\t\tdest[j] = (255 << 24) | (b << 16) | (g << 8) | r;\n\t\t\t\t}\n\t\t\t} else if (Math.abs(bytesPerPixel - 4) < 0.1) {\n\t\t\t\t// Likely RGBA 32BPP\n\t\t\t\tfor (let i = 0, j = 0; i < src.length; i += 4, j++) {\n\t\t\t\t\tconst r = src[i];\n\t\t\t\t\tconst g = src[i + 1];\n\t\t\t\t\tconst b = src[i + 2];\n\t\t\t\t\tconst a = src[i + 3];\n\t\t\t\t\tdest[j] = (a << 24) | (b << 16) | (g << 8) | r;\n\t\t\t\t}\n\t\t\t} else if (Math.abs(bytesPerPixel - 1) < 0.1) {\n\t\t\t\t// Likely grayscale 8BPP\n\t\t\t\tfor (let i = 0; i < src.length; i++) {\n\t\t\t\t\tconst gray = src[i];\n\t\t\t\t\tdest[i] = (255 << 24) | (gray << 16) | (gray << 8) | gray;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`convertToRGBA: Cannot infer image format. kind: ${kind}, bytesPerPixel: ${bytesPerPixel}, width: ${width}, height: ${height}, dataLength: ${src.length}`,\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t`convertToRGBA: Unsupported image kind: ${kind}. Available kinds: GRAYSCALE_1BPP=${pdfjs.ImageKind.GRAYSCALE_1BPP}, RGB_24BPP=${pdfjs.ImageKind.RGB_24BPP}, RGBA_32BPP=${pdfjs.ImageKind.RGBA_32BPP}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate resolveEmbeddedImage(\n\t\tpdfObjects: PDFObjects,\n\t\tname: string,\n\t): Promise<{ width: number; height: number; kind: number; data: Uint8Array }> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// biome-ignore lint/suspicious/noExplicitAny: <underlying library does not contain valid typedefs>\n\t\t\tpdfObjects.get(name, (imgData: any) => {\n\t\t\t\tif (imgData) {\n\t\t\t\t\t// Check different possible data sources\n\t\t\t\t\tlet dataBuff: Uint8Array | undefined;\n\n\t\t\t\t\tif (imgData.data instanceof Uint8Array) {\n\t\t\t\t\t\tdataBuff = imgData.data;\n\t\t\t\t\t} else if (imgData.data instanceof Uint8ClampedArray) {\n\t\t\t\t\t\tdataBuff = new Uint8Array(imgData.data);\n\t\t\t\t\t} else if (imgData.data?.buffer) {\n\t\t\t\t\t\t// Typed array with buffer\n\t\t\t\t\t\tdataBuff = new Uint8Array(imgData.data.buffer);\n\t\t\t\t\t} else if (imgData.bitmap) {\n\t\t\t\t\t\t// Some browsers might use bitmap\n\t\t\t\t\t\t// biome-ignore lint/suspicious/noExplicitAny: <underlying library does not contain valid typedefs>\n\t\t\t\t\t\tconst canvasFactory: BaseCanvasFactory = (this.doc as any).canvasFactory;\n\t\t\t\t\t\tconst canvasAndContext = canvasFactory.create(imgData.bitmap.width, imgData.bitmap.height);\n\t\t\t\t\t\tcanvasAndContext.context.drawImage(imgData.bitmap, 0, 0);\n\t\t\t\t\t\tconst imageData = canvasAndContext.context.getImageData(0, 0, imgData.bitmap.width, imgData.bitmap.height);\n\t\t\t\t\t\tdataBuff = new Uint8Array(imageData.data.buffer);\n\t\t\t\t\t} else if (ArrayBuffer.isView(imgData.data)) {\n\t\t\t\t\t\t// Generic typed array\n\t\t\t\t\t\tdataBuff = new Uint8Array(imgData.data.buffer, imgData.data.byteOffset, imgData.data.byteLength);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!dataBuff) {\n\t\t\t\t\t\treject(\n\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t`Image object ${name}: data field is empty or invalid. Available fields: ${Object.keys(imgData).join(', ')}`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dataBuff.length === 0) {\n\t\t\t\t\t\treject(new Error(`Image object ${name}: data buffer is empty (length: 0)`));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({ width: imgData.width, height: imgData.height, kind: imgData.kind, data: dataBuff });\n\t\t\t\t} else {\n\t\t\t\t\treject(new Error(`Image object ${name} not found`));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Render pages to raster screenshots.\n\t *\n\t * Behavior notes:\n\t * - Pages are selected according to ParseParameters (partial, first, last).\n\t * - Use params.scale for zoom; if params.desiredWidth is specified it takes precedence.\n\t * - Each ScreenshotResult page contains:\n\t *     - data: Uint8Array (when params.imageBuffer === true)\n\t *     - dataUrl: string (when params.imageDataUrl === true)\n\t *     - pageNumber, width, height, scale\n\t * - Works in both Node.js (canvas.toBuffer) and browser (canvas.toDataURL) environments.\n\t *\n\t * @param parseParams ParseParameters controlling page selection and render options.\n\t * @returns Promise<ScreenshotResult> with rendered page images.\n\t */\n\tpublic async getScreenshot(parseParams: ParseParameters = {}): Promise<ScreenshotResult> {\n\t\t//const base = new URL('../../node_modules/pdfjs-dist/', import.meta.url);\n\t\t//this.options.cMapUrl = new URL('cmaps/', base).href;\n\t\t//this.options.cMapPacked = true;\n\t\t//this.options.standardFontDataUrl = new URL('legacy/build/standard_fonts/', base).href;\n\n\t\tconst params = setDefaultParseParameters(parseParams);\n\n\t\tconst doc = await this.load();\n\t\tconst result = new ScreenshotResult(doc.numPages);\n\n\t\tif (this.doc === undefined) {\n\t\t\tthrow new Error('PDF document not loaded');\n\t\t}\n\n\t\tfor (let i: number = 1; i <= result.total; i++) {\n\t\t\tif (this.shouldParse(i, result.total, params)) {\n\t\t\t\tconst page = await this.doc.getPage(i);\n\n\t\t\t\tlet viewport = page.getViewport({ scale: params.scale });\n\t\t\t\tif (params.desiredWidth) {\n\t\t\t\t\tviewport = page.getViewport({ scale: 1 });\n\t\t\t\t\t// desiredWidth\n\t\t\t\t\tconst scale = params.desiredWidth / viewport.width;\n\t\t\t\t\tviewport = page.getViewport({ scale: scale });\n\t\t\t\t}\n\n\t\t\t\t// biome-ignore lint/suspicious/noExplicitAny: <underlying library does not contain valid typedefs>\n\t\t\t\tconst canvasFactory = (this.doc as any).canvasFactory;\n\t\t\t\tconst canvasAndContext = canvasFactory.create(viewport.width, viewport.height);\n\t\t\t\tconst renderContext = {\n\t\t\t\t\tcanvasContext: canvasAndContext.context,\n\t\t\t\t\tviewport,\n\t\t\t\t\tcanvas: canvasAndContext.canvas,\n\t\t\t\t};\n\n\t\t\t\tconst renderTask = page.render(renderContext);\n\t\t\t\tawait renderTask.promise;\n\t\t\t\t// Convert the canvas to an image buffer.\n\t\t\t\tlet data: Uint8Array = new Uint8Array();\n\t\t\t\tlet dataUrl: string = '';\n\n\t\t\t\tif (typeof canvasAndContext.canvas.toBuffer === 'function') {\n\t\t\t\t\t// Node.js environment (canvas package)\n\t\t\t\t\t// biome-ignore lint/suspicious/noExplicitAny: <underline lib not support>\n\t\t\t\t\tlet nodeBuffer: any;\n\n\t\t\t\t\tif (params.imageBuffer) {\n\t\t\t\t\t\tnodeBuffer = canvasAndContext.canvas.toBuffer('image/png');\n\t\t\t\t\t\tdata = new Uint8Array(nodeBuffer);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (params.imageDataUrl) {\n\t\t\t\t\t\tif (nodeBuffer) {\n\t\t\t\t\t\t\tdataUrl = `data:image/png;base64,${nodeBuffer.toString('base64')}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnodeBuffer = canvasAndContext.canvas.toBuffer('image/png');\n\t\t\t\t\t\t\tdata = new Uint8Array(nodeBuffer);\n\t\t\t\t\t\t\tdataUrl = `data:image/png;base64,${nodeBuffer.toString('base64')}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Browser environment\n\t\t\t\t\tif (params.imageBuffer) {\n\t\t\t\t\t\tconst imageData = canvasAndContext.context.getImageData(\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tcanvasAndContext.canvas.width,\n\t\t\t\t\t\t\tcanvasAndContext.canvas.height,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdata = new Uint8Array(imageData.data);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (params.imageDataUrl) {\n\t\t\t\t\t\tdataUrl = canvasAndContext.canvas.toDataURL('image/png');\n\t\t\t\t\t\t//const base64 = dataUrl.split(',')[1];\n\t\t\t\t\t\t//const binaryString = atob(base64);\n\t\t\t\t\t\t//data = new Uint8Array(binaryString.length);\n\t\t\t\t\t\t//for (let i = 0; i < binaryString.length; i++) {\n\t\t\t\t\t\t//\tdata[i] = binaryString.charCodeAt(i);\n\t\t\t\t\t\t//}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.pages.push({\n\t\t\t\t\tdata,\n\t\t\t\t\tdataUrl,\n\t\t\t\t\tpageNumber: i,\n\t\t\t\t\twidth: viewport.width,\n\t\t\t\t\theight: viewport.height,\n\t\t\t\t\tscale: viewport.scale,\n\t\t\t\t});\n\n\t\t\t\tpage.cleanup();\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Detect and extract tables from pages by analysing vector drawing operators, then populate cells with text.\n\t *\n\t * Behavior notes:\n\t * - Scans operator lists for rectangles/lines that form table grids (uses PathGeometry and LineStore).\n\t * - Normalizes detected geometry and matches positioned text to table cells.\n\t * - Honors ParseParameters for page selection.\n\t *\n\t * @param params ParseParameters controlling which pages to analyse (partial/first/last).\n\t * @returns Promise<TableResult> containing discovered tables per page.\n\t */\n\tpublic async getTable(params: ParseParameters = {}): Promise<TableResult> {\n\t\tconst doc = await this.load();\n\t\tconst result = new TableResult(doc.numPages);\n\n\t\tif (this.doc === undefined) {\n\t\t\tthrow new Error('PDF document not loaded');\n\t\t}\n\n\t\tfor (let i: number = 1; i <= result.total; i++) {\n\t\t\tif (this.shouldParse(i, result.total, params)) {\n\t\t\t\tconst page = await this.doc.getPage(i);\n\t\t\t\t//const viewport = page.getViewport({ scale: 1 });\n\t\t\t\t//viewport.convertToViewportPoint(0, 0);\n\n\t\t\t\tconst store = await this.getPageTables(page);\n\t\t\t\t//const store = await this.getPageGeometry(page);\n\n\t\t\t\tstore.normalize();\n\n\t\t\t\tconst tableDataArr = store.getTableData();\n\t\t\t\tawait this.fillPageTables(page, tableDataArr);\n\n\t\t\t\tfor (const table of tableDataArr) {\n\t\t\t\t\t//if (table.cellCount < 3) continue\n\t\t\t\t\tconst pageTableResult: PageTableResult = { num: i, tables: table.toArray() };\n\t\t\t\t\tresult.pages.push(pageTableResult);\n\t\t\t\t\t//pageTableResult.tables.push(table.toData())\n\t\t\t\t}\n\n\t\t\t\tpage.cleanup();\n\t\t\t}\n\t\t}\n\n\t\t// for (const table of Table.AllTables) {\n\t\t//     if (table.cellCount < 3) continue\n\t\t//     const str = table.toString()\n\t\t//     console.log(str)\n\t\t// }\n\t\treturn result;\n\t}\n\n\tprivate getPathGeometry(mm: MinMax): PathGeometry {\n\t\tconst width = mm[2] - mm[0];\n\t\tconst height = mm[3] - mm[1];\n\n\t\tif (mm[0] === Infinity) {\n\t\t\treturn PathGeometry.undefined;\n\t\t}\n\n\t\tif (width > 5 && height > 5) {\n\t\t\treturn PathGeometry.rectangle;\n\t\t} else if (width > 5 && height === 0) {\n\t\t\treturn PathGeometry.hline;\n\t\t} else if (width === 0 && height > 5) {\n\t\t\treturn PathGeometry.vline;\n\t\t}\n\n\t\treturn PathGeometry.undefined;\n\t}\n\n\tprivate async getPageTables(page: PDFPageProxy): Promise<LineStore> {\n\t\tconst lineStore: LineStore = new LineStore();\n\t\tconst viewport = page.getViewport({ scale: 1 });\n\t\tlet transformMatrix = [1, 0, 0, 1, 0, 0];\n\t\tconst transformStack: Array<Array<number>> = [];\n\n\t\tconst opList = await page.getOperatorList();\n\n\t\tfor (let i = 0; i < opList.fnArray.length; i++) {\n\t\t\tconst fn = opList.fnArray[i];\n\t\t\tconst args = opList.argsArray[i];\n\t\t\tconst op = args?.[0] ?? 0;\n\t\t\tconst mm = args?.[2] ?? [Infinity, Infinity, -Infinity, -Infinity];\n\t\t\t//const minMax = new Float32Array([Infinity, Infinity, -Infinity, -Infinity]);\n\n\t\t\tif (fn === pdfjs.OPS.constructPath) {\n\t\t\t\tif (op === pdfjs.OPS.fill) {\n\t\t\t\t\t//debugger;\n\t\t\t\t}\n\t\t\t\tif (op !== pdfjs.OPS.stroke) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst pg = this.getPathGeometry(mm);\n\t\t\t\tif (pg === PathGeometry.rectangle) {\n\t\t\t\t\tconst rect = new Rectangle(new Point(mm[0], mm[1]), mm[2] - mm[0], mm[3] - mm[1]);\n\t\t\t\t\trect.transform(transformMatrix);\n\t\t\t\t\trect.transform(viewport.transform);\n\t\t\t\t\tlineStore.addRectangle(rect);\n\t\t\t\t} else if (pg === PathGeometry.hline || pg === PathGeometry.vline) {\n\t\t\t\t\tconst from = new Point(mm[0], mm[1]);\n\t\t\t\t\tconst to = new Point(mm[2], mm[3]);\n\t\t\t\t\tconst line = new Line(from, to);\n\t\t\t\t\tline.transform(transformMatrix);\n\t\t\t\t\tline.transform(viewport.transform);\n\t\t\t\t\tlineStore.add(line);\n\t\t\t\t} else {\n\t\t\t\t\t//debugger;\n\t\t\t\t}\n\n\t\t\t\t// if (op === pdfjs.OPS.rectangle) {\n\t\t\t\t// \tdebugger;\n\t\t\t\t// } else if (op === pdfjs.OPS.moveTo) {\n\t\t\t\t// \tdebugger;\n\t\t\t\t// } else if (op === pdfjs.OPS.lineTo) {\n\t\t\t\t// \tdebugger;\n\t\t\t\t// } else if (op === pdfjs.OPS.endPath) {\n\t\t\t\t// \tconst combinedMatrix = pdfjs.Util.transform(viewport.transform, transformMatrix);\n\n\t\t\t\t// \t// while (args[1].length) {\n\t\t\t\t// \t// \tconst drawOp = args[1].shift();\n\t\t\t\t// \t// \tdebugger;\n\t\t\t\t// \t// }\n\t\t\t\t// } else {\n\t\t\t\t// \t//debugger;\n\t\t\t\t// }\n\t\t\t} else if (fn === pdfjs.OPS.setLineWidth) {\n\t\t\t\t//debugger;\n\t\t\t} else if (fn === pdfjs.OPS.save) {\n\t\t\t\ttransformStack.push(transformMatrix);\n\t\t\t} else if (fn === pdfjs.OPS.restore) {\n\t\t\t\tconst restoredMatrix = transformStack.pop();\n\t\t\t\tif (restoredMatrix) {\n\t\t\t\t\ttransformMatrix = restoredMatrix;\n\t\t\t\t}\n\t\t\t} else if (fn === pdfjs.OPS.transform) {\n\t\t\t\t//transformMatrix = this.transform_fn(transformMatrix, args);\n\t\t\t\ttransformMatrix = pdfjs.Util.transform(transformMatrix, args);\n\t\t\t}\n\t\t}\n\n\t\treturn lineStore;\n\t}\n\n\t// private async getPageGeometry(page: PDFPageProxy): Promise<LineStore> {\n\t// \tconst lineStore: LineStore = new LineStore();\n\t// \tconst opList = await page.getOperatorList();\n\n\t// \tconst viewport = page.getViewport({ scale: 1 });\n\n\t// \tlet transformMatrix = [1, 0, 0, 1, 0, 0];\n\t// \tconst transformStack: Array<Array<number>> = [];\n\n\t// \tlet current_x: number = 0;\n\t// \tlet current_y: number = 0;\n\n\t// \tfor (let j = 0; j < opList.fnArray.length; j++) {\n\t// \t\tconst fn = opList.fnArray[j];\n\t// \t\tconst args = opList.argsArray[j];\n\n\t// \t\tif (fn === pdfjs.OPS.constructPath) {\n\t// \t\t\twhile (args[0].length) {\n\t// \t\t\t\tconst op = args[0].shift();\n\n\t// \t\t\t\tconst combinedMatrix = pdfjs.Util.transform(viewport.transform, transformMatrix);\n\n\t// \t\t\t\tif (op === pdfjs.OPS.rectangle) {\n\t// \t\t\t\t\tconst x = args[1].shift();\n\t// \t\t\t\t\tconst y = args[1].shift();\n\t// \t\t\t\t\tconst width = args[1].shift();\n\t// \t\t\t\t\tconst height = args[1].shift();\n\n\t// \t\t\t\t\tif (Math.min(width, height) <= 2) {\n\t// \t\t\t\t\t\t// TODO remove\n\t// \t\t\t\t\t\tdebugger;\n\t// \t\t\t\t\t}\n\n\t// \t\t\t\t\tconst rect = new Rectangle(new Point(x, y), width, height);\n\t// \t\t\t\t\trect.transform(combinedMatrix);\n\t// \t\t\t\t\t//rect.transform(viewport.transform);\n\n\t// \t\t\t\t\tlineStore.addRectangle(rect);\n\t// \t\t\t\t} else if (op === pdfjs.OPS.moveTo) {\n\t// \t\t\t\t\tcurrent_x = args[1].shift();\n\t// \t\t\t\t\tcurrent_y = args[1].shift();\n\t// \t\t\t\t} else if (op === pdfjs.OPS.lineTo) {\n\t// \t\t\t\t\tconst x = args[1].shift();\n\t// \t\t\t\t\tconst y = args[1].shift();\n\n\t// \t\t\t\t\t//default trasform\n\t// \t\t\t\t\tconst from = new Point(current_x, current_y);\n\t// \t\t\t\t\tconst to = new Point(x, y);\n\t// \t\t\t\t\tconst line = new Line(from, to);\n\t// \t\t\t\t\tline.transform(combinedMatrix);\n\t// \t\t\t\t\t//line.transform(viewport.transform);\n\n\t// \t\t\t\t\t// // viewport transform\n\t// \t\t\t\t\t// const _from = viewport.convertToViewportPoint(line.from.x, line.from.y)\n\t// \t\t\t\t\t// const _to = viewport.convertToViewportPoint(line.to.x, line.to.y)\n\t// \t\t\t\t\t//\n\t// \t\t\t\t\t// const transformedLine = new Line(new Point(_from[0], _from[1]), new Point(_to[0], _to[1]))\n\t// \t\t\t\t\tlineStore.add(line);\n\n\t// \t\t\t\t\tcurrent_x = x;\n\t// \t\t\t\t\tcurrent_y = y;\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t} else if (fn === pdfjs.OPS.save) {\n\t// \t\t\ttransformStack.push(transformMatrix);\n\t// \t\t} else if (fn === pdfjs.OPS.restore) {\n\t// \t\t\tconst restoredMatrix = transformStack.pop();\n\t// \t\t\tif (restoredMatrix) {\n\t// \t\t\t\ttransformMatrix = restoredMatrix;\n\t// \t\t\t}\n\t// \t\t} else if (fn === pdfjs.OPS.transform) {\n\t// \t\t\t//transformMatrix = this.transform_fn(transformMatrix, args);\n\t// \t\t\ttransformMatrix = pdfjs.Util.transform(transformMatrix, args);\n\t// \t\t}\n\t// \t}\n\n\t// \treturn lineStore;\n\t// }\n\n\tprivate async fillPageTables(page: PDFPageProxy, pageTables: Array<TableData>): Promise<void> {\n\t\t//const resultTable: Array<Table> = []\n\n\t\tconst viewport = page.getViewport({ scale: 1 });\n\n\t\t// for (let i = 0; i < pageTables.length; i++) {\n\t\t//     const currentTable = pageTables[i]\n\t\t// }\n\n\t\t//pageTables = pageTables.filter((table) => table.cellCount > 3)\n\n\t\tconst textContent = await page.getTextContent({\n\t\t\tincludeMarkedContent: false,\n\t\t\tdisableNormalization: false,\n\t\t});\n\n\t\tfor (const textItem of textContent.items) {\n\t\t\tif (!('str' in textItem)) continue;\n\n\t\t\tconst tx = pdfjs.Util.transform(\n\t\t\t\tpdfjs.Util.transform(viewport.transform, textItem.transform),\n\t\t\t\t[1, 0, 0, -1, 0, 0],\n\t\t\t);\n\n\t\t\t//const resXY = viewport.convertToViewportPoint(tx[4], tx[5]);\n\t\t\t// textItem.transform = pdfjs.Util.transform(viewport.transform, textItem.transform)\n\t\t\t// textItem.transform[5] = viewport.height - textItem.transform[5] - textItem.height\n\n\t\t\tfor (const pageTable of pageTables) {\n\t\t\t\tconst cell = pageTable.findCell(tx[4], tx[5]);\n\t\t\t\tif (cell) {\n\t\t\t\t\tcell.text.push(textItem.str);\n\t\t\t\t\tif (textItem.hasEOL) {\n\t\t\t\t\t\tcell.text.push('\\n');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Table.tryAddText(pageTables, textItem)\n\t\t}\n\t}\n}\n\n//PDFParse.setWorker();\n","/// <reference types=\"vite/client\" />\nimport * as WorkerUrl from 'pdfjs-dist/legacy/build/pdf.worker.min.mjs?url';\n\nimport { PDFParse } from './PDFParse.js';\n\nPDFParse.setWorker(WorkerUrl.default);\n\nexport { VerbosityLevel } from 'pdfjs-dist/legacy/build/pdf.mjs';\nexport type {\n\tDocumentInitParameters,\n\tPDFDataRangeTransport,\n\tPDFWorker,\n\tTypedArray,\n} from 'pdfjs-dist/types/src/display/api.js';\n\nexport { getHeader, type HeaderResult } from './HeaderResult.js';\nexport type { EmbeddedImage, ImageKindKey, ImageKindValue, ImageResult, PageImages } from './ImageResult.js';\nexport type { DateNode, InfoResult, Metadata, OutlineNode, PageLinkResult } from './InfoResult.js';\nexport type { ParseParameters } from './ParseParameters.js';\nexport type { Screenshot, ScreenshotResult } from './ScreenshotResult.js';\nexport type { PageTableResult, TableResult } from './TableResult.js';\nexport type { PageTextResult, TextResult } from './TextResult.js';\n\n/**\n * The URL of the PDF.\n * -\n * Binary PDF data.\n * Use TypedArrays (Uint8Array) to improve the memory usage. If PDF data is\n * BASE64-encoded, use `atob()` to convert it to a binary string first.\n * https://mozilla.github.io/pdf.js/examples/\n *\n * NOTE: If TypedArrays are used they will generally be transferred to the\n * worker-thread. This will help reduce main-thread memory usage, however\n * it will take ownership of the TypedArrays.\n */\n\nexport { PDFParse };\n"],"names":["__webpack_require__","globalThis","Uint8Array","ceil","floor","TypeError","WeakMap","structuredClone","Promise","SyntaxError","parseInt","activeXDocument","navigator","n","DataView","document","Iterator","Int8Array","Uint8ClampedArray","isView","TypedArray","Set","Error","ArrayBuffer","URL","Symbol","JSON","Number","Node","process","Deno","version","BaseException","self","info","x","y","i","data","mapR","require","k","elem","offsetX","offsetY","clip","obj","verbosity","isEvalSupported","font","rotation","quadPoints","color","opacity","inkLists","tx","ty","offscreen","ctx","rect","bitmapId","bitmap","classList","LineDirection","fetch","pdfjs.PDFDateString","PathGeometry","pdfjs.VerbosityLevel","isNodeJS","pdfjs?.GlobalWorkerOptions","pdfjs.GlobalWorkerOptions","pdfjs.getDocument","pdfjs.OPS","pdfjs.ImageKind","pdfjs.Util","WorkerUrl.default"],"mappings":"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","x_google_ignoreList":[0,1]}